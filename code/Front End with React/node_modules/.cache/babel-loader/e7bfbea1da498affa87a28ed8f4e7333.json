{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _plugin = _interopRequireDefault(require(\"../../plugin\"));\n\nvar _inline_style = _interopRequireDefault(require(\"../../helpers/inline_style\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Marpit image apply plugin.\n *\n * Apply image style and color spot directive based on parsed meta.\n *\n * @alias module:markdown/image/apply\n * @param {MarkdownIt} md markdown-it instance.\n */\n\n\nfunction applyImage(md) {\n  // Build and apply image style\n  md.inline.ruler2.push('marpit_apply_image', ({\n    tokens\n  }) => {\n    for (const token of tokens) {\n      if (token.type === 'image') {\n        const {\n          filters,\n          height,\n          width\n        } = token.meta.marpitImage;\n        const style = new _inline_style.default(token.attrGet('style'));\n        if (width && !width.endsWith('%')) style.set('width', width);\n        if (height && !height.endsWith('%')) style.set('height', height);\n\n        if (filters) {\n          const filterStyle = [];\n\n          for (const fltrs of filters) filterStyle.push(`${fltrs[0]}(${fltrs[1]})`);\n\n          token.meta.marpitImage.filter = filterStyle.join(' ');\n          style.set('filter', token.meta.marpitImage.filter);\n        }\n\n        const stringified = style.toString();\n        if (stringified) token.attrSet('style', stringified);\n      }\n    }\n  }); // Shorthand for color spot directive\n\n  md.core.ruler.after('marpit_inline_svg', 'marpit_apply_color', ({\n    inlineMode,\n    tokens\n  }) => {\n    if (inlineMode) return;\n    let current;\n\n    for (const t of tokens) {\n      if (t.type === 'marpit_slide_open') current = t;\n      if (t.type === 'marpit_slide_close') current = undefined; // Collect parsed inline image meta\n\n      if (current && t.type === 'inline') {\n        for (const tc of t.children) {\n          if (tc.type === 'image') {\n            const {\n              background,\n              color\n            } = tc.meta.marpitImage;\n\n            if (!background && color) {\n              current.meta.marpitDirectives = _objectSpread({}, current.meta.marpitDirectives || {}, {\n                color\n              });\n            }\n          }\n        }\n      }\n    }\n  });\n}\n\nvar _default = (0, _plugin.default)(applyImage);\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/yaozixuan/OneDrive/JHU Semester 2/OOSE/my-app/node_modules/@marp-team/marpit/lib/markdown/image/apply.js"],"names":["Object","defineProperty","exports","value","default","_plugin","_interopRequireDefault","require","_inline_style","obj","__esModule","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","applyImage","md","inline","ruler2","tokens","token","type","filters","height","width","meta","marpitImage","style","attrGet","endsWith","set","filterStyle","fltrs","join","stringified","toString","attrSet","core","ruler","after","inlineMode","current","t","undefined","tc","children","background","color","marpitDirectives","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACC,OAAO,CAAC,cAAD,CAAR,CAApC;;AAEA,IAAIC,aAAa,GAAGF,sBAAsB,CAACC,OAAO,CAAC,4BAAD,CAAR,CAA1C;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEL,IAAAA,OAAO,EAAEK;AAAX,GAArC;AAAwD;;AAE/F,SAASE,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;AAAE,MAAIC,IAAI,GAAGd,MAAM,CAACc,IAAP,CAAYF,MAAZ,CAAX;;AAAgC,MAAIZ,MAAM,CAACe,qBAAX,EAAkC;AAAE,QAAIC,OAAO,GAAGhB,MAAM,CAACe,qBAAP,CAA6BH,MAA7B,CAAd;AAAoD,QAAIC,cAAJ,EAAoBG,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;AAAE,aAAOlB,MAAM,CAACmB,wBAAP,CAAgCP,MAAhC,EAAwCM,GAAxC,EAA6CE,UAApD;AAAiE,KAAjG,CAAV;AAA8GN,IAAAA,IAAI,CAACO,IAAL,CAAUC,KAAV,CAAgBR,IAAhB,EAAsBE,OAAtB;AAAiC;;AAAC,SAAOF,IAAP;AAAc;;AAErV,SAASS,aAAT,CAAuBC,MAAvB,EAA+B;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;;AAAuD,QAAIA,CAAC,GAAG,CAAR,EAAW;AAAEd,MAAAA,OAAO,CAACX,MAAM,CAAC4B,MAAD,CAAP,EAAiB,IAAjB,CAAP,CAA8BC,OAA9B,CAAsC,UAAUC,GAAV,EAAe;AAAEC,QAAAA,eAAe,CAACP,MAAD,EAASM,GAAT,EAAcF,MAAM,CAACE,GAAD,CAApB,CAAf;AAA4C,OAAnG;AAAuG,KAApH,MAA0H,IAAI9B,MAAM,CAACgC,yBAAX,EAAsC;AAAEhC,MAAAA,MAAM,CAACiC,gBAAP,CAAwBT,MAAxB,EAAgCxB,MAAM,CAACgC,yBAAP,CAAiCJ,MAAjC,CAAhC;AAA4E,KAApH,MAA0H;AAAEjB,MAAAA,OAAO,CAACX,MAAM,CAAC4B,MAAD,CAAP,CAAP,CAAwBC,OAAxB,CAAgC,UAAUC,GAAV,EAAe;AAAE9B,QAAAA,MAAM,CAACC,cAAP,CAAsBuB,MAAtB,EAA8BM,GAA9B,EAAmC9B,MAAM,CAACmB,wBAAP,CAAgCS,MAAhC,EAAwCE,GAAxC,CAAnC;AAAmF,OAApI;AAAwI;AAAE;;AAAC,SAAON,MAAP;AAAgB;;AAEthB,SAASO,eAAT,CAAyBtB,GAAzB,EAA8BqB,GAA9B,EAAmC3B,KAAnC,EAA0C;AAAE,MAAI2B,GAAG,IAAIrB,GAAX,EAAgB;AAAET,IAAAA,MAAM,CAACC,cAAP,CAAsBQ,GAAtB,EAA2BqB,GAA3B,EAAgC;AAAE3B,MAAAA,KAAK,EAAEA,KAAT;AAAgBiB,MAAAA,UAAU,EAAE,IAA5B;AAAkCc,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAE1B,IAAAA,GAAG,CAACqB,GAAD,CAAH,GAAW3B,KAAX;AAAmB;;AAAC,SAAOM,GAAP;AAAa;AAEjN;;;;;;;;;;AAQA,SAAS2B,UAAT,CAAoBC,EAApB,EAAwB;AACtB;AACAA,EAAAA,EAAE,CAACC,MAAH,CAAUC,MAAV,CAAiBlB,IAAjB,CAAsB,oBAAtB,EAA4C,CAAC;AAC3CmB,IAAAA;AAD2C,GAAD,KAEtC;AACJ,SAAK,MAAMC,KAAX,IAAoBD,MAApB,EAA4B;AAC1B,UAAIC,KAAK,CAACC,IAAN,KAAe,OAAnB,EAA4B;AAC1B,cAAM;AACJC,UAAAA,OADI;AAEJC,UAAAA,MAFI;AAGJC,UAAAA;AAHI,YAIFJ,KAAK,CAACK,IAAN,CAAWC,WAJf;AAKA,cAAMC,KAAK,GAAG,IAAIxC,aAAa,CAACJ,OAAlB,CAA0BqC,KAAK,CAACQ,OAAN,CAAc,OAAd,CAA1B,CAAd;AACA,YAAIJ,KAAK,IAAI,CAACA,KAAK,CAACK,QAAN,CAAe,GAAf,CAAd,EAAmCF,KAAK,CAACG,GAAN,CAAU,OAAV,EAAmBN,KAAnB;AACnC,YAAID,MAAM,IAAI,CAACA,MAAM,CAACM,QAAP,CAAgB,GAAhB,CAAf,EAAqCF,KAAK,CAACG,GAAN,CAAU,QAAV,EAAoBP,MAApB;;AAErC,YAAID,OAAJ,EAAa;AACX,gBAAMS,WAAW,GAAG,EAApB;;AAEA,eAAK,MAAMC,KAAX,IAAoBV,OAApB,EAA6BS,WAAW,CAAC/B,IAAZ,CAAkB,GAAEgC,KAAK,CAAC,CAAD,CAAI,IAAGA,KAAK,CAAC,CAAD,CAAI,GAAzC;;AAE7BZ,UAAAA,KAAK,CAACK,IAAN,CAAWC,WAAX,CAAuB9B,MAAvB,GAAgCmC,WAAW,CAACE,IAAZ,CAAiB,GAAjB,CAAhC;AACAN,UAAAA,KAAK,CAACG,GAAN,CAAU,QAAV,EAAoBV,KAAK,CAACK,IAAN,CAAWC,WAAX,CAAuB9B,MAA3C;AACD;;AAED,cAAMsC,WAAW,GAAGP,KAAK,CAACQ,QAAN,EAApB;AACA,YAAID,WAAJ,EAAiBd,KAAK,CAACgB,OAAN,CAAc,OAAd,EAAuBF,WAAvB;AAClB;AACF;AACF,GA3BD,EAFsB,CA6BlB;;AAEJlB,EAAAA,EAAE,CAACqB,IAAH,CAAQC,KAAR,CAAcC,KAAd,CAAoB,mBAApB,EAAyC,oBAAzC,EAA+D,CAAC;AAC9DC,IAAAA,UAD8D;AAE9DrB,IAAAA;AAF8D,GAAD,KAGzD;AACJ,QAAIqB,UAAJ,EAAgB;AAChB,QAAIC,OAAJ;;AAEA,SAAK,MAAMC,CAAX,IAAgBvB,MAAhB,EAAwB;AACtB,UAAIuB,CAAC,CAACrB,IAAF,KAAW,mBAAf,EAAoCoB,OAAO,GAAGC,CAAV;AACpC,UAAIA,CAAC,CAACrB,IAAF,KAAW,oBAAf,EAAqCoB,OAAO,GAAGE,SAAV,CAFf,CAEoC;;AAE1D,UAAIF,OAAO,IAAIC,CAAC,CAACrB,IAAF,KAAW,QAA1B,EAAoC;AAClC,aAAK,MAAMuB,EAAX,IAAiBF,CAAC,CAACG,QAAnB,EAA6B;AAC3B,cAAID,EAAE,CAACvB,IAAH,KAAY,OAAhB,EAAyB;AACvB,kBAAM;AACJyB,cAAAA,UADI;AAEJC,cAAAA;AAFI,gBAGFH,EAAE,CAACnB,IAAH,CAAQC,WAHZ;;AAKA,gBAAI,CAACoB,UAAD,IAAeC,KAAnB,EAA0B;AACxBN,cAAAA,OAAO,CAAChB,IAAR,CAAauB,gBAAb,GAAgC9C,aAAa,CAAC,EAAD,EAAKuC,OAAO,CAAChB,IAAR,CAAauB,gBAAb,IAAiC,EAAtC,EAA0C;AACrFD,gBAAAA;AADqF,eAA1C,CAA7C;AAGD;AACF;AACF;AACF;AACF;AACF,GA5BD;AA6BD;;AAED,IAAIE,QAAQ,GAAG,CAAC,GAAGjE,OAAO,CAACD,OAAZ,EAAqBgC,UAArB,CAAf;;AAEAlC,OAAO,CAACE,OAAR,GAAkBkE,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _plugin = _interopRequireDefault(require(\"../../plugin\"));\n\nvar _inline_style = _interopRequireDefault(require(\"../../helpers/inline_style\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Marpit image apply plugin.\n *\n * Apply image style and color spot directive based on parsed meta.\n *\n * @alias module:markdown/image/apply\n * @param {MarkdownIt} md markdown-it instance.\n */\nfunction applyImage(md) {\n  // Build and apply image style\n  md.inline.ruler2.push('marpit_apply_image', ({\n    tokens\n  }) => {\n    for (const token of tokens) {\n      if (token.type === 'image') {\n        const {\n          filters,\n          height,\n          width\n        } = token.meta.marpitImage;\n        const style = new _inline_style.default(token.attrGet('style'));\n        if (width && !width.endsWith('%')) style.set('width', width);\n        if (height && !height.endsWith('%')) style.set('height', height);\n\n        if (filters) {\n          const filterStyle = [];\n\n          for (const fltrs of filters) filterStyle.push(`${fltrs[0]}(${fltrs[1]})`);\n\n          token.meta.marpitImage.filter = filterStyle.join(' ');\n          style.set('filter', token.meta.marpitImage.filter);\n        }\n\n        const stringified = style.toString();\n        if (stringified) token.attrSet('style', stringified);\n      }\n    }\n  }); // Shorthand for color spot directive\n\n  md.core.ruler.after('marpit_inline_svg', 'marpit_apply_color', ({\n    inlineMode,\n    tokens\n  }) => {\n    if (inlineMode) return;\n    let current;\n\n    for (const t of tokens) {\n      if (t.type === 'marpit_slide_open') current = t;\n      if (t.type === 'marpit_slide_close') current = undefined; // Collect parsed inline image meta\n\n      if (current && t.type === 'inline') {\n        for (const tc of t.children) {\n          if (tc.type === 'image') {\n            const {\n              background,\n              color\n            } = tc.meta.marpitImage;\n\n            if (!background && color) {\n              current.meta.marpitDirectives = _objectSpread({}, current.meta.marpitDirectives || {}, {\n                color\n              });\n            }\n          }\n        }\n      }\n    }\n  });\n}\n\nvar _default = (0, _plugin.default)(applyImage);\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}
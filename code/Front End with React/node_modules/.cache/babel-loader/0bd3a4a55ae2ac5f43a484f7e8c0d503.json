{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/** @module */\n\n/**\n * Marpit PostCSS section size plugin.\n *\n * Parse width and height declartaion on section selector.\n *\n * @alias module:postcss/section_size\n */\n\n\nvar plugin = _postcss.default.plugin('marpit-postcss-section-size', function () {\n  return function (css, ret) {\n    ret.marpitSectionSize = ret.marpitSectionSize || {};\n    css.walkRules(function (rule) {\n      if (rule.selectors.includes('section')) {\n        rule.walkDecls(/^(width|height)$/, function (decl) {\n          var prop = decl.prop;\n          var value = decl.value.trim();\n          ret.marpitSectionSize[prop] = value;\n        });\n      }\n    });\n  };\n});\n\nvar _default = plugin;\nexports.default = _default;","map":{"version":3,"sources":["/Users/yaozixuan/Document/OOSE/my-app/node_modules/@marp-team/marpit/lib/postcss/section_size.js"],"names":["Object","defineProperty","exports","value","default","_postcss","_interopRequireDefault","require","obj","__esModule","plugin","css","ret","marpitSectionSize","walkRules","rule","selectors","includes","walkDecls","decl","prop","trim","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,QAAQ,GAAGC,sBAAsB,CAACC,OAAO,CAAC,SAAD,CAAR,CAArC;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEJ,IAAAA,OAAO,EAAEI;AAAX,GAArC;AAAwD;AAE/F;;AAEA;;;;;;;;;AAOA,IAAME,MAAM,GAAGL,QAAQ,CAACD,OAAT,CAAiBM,MAAjB,CAAwB,6BAAxB,EAAuD;AAAA,SAAM,UAACC,GAAD,EAAMC,GAAN,EAAc;AACxFA,IAAAA,GAAG,CAACC,iBAAJ,GAAwBD,GAAG,CAACC,iBAAJ,IAAyB,EAAjD;AACAF,IAAAA,GAAG,CAACG,SAAJ,CAAc,UAAAC,IAAI,EAAI;AACpB,UAAIA,IAAI,CAACC,SAAL,CAAeC,QAAf,CAAwB,SAAxB,CAAJ,EAAwC;AACtCF,QAAAA,IAAI,CAACG,SAAL,CAAe,kBAAf,EAAmC,UAAAC,IAAI,EAAI;AAAA,cAEvCC,IAFuC,GAGrCD,IAHqC,CAEvCC,IAFuC;AAIzC,cAAMjB,KAAK,GAAGgB,IAAI,CAAChB,KAAL,CAAWkB,IAAX,EAAd;AACAT,UAAAA,GAAG,CAACC,iBAAJ,CAAsBO,IAAtB,IAA8BjB,KAA9B;AACD,SAND;AAOD;AACF,KAVD;AAWD,GAbqE;AAAA,CAAvD,CAAf;;AAeA,IAAImB,QAAQ,GAAGZ,MAAf;AACAR,OAAO,CAACE,OAAR,GAAkBkB,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** @module */\n\n/**\n * Marpit PostCSS section size plugin.\n *\n * Parse width and height declartaion on section selector.\n *\n * @alias module:postcss/section_size\n */\nconst plugin = _postcss.default.plugin('marpit-postcss-section-size', () => (css, ret) => {\n  ret.marpitSectionSize = ret.marpitSectionSize || {};\n  css.walkRules(rule => {\n    if (rule.selectors.includes('section')) {\n      rule.walkDecls(/^(width|height)$/, decl => {\n        const {\n          prop\n        } = decl;\n        const value = decl.value.trim();\n        ret.marpitSectionSize[prop] = value;\n      });\n    }\n  });\n});\n\nvar _default = plugin;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}
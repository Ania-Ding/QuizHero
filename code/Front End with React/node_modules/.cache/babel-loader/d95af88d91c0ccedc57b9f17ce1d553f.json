{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _colorString = _interopRequireDefault(require(\"color-string\"));\n\nvar _plugin = _interopRequireDefault(require(\"../../plugin\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst escape = target => target.replace(/[\\\\;:()]/g, matched => `\\\\${matched[0].codePointAt(0).toString(16)} `);\n\nconst optionMatchers = new Map(); // The scale percentage for resize background\n\noptionMatchers.set(/^(\\d*\\.)?\\d+%$/, matches => ({\n  size: matches[0]\n})); // width and height\n\nconst normalizeLength = v => `${v}${/^(\\d*\\.)?\\d+$/.test(v) ? 'px' : ''}`;\n\noptionMatchers.set(/^w(?:idth)?:((?:\\d*\\.)?\\d+(?:%|ch|cm|em|ex|in|mm|pc|pt|px)?|auto)$/, matches => ({\n  width: normalizeLength(matches[1])\n}));\noptionMatchers.set(/^h(?:eight)?:((?:\\d*\\.)?\\d+(?:%|ch|cm|em|ex|in|mm|pc|pt|px)?|auto)$/, matches => ({\n  height: normalizeLength(matches[1])\n})); // CSS filters\n\noptionMatchers.set(/^blur(?::(.+))?$/, (matches, meta) => ({\n  filters: [...meta.filters, ['blur', escape(matches[1] || '10px')]]\n}));\noptionMatchers.set(/^brightness(?::(.+))?$/, (matches, meta) => ({\n  filters: [...meta.filters, ['brightness', escape(matches[1] || '1.5')]]\n}));\noptionMatchers.set(/^contrast(?::(.+))?$/, (matches, meta) => ({\n  filters: [...meta.filters, ['contrast', escape(matches[1] || '2')]]\n}));\noptionMatchers.set(/^drop-shadow(?::(.+?),(.+?)(?:,(.+?))?(?:,(.+?))?)?$/, (matches, meta) => {\n  const args = [];\n\n  for (const arg of matches.slice(1)) {\n    if (arg) {\n      const colorFunc = arg.match(/^(rgba?|hsla?)\\((.*)\\)$/);\n      args.push(colorFunc ? `${colorFunc[1]}(${escape(colorFunc[2])})` : escape(arg));\n    }\n  }\n\n  return {\n    filters: [...meta.filters, ['drop-shadow', args.join(' ') || '0 5px 10px rgba(0,0,0,.4)']]\n  };\n});\noptionMatchers.set(/^grayscale(?::(.+))?$/, (matches, meta) => ({\n  filters: [...meta.filters, ['grayscale', escape(matches[1] || '1')]]\n}));\noptionMatchers.set(/^hue-rotate(?::(.+))?$/, (matches, meta) => ({\n  filters: [...meta.filters, ['hue-rotate', escape(matches[1] || '180deg')]]\n}));\noptionMatchers.set(/^invert(?::(.+))?$/, (matches, meta) => ({\n  filters: [...meta.filters, ['invert', escape(matches[1] || '1')]]\n}));\noptionMatchers.set(/^opacity(?::(.+))?$/, (matches, meta) => ({\n  filters: [...meta.filters, ['opacity', escape(matches[1] || '.5')]]\n}));\noptionMatchers.set(/^saturate(?::(.+))?$/, (matches, meta) => ({\n  filters: [...meta.filters, ['saturate', escape(matches[1] || '2')]]\n}));\noptionMatchers.set(/^sepia(?::(.+))?$/, (matches, meta) => ({\n  filters: [...meta.filters, ['sepia', escape(matches[1] || '1')]]\n}));\n/**\n * Marpit image parse plugin.\n *\n * Parse image tokens and store the result into `marpitImage` meta. It has an\n * image url and options. The alternative text is regarded as space-separated\n * options.\n *\n * @alias module:markdown/image/parse\n * @param {MarkdownIt} md markdown-it instance.\n */\n\nfunction parseImage(md) {\n  const {\n    process\n  } = md.core; // Store original URL, for the color shorthand.\n  // (Avoid a side effect from link normalization)\n\n  let originalURLMap;\n  let refCount = 0;\n\n  const finalizeTokenAttr = token => {\n    // Convert imprimitive attribute value into primitive string\n    if (token.attrs && Array.isArray(token.attrs)) token.attrs = token.attrs.map(([name, value]) => [name, value.toString()]);\n\n    if (token.type === 'inline') {\n      // Apply finalization recursively to inline tokens\n      for (const t of token.children) finalizeTokenAttr(t);\n    }\n  };\n\n  md.core.process = state => {\n    const {\n      normalizeLink\n    } = md; // Prevent reset of WeakMap caused by calling core process internally\n\n    if (refCount === 0) originalURLMap = new WeakMap();\n\n    try {\n      md.normalizeLink = url => {\n        // eslint-disable-next-line no-new-wrappers\n        const imprimitiveUrl = new String(normalizeLink.call(md, url));\n        originalURLMap.set(imprimitiveUrl, url);\n        return imprimitiveUrl;\n      };\n\n      refCount += 1;\n      return process.call(md.core, state);\n    } finally {\n      refCount -= 1;\n      md.normalizeLink = normalizeLink;\n\n      if (refCount === 0) {\n        // Apply finalization for every tokens\n        for (const token of state.tokens) finalizeTokenAttr(token);\n      }\n    }\n  };\n\n  md.inline.ruler2.push('marpit_parse_image', ({\n    tokens\n  }) => {\n    for (const token of tokens) {\n      if (token.type === 'image') {\n        const options = token.content.split(/\\s+/).filter(s => s.length > 0);\n        const url = token.attrGet('src');\n        const originalUrl = originalURLMap.has(url) ? originalURLMap.get(url) : url;\n        token.meta = token.meta || {};\n        token.meta.marpitImage = _objectSpread({}, token.meta.marpitImage || {}, {\n          url: url.toString(),\n          options\n        }); // Detect shorthand for setting color (Use value before normalization)\n\n        if (!!_colorString.default.get(originalUrl) || originalUrl.toLowerCase() === 'currentcolor') {\n          token.meta.marpitImage.color = originalUrl;\n          token.hidden = true;\n        } // Parse keyword through matchers\n\n\n        for (const opt of options) {\n          for (const [regexp, mergeFunc] of optionMatchers) {\n            const matched = opt.match(regexp);\n            if (matched) token.meta.marpitImage = _objectSpread({}, token.meta.marpitImage, {}, mergeFunc(matched, _objectSpread({\n              filters: []\n            }, token.meta.marpitImage)));\n          }\n        }\n      }\n    }\n  });\n}\n\nvar _default = (0, _plugin.default)(parseImage);\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/yaozixuan/OneDrive/JHU Semester 2/OOSE/my-app/node_modules/@marp-team/marpit/lib/markdown/image/parse.js"],"names":["Object","defineProperty","exports","value","default","_colorString","_interopRequireDefault","require","_plugin","obj","__esModule","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","escape","replace","matched","codePointAt","toString","optionMatchers","Map","set","matches","size","normalizeLength","v","test","width","height","meta","filters","args","arg","slice","colorFunc","match","join","parseImage","md","process","core","originalURLMap","refCount","finalizeTokenAttr","token","attrs","Array","isArray","map","name","type","t","children","state","normalizeLink","WeakMap","url","imprimitiveUrl","String","call","tokens","inline","ruler2","options","content","split","s","attrGet","originalUrl","has","get","marpitImage","toLowerCase","color","hidden","opt","regexp","mergeFunc","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _colorString = _interopRequireDefault(require(\"color-string\"));\n\nvar _plugin = _interopRequireDefault(require(\"../../plugin\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst escape = target => target.replace(/[\\\\;:()]/g, matched => `\\\\${matched[0].codePointAt(0).toString(16)} `);\n\nconst optionMatchers = new Map(); // The scale percentage for resize background\n\noptionMatchers.set(/^(\\d*\\.)?\\d+%$/, matches => ({\n  size: matches[0]\n})); // width and height\n\nconst normalizeLength = v => `${v}${/^(\\d*\\.)?\\d+$/.test(v) ? 'px' : ''}`;\n\noptionMatchers.set(/^w(?:idth)?:((?:\\d*\\.)?\\d+(?:%|ch|cm|em|ex|in|mm|pc|pt|px)?|auto)$/, matches => ({\n  width: normalizeLength(matches[1])\n}));\noptionMatchers.set(/^h(?:eight)?:((?:\\d*\\.)?\\d+(?:%|ch|cm|em|ex|in|mm|pc|pt|px)?|auto)$/, matches => ({\n  height: normalizeLength(matches[1])\n})); // CSS filters\n\noptionMatchers.set(/^blur(?::(.+))?$/, (matches, meta) => ({\n  filters: [...meta.filters, ['blur', escape(matches[1] || '10px')]]\n}));\noptionMatchers.set(/^brightness(?::(.+))?$/, (matches, meta) => ({\n  filters: [...meta.filters, ['brightness', escape(matches[1] || '1.5')]]\n}));\noptionMatchers.set(/^contrast(?::(.+))?$/, (matches, meta) => ({\n  filters: [...meta.filters, ['contrast', escape(matches[1] || '2')]]\n}));\noptionMatchers.set(/^drop-shadow(?::(.+?),(.+?)(?:,(.+?))?(?:,(.+?))?)?$/, (matches, meta) => {\n  const args = [];\n\n  for (const arg of matches.slice(1)) {\n    if (arg) {\n      const colorFunc = arg.match(/^(rgba?|hsla?)\\((.*)\\)$/);\n      args.push(colorFunc ? `${colorFunc[1]}(${escape(colorFunc[2])})` : escape(arg));\n    }\n  }\n\n  return {\n    filters: [...meta.filters, ['drop-shadow', args.join(' ') || '0 5px 10px rgba(0,0,0,.4)']]\n  };\n});\noptionMatchers.set(/^grayscale(?::(.+))?$/, (matches, meta) => ({\n  filters: [...meta.filters, ['grayscale', escape(matches[1] || '1')]]\n}));\noptionMatchers.set(/^hue-rotate(?::(.+))?$/, (matches, meta) => ({\n  filters: [...meta.filters, ['hue-rotate', escape(matches[1] || '180deg')]]\n}));\noptionMatchers.set(/^invert(?::(.+))?$/, (matches, meta) => ({\n  filters: [...meta.filters, ['invert', escape(matches[1] || '1')]]\n}));\noptionMatchers.set(/^opacity(?::(.+))?$/, (matches, meta) => ({\n  filters: [...meta.filters, ['opacity', escape(matches[1] || '.5')]]\n}));\noptionMatchers.set(/^saturate(?::(.+))?$/, (matches, meta) => ({\n  filters: [...meta.filters, ['saturate', escape(matches[1] || '2')]]\n}));\noptionMatchers.set(/^sepia(?::(.+))?$/, (matches, meta) => ({\n  filters: [...meta.filters, ['sepia', escape(matches[1] || '1')]]\n}));\n/**\n * Marpit image parse plugin.\n *\n * Parse image tokens and store the result into `marpitImage` meta. It has an\n * image url and options. The alternative text is regarded as space-separated\n * options.\n *\n * @alias module:markdown/image/parse\n * @param {MarkdownIt} md markdown-it instance.\n */\n\nfunction parseImage(md) {\n  const {\n    process\n  } = md.core; // Store original URL, for the color shorthand.\n  // (Avoid a side effect from link normalization)\n\n  let originalURLMap;\n  let refCount = 0;\n\n  const finalizeTokenAttr = token => {\n    // Convert imprimitive attribute value into primitive string\n    if (token.attrs && Array.isArray(token.attrs)) token.attrs = token.attrs.map(([name, value]) => [name, value.toString()]);\n\n    if (token.type === 'inline') {\n      // Apply finalization recursively to inline tokens\n      for (const t of token.children) finalizeTokenAttr(t);\n    }\n  };\n\n  md.core.process = state => {\n    const {\n      normalizeLink\n    } = md; // Prevent reset of WeakMap caused by calling core process internally\n\n    if (refCount === 0) originalURLMap = new WeakMap();\n\n    try {\n      md.normalizeLink = url => {\n        // eslint-disable-next-line no-new-wrappers\n        const imprimitiveUrl = new String(normalizeLink.call(md, url));\n        originalURLMap.set(imprimitiveUrl, url);\n        return imprimitiveUrl;\n      };\n\n      refCount += 1;\n      return process.call(md.core, state);\n    } finally {\n      refCount -= 1;\n      md.normalizeLink = normalizeLink;\n\n      if (refCount === 0) {\n        // Apply finalization for every tokens\n        for (const token of state.tokens) finalizeTokenAttr(token);\n      }\n    }\n  };\n\n  md.inline.ruler2.push('marpit_parse_image', ({\n    tokens\n  }) => {\n    for (const token of tokens) {\n      if (token.type === 'image') {\n        const options = token.content.split(/\\s+/).filter(s => s.length > 0);\n        const url = token.attrGet('src');\n        const originalUrl = originalURLMap.has(url) ? originalURLMap.get(url) : url;\n        token.meta = token.meta || {};\n        token.meta.marpitImage = _objectSpread({}, token.meta.marpitImage || {}, {\n          url: url.toString(),\n          options\n        }); // Detect shorthand for setting color (Use value before normalization)\n\n        if (!!_colorString.default.get(originalUrl) || originalUrl.toLowerCase() === 'currentcolor') {\n          token.meta.marpitImage.color = originalUrl;\n          token.hidden = true;\n        } // Parse keyword through matchers\n\n\n        for (const opt of options) {\n          for (const [regexp, mergeFunc] of optionMatchers) {\n            const matched = opt.match(regexp);\n            if (matched) token.meta.marpitImage = _objectSpread({}, token.meta.marpitImage, {}, mergeFunc(matched, _objectSpread({\n              filters: []\n            }, token.meta.marpitImage)));\n          }\n        }\n      }\n    }\n  });\n}\n\nvar _default = (0, _plugin.default)(parseImage);\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}
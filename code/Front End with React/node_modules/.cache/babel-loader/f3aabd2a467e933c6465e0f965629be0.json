{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/** @module */\n\n/**\n * Wrap array of tokens by specified container object.\n *\n * @alias module:helpers/wrap_tokens\n * @param {Token} Token markdown-it's Token class.\n * @param {String} type Token type. It will be suffixed by `_open` / `_close`.\n * @param {Object} container A container object to wrap tokens, includes tag\n *     name and attributes.\n * @param {String} container.tag The name of container element.\n * @param {Object} [container.open] The object assigning to an opening token.\n * @param {Object} [container.close] The object assigning to a closing token.\n * @param {Token[]} [tokens=[]] Wrapping tokens.\n * @returns {Token[]} Wrapped tokens.\n */\n\n\nfunction wrapTokens(Token, type, container, tokens = []) {\n  const {\n    tag\n  } = container; // Update nesting level of wrapping tokens\n\n  for (const t of tokens) t.level += 1; // Create markdown-it tokens\n\n\n  const open = new Token(`${type}_open`, tag, 1);\n  const close = new Token(`${type}_close`, tag, -1);\n  Object.assign(open, _objectSpread({}, container.open || {}));\n  Object.assign(close, _objectSpread({}, container.close || {})); // Assign attributes\n\n  for (const attr of Object.keys(container)) {\n    if (!['open', 'close', 'tag'].includes(attr) && container[attr] != null) open.attrSet(attr, container[attr]);\n  }\n\n  return [open, ...tokens, close];\n}\n\nvar _default = wrapTokens;\nexports.default = _default;","map":{"version":3,"sources":["/Users/yaozixuan/OneDrive/JHU Semester 2/OOSE/my-app/node_modules/@marp-team/marpit/lib/helpers/wrap_tokens.js"],"names":["Object","defineProperty","exports","value","default","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","configurable","writable","wrapTokens","Token","type","container","tokens","tag","t","level","open","close","assign","attr","includes","attrSet","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/** @module */\n\n/**\n * Wrap array of tokens by specified container object.\n *\n * @alias module:helpers/wrap_tokens\n * @param {Token} Token markdown-it's Token class.\n * @param {String} type Token type. It will be suffixed by `_open` / `_close`.\n * @param {Object} container A container object to wrap tokens, includes tag\n *     name and attributes.\n * @param {String} container.tag The name of container element.\n * @param {Object} [container.open] The object assigning to an opening token.\n * @param {Object} [container.close] The object assigning to a closing token.\n * @param {Token[]} [tokens=[]] Wrapping tokens.\n * @returns {Token[]} Wrapped tokens.\n */\nfunction wrapTokens(Token, type, container, tokens = []) {\n  const {\n    tag\n  } = container; // Update nesting level of wrapping tokens\n\n  for (const t of tokens) t.level += 1; // Create markdown-it tokens\n\n\n  const open = new Token(`${type}_open`, tag, 1);\n  const close = new Token(`${type}_close`, tag, -1);\n  Object.assign(open, _objectSpread({}, container.open || {}));\n  Object.assign(close, _objectSpread({}, container.close || {})); // Assign attributes\n\n  for (const attr of Object.keys(container)) {\n    if (!['open', 'close', 'tag'].includes(attr) && container[attr] != null) open.attrSet(attr, container[attr]);\n  }\n\n  return [open, ...tokens, close];\n}\n\nvar _default = wrapTokens;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}
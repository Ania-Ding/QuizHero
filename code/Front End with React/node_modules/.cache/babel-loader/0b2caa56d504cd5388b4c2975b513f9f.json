{"ast":null,"code":"var _jsxFileName = \"/Users/yaozixuan/OneDrive/JHU Semester 2/OOSE/my-app/src/upload.js\";\nimport Marpit from '@marp-team/marpit';\nimport { Upload, message, Button, Icon } from 'antd';\nimport React from \"react\";\n\nvar fs = require(\"fs\"); // Upload\n\n\nconst props = {\n  name: 'file',\n  action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n  headers: {\n    authorization: 'authorization-text'\n  }\n}; // 1. Create instance (with options if you want)\n\nconst marpit = new Marpit(); // 2. Add theme CSS\n\nconst theme = `\n/* @theme example */\n\nsection {\n  background-color: #369;\n  color: #fff;\n  font-size: 30px;\n  padding: 40px;\n}\n\nh1,\nh2 {\n  text-align: center;\n  margin: 0;\n}\n\nh1 {\n  color: #8cf;\n}\n`;\nmarpit.themeSet.default = marpit.themeSet.add(theme);\n\nclass MyUpload extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: \"\",\n      html: \"\"\n    };\n\n    this.beforeUpload = file => {\n      this.setState({\n        file: file\n      });\n    };\n\n    this.onChange = info => {\n      if (info.file.status !== 'uploading') {\n        console.log(info.file, info.fileList);\n      }\n\n      if (info.file.status === 'done') {\n        message.success(`${info.file.name} file uploaded successfully`);\n      } else if (info.file.status === 'error') {\n        message.error(`${info.file.name} file upload failed.`);\n      }\n    };\n\n    this.convertFile = () => {\n      var reader = new FileReader();\n\n      reader.onload = function (event) {\n        var contents = event.target.result;\n        console.log(\"File contents: \" + contents);\n      };\n\n      reader.onerror = function (event) {\n        console.error(\"File could not be read! Code \" + event.target.error.code);\n      };\n\n      reader.readAsText(this.state.file, \"utf-8\");\n      var result = reader.result;\n      this.setState({\n        html: result\n      }); // const { html, css } = marpit.render(this.result);\n    };\n\n    this.beforeUpload.bind = this.beforeUpload.bind(this);\n    this.result = new String();\n  }\n\n  render() {\n    const {\n      html,\n      css\n    } = marpit.render(this.state.html); // 4. Use output in your HTML\n\n    const converthtml = `\n            <!DOCTYPE html>\n            <html><body>\n              <style>${css}</style>\n              ${html}\n            </body></html>\n            `;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Upload, Object.assign({\n      onChange: this.onChange,\n      beforeUpload: this.beforeUpload\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"upload\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), \" Click to Upload\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, converthtml));\n  }\n\n}\n\nexport default MyUpload;","map":{"version":3,"sources":["/Users/yaozixuan/OneDrive/JHU Semester 2/OOSE/my-app/src/upload.js"],"names":["Marpit","Upload","message","Button","Icon","React","fs","require","props","name","action","headers","authorization","marpit","theme","themeSet","default","add","MyUpload","Component","constructor","state","file","html","beforeUpload","setState","onChange","info","status","console","log","fileList","success","error","convertFile","reader","FileReader","onload","event","contents","target","result","onerror","code","readAsText","bind","String","render","css","converthtml"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,MAA1B,EAAkCC,IAAlC,QAA8C,MAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,IAAIC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB,C,CACA;;;AACA,MAAMC,KAAK,GAAG;AACVC,EAAAA,IAAI,EAAE,MADI;AAEVC,EAAAA,MAAM,EAAE,kDAFE;AAGVC,EAAAA,OAAO,EAAE;AACLC,IAAAA,aAAa,EAAE;AADV;AAHC,CAAd,C,CAQA;;AACA,MAAMC,MAAM,GAAG,IAAIb,MAAJ,EAAf,C,CAEA;;AACA,MAAMc,KAAK,GAAI;;;;;;;;;;;;;;;;;;;CAAf;AAoBAD,MAAM,CAACE,QAAP,CAAgBC,OAAhB,GAA0BH,MAAM,CAACE,QAAP,CAAgBE,GAAhB,CAAoBH,KAApB,CAA1B;;AAIA,MAAMI,QAAN,SAAuBb,KAAK,CAACc,SAA7B,CAAsC;AAClCC,EAAAA,WAAW,CAACZ,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAKnBa,KALmB,GAKX;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,IAAI,EAAE;AAFF,KALW;;AAAA,SAUnBC,YAVmB,GAUHF,IAAD,IAAU;AACrB,WAAKG,QAAL,CAAc;AACVH,QAAAA,IAAI,EAACA;AADK,OAAd;AAGH,KAdkB;;AAAA,SAenBI,QAfmB,GAePC,IAAD,IAAU;AACjB,UAAIA,IAAI,CAACL,IAAL,CAAUM,MAAV,KAAqB,WAAzB,EAAsC;AAClCC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACL,IAAjB,EAAuBK,IAAI,CAACI,QAA5B;AACH;;AACD,UAAIJ,IAAI,CAACL,IAAL,CAAUM,MAAV,KAAqB,MAAzB,EAAiC;AAC7B1B,QAAAA,OAAO,CAAC8B,OAAR,CAAiB,GAAEL,IAAI,CAACL,IAAL,CAAUb,IAAK,6BAAlC;AACH,OAFD,MAEO,IAAIkB,IAAI,CAACL,IAAL,CAAUM,MAAV,KAAqB,OAAzB,EAAkC;AACrC1B,QAAAA,OAAO,CAAC+B,KAAR,CAAe,GAAEN,IAAI,CAACL,IAAL,CAAUb,IAAK,sBAAhC;AACH;AACJ,KAxBkB;;AAAA,SA0BnByB,WA1BmB,GA0BL,MAAM;AAChB,UAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,MAAAA,MAAM,CAACE,MAAP,GAAgB,UAAUC,KAAV,EAAiB;AAC7B,YAAIC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAaC,MAA5B;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBS,QAAhC;AACH,OAHD;;AAKAJ,MAAAA,MAAM,CAACO,OAAP,GAAiB,UAAUJ,KAAV,EAAiB;AAC9BT,QAAAA,OAAO,CAACI,KAAR,CAAc,kCAAkCK,KAAK,CAACE,MAAN,CAAaP,KAAb,CAAmBU,IAAnE;AACH,OAFD;;AAGAR,MAAAA,MAAM,CAACS,UAAP,CAAkB,KAAKvB,KAAL,CAAWC,IAA7B,EAAmC,OAAnC;AACA,UAAImB,MAAM,GAAGN,MAAM,CAACM,MAApB;AACA,WAAKhB,QAAL,CAAc;AACVF,QAAAA,IAAI,EAACkB;AADK,OAAd,EAZgB,CAehB;AACH,KA1CkB;;AAEf,SAAKjB,YAAL,CAAkBqB,IAAlB,GAAyB,KAAKrB,YAAL,CAAkBqB,IAAlB,CAAuB,IAAvB,CAAzB;AACA,SAAKJ,MAAL,GAAc,IAAIK,MAAJ,EAAd;AACH;;AAwCDC,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAExB,MAAAA,IAAF;AAAQyB,MAAAA;AAAR,QAAgBnC,MAAM,CAACkC,MAAP,CAAc,KAAK1B,KAAL,CAAWE,IAAzB,CAAtB,CAFK,CAIL;;AACA,UAAM0B,WAAW,GAAI;;;uBAGND,GAAI;gBACXzB,IAAK;;aAJb;AAQA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AACI,MAAA,QAAQ,EAAE,KAAKG,QADnB;AAEI,MAAA,YAAY,EAAE,KAAKF;AAFvB,OAGQhB,KAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,qBALJ,CADJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCyC,WADD,CAbJ,CADJ;AAoBH;;AA9EiC;;AAiFtC,eAAe/B,QAAf","sourcesContent":["import Marpit from '@marp-team/marpit'\nimport { Upload, message, Button, Icon } from 'antd';\nimport React from \"react\";\nvar fs = require(\"fs\");\n// Upload\nconst props = {\n    name: 'file',\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n    headers: {\n        authorization: 'authorization-text',\n    },\n};\n\n// 1. Create instance (with options if you want)\nconst marpit = new Marpit()\n\n// 2. Add theme CSS\nconst theme = `\n/* @theme example */\n\nsection {\n  background-color: #369;\n  color: #fff;\n  font-size: 30px;\n  padding: 40px;\n}\n\nh1,\nh2 {\n  text-align: center;\n  margin: 0;\n}\n\nh1 {\n  color: #8cf;\n}\n`\nmarpit.themeSet.default = marpit.themeSet.add(theme)\n\n\n\nclass MyUpload extends React.Component{\n    constructor(props) {\n        super(props);\n        this.beforeUpload.bind = this.beforeUpload.bind(this);\n        this.result = new String;\n    }\n    state = {\n        file: \"\",\n        html: \"\"\n    }\n\n    beforeUpload = (file) => {\n        this.setState({\n            file:file\n        });\n    }\n    onChange = (info) => {\n        if (info.file.status !== 'uploading') {\n            console.log(info.file, info.fileList);\n        }\n        if (info.file.status === 'done') {\n            message.success(`${info.file.name} file uploaded successfully`);\n        } else if (info.file.status === 'error') {\n            message.error(`${info.file.name} file upload failed.`);\n        }\n    }\n\n    convertFile = () => {\n        var reader = new FileReader();\n        reader.onload = function (event) {\n            var contents = event.target.result;\n            console.log(\"File contents: \" + contents);\n        };\n\n        reader.onerror = function (event) {\n            console.error(\"File could not be read! Code \" + event.target.error.code);\n        };\n        reader.readAsText(this.state.file, \"utf-8\");\n        var result = reader.result;\n        this.setState({\n            html:result\n        });\n        // const { html, css } = marpit.render(this.result);\n    }\n\n    render() {\n\n        const { html, css } = marpit.render(this.state.html);\n\n        // 4. Use output in your HTML\n        const converthtml = `\n            <!DOCTYPE html>\n            <html><body>\n              <style>${css}</style>\n              ${html}\n            </body></html>\n            `\n\n        return(\n            <div>\n                <Upload\n                    onChange={this.onChange}\n                    beforeUpload={this.beforeUpload}\n                    {...props}>\n\n                    <Button>\n                        <Icon type=\"upload\" /> Click to Upload\n                    </Button>\n\n                </Upload>\n\n\n                <div>\n                {converthtml}\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default MyUpload;"]},"metadata":{},"sourceType":"module"}
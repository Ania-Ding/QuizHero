{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * InlineStyle helper class.\n *\n * This is the declarative builder of an inline style using PostCSS. The output\n * string by `toString()` is sanitized unexpected declarations.\n *\n * @module\n * @alias module:helpers/inline_style\n */\n\n\nclass InlineStyle {\n  /**\n   * Create an InlineStyle instance.\n   *\n   * @function constructor\n   * @param {Object|String|InlineStyle} [initialDecls] The initial declarations.\n   */\n  constructor(initialDecls) {\n    this.decls = {};\n\n    if (initialDecls) {\n      if (initialDecls instanceof InlineStyle || typeof initialDecls === 'string') {\n        const root = _postcss.default.parse(initialDecls.toString(), {\n          from: undefined\n        });\n\n        root.each(node => {\n          if (node.type === 'decl') this.decls[node.prop] = node.value;\n        });\n      } else {\n        this.decls = _objectSpread({}, initialDecls);\n      }\n    }\n  }\n  /**\n   * Delete declaration.\n   *\n   * @param {string} prop A property name of declaration.\n   * @returns {InlineStyle} Returns myself for chaining methods.\n   */\n\n\n  delete(prop) {\n    delete this.decls[prop];\n    return this;\n  }\n  /**\n   * Set declaration.\n   *\n   * @param {string} prop A property name of declaration.\n   * @param {string} value A value of declaration.\n   * @returns {InlineStyle} Returns myself for chaining methods.\n   */\n\n\n  set(prop, value) {\n    this.decls[prop] = value;\n    return this;\n  }\n  /**\n   * Build a string of declarations for the inline style.\n   *\n   * The unexpected declarations will strip to prevent a style injection.\n   */\n\n\n  toString() {\n    let built = '';\n\n    for (const prop of Object.keys(this.decls)) {\n      let parsed;\n\n      try {\n        parsed = _postcss.default.parse(`${prop}:${this.decls[prop]}`, {\n          from: undefined\n        });\n      } catch (e) {// A declaration that have value it cannot parse will ignore.\n      }\n\n      if (parsed) {\n        parsed.each(node => {\n          if (node.type !== 'decl' || node.prop !== prop) node.remove();\n        });\n        built += `${parsed.toString()};`;\n      }\n    }\n\n    return built;\n  }\n\n}\n\nexports.default = InlineStyle;","map":{"version":3,"sources":["/Users/yaozixuan/Document/OOSE/my-app/node_modules/@marp-team/marpit/lib/helpers/inline_style.js"],"names":["Object","defineProperty","exports","value","default","_postcss","_interopRequireDefault","require","obj","__esModule","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","InlineStyle","constructor","initialDecls","decls","root","parse","toString","from","undefined","each","node","type","prop","delete","set","built","parsed","e","remove"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * InlineStyle helper class.\n *\n * This is the declarative builder of an inline style using PostCSS. The output\n * string by `toString()` is sanitized unexpected declarations.\n *\n * @module\n * @alias module:helpers/inline_style\n */\nclass InlineStyle {\n  /**\n   * Create an InlineStyle instance.\n   *\n   * @function constructor\n   * @param {Object|String|InlineStyle} [initialDecls] The initial declarations.\n   */\n  constructor(initialDecls) {\n    this.decls = {};\n\n    if (initialDecls) {\n      if (initialDecls instanceof InlineStyle || typeof initialDecls === 'string') {\n        const root = _postcss.default.parse(initialDecls.toString(), {\n          from: undefined\n        });\n\n        root.each(node => {\n          if (node.type === 'decl') this.decls[node.prop] = node.value;\n        });\n      } else {\n        this.decls = _objectSpread({}, initialDecls);\n      }\n    }\n  }\n  /**\n   * Delete declaration.\n   *\n   * @param {string} prop A property name of declaration.\n   * @returns {InlineStyle} Returns myself for chaining methods.\n   */\n\n\n  delete(prop) {\n    delete this.decls[prop];\n    return this;\n  }\n  /**\n   * Set declaration.\n   *\n   * @param {string} prop A property name of declaration.\n   * @param {string} value A value of declaration.\n   * @returns {InlineStyle} Returns myself for chaining methods.\n   */\n\n\n  set(prop, value) {\n    this.decls[prop] = value;\n    return this;\n  }\n  /**\n   * Build a string of declarations for the inline style.\n   *\n   * The unexpected declarations will strip to prevent a style injection.\n   */\n\n\n  toString() {\n    let built = '';\n\n    for (const prop of Object.keys(this.decls)) {\n      let parsed;\n\n      try {\n        parsed = _postcss.default.parse(`${prop}:${this.decls[prop]}`, {\n          from: undefined\n        });\n      } catch (e) {// A declaration that have value it cannot parse will ignore.\n      }\n\n      if (parsed) {\n        parsed.each(node => {\n          if (node.type !== 'decl' || node.prop !== prop) node.remove();\n        });\n        built += `${parsed.toString()};`;\n      }\n    }\n\n    return built;\n  }\n\n}\n\nexports.default = InlineStyle;"]},"metadata":{},"sourceType":"script"}
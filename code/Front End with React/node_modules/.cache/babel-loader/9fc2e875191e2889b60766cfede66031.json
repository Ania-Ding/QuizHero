{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty2 = require(\"/Users/yaozixuan/Document/OOSE/my-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _slicedToArray = require(\"/Users/yaozixuan/Document/OOSE/my-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _toConsumableArray = require(\"/Users/yaozixuan/Document/OOSE/my-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _plugin = _interopRequireDefault(require(\"../../plugin\"));\n\nvar _inline_style = _interopRequireDefault(require(\"../../helpers/inline_style\"));\n\nvar _wrap_tokens = _interopRequireDefault(require(\"../../helpers/wrap_tokens\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Marpit advanced background image plugin.\n *\n * Support the advanced features for background image, by using `<figure>`\n * element(s) instead of CSS backgrounds. It works by creating the isolated\n * layer into inline SVG.\n *\n * @alias module:markdown/background_image/advanced\n * @param {MarkdownIt} md markdown-it instance.\n */\n\n\nfunction advancedBackground(md) {\n  md.core.ruler.after('marpit_directives_apply', 'marpit_advanced_background', function (state) {\n    var current;\n    var newTokens = [];\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = state.tokens[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var t = _step.value;\n\n        if (t.type === 'marpit_inline_svg_content_open' && t.meta && t.meta.marpitBackground) {\n          (function () {\n            current = t;\n            var _t$meta$marpitBackgro = t.meta.marpitBackground,\n                height = _t$meta$marpitBackgro.height,\n                images = _t$meta$marpitBackgro.images,\n                open = _t$meta$marpitBackgro.open,\n                width = _t$meta$marpitBackgro.width;\n            open.attrSet('data-marpit-advanced-background', 'content'); // Aligned direction\n\n            var direction = t.meta.marpitBackground.direction || 'horizontal'; // Split backgrounds\n\n            var splitSide = t.meta.marpitBackground.split;\n\n            if (splitSide) {\n              open.attrSet('data-marpit-advanced-background-split', splitSide);\n              var splitBgSize = t.meta.marpitBackground.splitSize || '50%';\n              t.attrSet('width', \"\".concat(100 - Number.parseFloat(splitBgSize.slice(0, -1)), \"%\"));\n              if (splitSide === 'left') t.attrSet('x', splitBgSize);\n              var style = new _inline_style.default(open.attrGet('style'));\n              style.set('--marpit-advanced-background-split', splitBgSize);\n              open.attrSet('style', style.toString());\n            } // Add the isolated layer for background image\n\n\n            newTokens.push.apply(newTokens, _toConsumableArray((0, _wrap_tokens.default)(state.Token, 'marpit_advanced_background_foreign_object', {\n              tag: 'foreignObject',\n              width: width,\n              height: height\n            }, (0, _wrap_tokens.default)(state.Token, 'marpit_advanced_background_section', _objectSpread({}, open.attrs.reduce(function (o, _ref) {\n              var _ref2 = _slicedToArray(_ref, 2),\n                  k = _ref2[0],\n                  v = _ref2[1];\n\n              return _objectSpread({}, o, _defineProperty2({}, k, v));\n            }, {}), {\n              tag: 'section',\n              id: undefined,\n              'data-marpit-advanced-background': 'background'\n            }), (0, _wrap_tokens.default)(state.Token, 'marpit_advanced_background_image_container', {\n              tag: 'div',\n              'data-marpit-advanced-background-container': true,\n              'data-marpit-advanced-background-direction': direction\n            }, function () {\n              var imageTokens = []; // Add multiple image elements\n\n              var _iteratorNormalCompletion2 = true;\n              var _didIteratorError2 = false;\n              var _iteratorError2 = undefined;\n\n              try {\n                for (var _iterator2 = images[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                  var img = _step2.value;\n\n                  var _style = new _inline_style.default({\n                    'background-image': \"url(\\\"\".concat(img.url, \"\\\")\")\n                  }); // Image sizing\n\n\n                  if (img.size) _style.set('background-size', img.size); // Image filter for backgrounds (Only in advanced BG)\n\n                  if (img.filter) _style.set('filter', img.filter);\n                  imageTokens.push.apply(imageTokens, _toConsumableArray((0, _wrap_tokens.default)(state.Token, 'marpit_advanced_background_image', {\n                    tag: 'figure',\n                    style: _style.toString()\n                  })));\n                }\n              } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n              } finally {\n                try {\n                  if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                    _iterator2.return();\n                  }\n                } finally {\n                  if (_didIteratorError2) {\n                    throw _iteratorError2;\n                  }\n                }\n              }\n\n              return imageTokens;\n            }())))).concat([t]));\n          })();\n        } else if (current && t.type === 'marpit_inline_svg_content_close') {\n          var _current$meta$marpitB = current.meta.marpitBackground,\n              open = _current$meta$marpitB.open,\n              height = _current$meta$marpitB.height,\n              width = _current$meta$marpitB.width; // Apply styles\n\n          var style = new _inline_style.default();\n          if (open.meta && open.meta.marpitDirectives && open.meta.marpitDirectives.color) style.set('color', open.meta.marpitDirectives.color); // Add the isolated layer for pseudo contents (e.g. Page number)\n\n          newTokens.push.apply(newTokens, [t].concat(_toConsumableArray((0, _wrap_tokens.default)(state.Token, 'marpit_advanced_background_foreign_object', {\n            tag: 'foreignObject',\n            width: width,\n            height: height,\n            'data-marpit-advanced-background': 'pseudo'\n          }, (0, _wrap_tokens.default)(state.Token, 'marpit_advanced_pseudo_section', {\n            tag: 'section',\n            class: open.attrGet('class'),\n            style: style.toString(),\n            'data-marpit-advanced-background': 'pseudo',\n            // For pagination styling\n            'data-marpit-pagination': open.attrGet('data-marpit-pagination'),\n            'data-marpit-pagination-total': open.attrGet('data-marpit-pagination-total')\n          })))));\n          current = undefined;\n        } else {\n          newTokens.push(t);\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    state.tokens = newTokens;\n  });\n}\n\nvar _default = (0, _plugin.default)(advancedBackground);\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/yaozixuan/Document/OOSE/my-app/node_modules/@marp-team/marpit/lib/markdown/background_image/advanced.js"],"names":["Object","defineProperty","exports","value","default","_plugin","_interopRequireDefault","require","_inline_style","_wrap_tokens","obj","__esModule","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","advancedBackground","md","core","ruler","after","state","current","newTokens","tokens","t","type","meta","marpitBackground","height","images","open","width","attrSet","direction","splitSide","split","splitBgSize","splitSize","Number","parseFloat","slice","style","attrGet","set","toString","Token","tag","attrs","reduce","o","k","v","id","undefined","imageTokens","img","url","size","marpitDirectives","color","class","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _plugin = _interopRequireDefault(require(\"../../plugin\"));\n\nvar _inline_style = _interopRequireDefault(require(\"../../helpers/inline_style\"));\n\nvar _wrap_tokens = _interopRequireDefault(require(\"../../helpers/wrap_tokens\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Marpit advanced background image plugin.\n *\n * Support the advanced features for background image, by using `<figure>`\n * element(s) instead of CSS backgrounds. It works by creating the isolated\n * layer into inline SVG.\n *\n * @alias module:markdown/background_image/advanced\n * @param {MarkdownIt} md markdown-it instance.\n */\nfunction advancedBackground(md) {\n  md.core.ruler.after('marpit_directives_apply', 'marpit_advanced_background', state => {\n    let current;\n    const newTokens = [];\n\n    for (const t of state.tokens) {\n      if (t.type === 'marpit_inline_svg_content_open' && t.meta && t.meta.marpitBackground) {\n        current = t;\n        const {\n          height,\n          images,\n          open,\n          width\n        } = t.meta.marpitBackground;\n        open.attrSet('data-marpit-advanced-background', 'content'); // Aligned direction\n\n        const direction = t.meta.marpitBackground.direction || 'horizontal'; // Split backgrounds\n\n        const splitSide = t.meta.marpitBackground.split;\n\n        if (splitSide) {\n          open.attrSet('data-marpit-advanced-background-split', splitSide);\n          const splitBgSize = t.meta.marpitBackground.splitSize || '50%';\n          t.attrSet('width', `${100 - Number.parseFloat(splitBgSize.slice(0, -1))}%`);\n          if (splitSide === 'left') t.attrSet('x', splitBgSize);\n          const style = new _inline_style.default(open.attrGet('style'));\n          style.set('--marpit-advanced-background-split', splitBgSize);\n          open.attrSet('style', style.toString());\n        } // Add the isolated layer for background image\n\n\n        newTokens.push(...(0, _wrap_tokens.default)(state.Token, 'marpit_advanced_background_foreign_object', {\n          tag: 'foreignObject',\n          width,\n          height\n        }, (0, _wrap_tokens.default)(state.Token, 'marpit_advanced_background_section', _objectSpread({}, open.attrs.reduce((o, [k, v]) => _objectSpread({}, o, {\n          [k]: v\n        }), {}), {\n          tag: 'section',\n          id: undefined,\n          'data-marpit-advanced-background': 'background'\n        }), (0, _wrap_tokens.default)(state.Token, 'marpit_advanced_background_image_container', {\n          tag: 'div',\n          'data-marpit-advanced-background-container': true,\n          'data-marpit-advanced-background-direction': direction\n        }, (() => {\n          const imageTokens = []; // Add multiple image elements\n\n          for (const img of images) {\n            const style = new _inline_style.default({\n              'background-image': `url(\"${img.url}\")`\n            }); // Image sizing\n\n            if (img.size) style.set('background-size', img.size); // Image filter for backgrounds (Only in advanced BG)\n\n            if (img.filter) style.set('filter', img.filter);\n            imageTokens.push(...(0, _wrap_tokens.default)(state.Token, 'marpit_advanced_background_image', {\n              tag: 'figure',\n              style: style.toString()\n            }));\n          }\n\n          return imageTokens;\n        })()))), t);\n      } else if (current && t.type === 'marpit_inline_svg_content_close') {\n        const {\n          open,\n          height,\n          width\n        } = current.meta.marpitBackground; // Apply styles\n\n        const style = new _inline_style.default();\n        if (open.meta && open.meta.marpitDirectives && open.meta.marpitDirectives.color) style.set('color', open.meta.marpitDirectives.color); // Add the isolated layer for pseudo contents (e.g. Page number)\n\n        newTokens.push(t, ...(0, _wrap_tokens.default)(state.Token, 'marpit_advanced_background_foreign_object', {\n          tag: 'foreignObject',\n          width,\n          height,\n          'data-marpit-advanced-background': 'pseudo'\n        }, (0, _wrap_tokens.default)(state.Token, 'marpit_advanced_pseudo_section', {\n          tag: 'section',\n          class: open.attrGet('class'),\n          style: style.toString(),\n          'data-marpit-advanced-background': 'pseudo',\n          // For pagination styling\n          'data-marpit-pagination': open.attrGet('data-marpit-pagination'),\n          'data-marpit-pagination-total': open.attrGet('data-marpit-pagination-total')\n        })));\n        current = undefined;\n      } else {\n        newTokens.push(t);\n      }\n    }\n\n    state.tokens = newTokens;\n  });\n}\n\nvar _default = (0, _plugin.default)(advancedBackground);\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}
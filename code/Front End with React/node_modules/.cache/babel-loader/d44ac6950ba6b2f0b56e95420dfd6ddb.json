{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash.kebabcase\"));\n\nvar _directives = _interopRequireDefault(require(\"./directives\"));\n\nvar _plugin = _interopRequireDefault(require(\"../../plugin\"));\n\nvar _inline_style = _interopRequireDefault(require(\"../../helpers/inline_style\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/** @module */\n\n/**\n * Apply parsed Marpit directives to markdown-it tokens.\n *\n * @alias module:markdown/directives/apply\n * @param {MarkdownIt} md markdown-it instance.\n * @param {Object} [opts]\n * @param {boolean} [opts.dataset=true] Assigns directives as HTML data\n *     attributes of each section tag.\n * @param {boolean} [opts.css=true] Assigns directives as CSS Custom Properties\n *     of each section tag.\n */\n\n\nfunction apply(md, opts = {}) {\n  const {\n    marpit\n  } = md;\n  const dataset = opts.dataset === undefined ? true : !!opts.dataset;\n  const css = opts.css === undefined ? true : !!opts.css;\n  const {\n    global,\n    local\n  } = marpit.customDirectives;\n  const directives = [...Object.keys(global), ...Object.keys(local), ..._directives.default];\n  md.core.ruler.after('marpit_directives_parse', 'marpit_directives_apply', state => {\n    if (state.inlineMode) return;\n\n    for (const token of state.tokens) {\n      const {\n        marpitDirectives,\n        marpitSlide,\n        marpitSlideTotal\n      } = token.meta || {};\n\n      if (marpitDirectives) {\n        const style = new _inline_style.default(token.attrGet('style'));\n\n        for (const dir of Object.keys(marpitDirectives)) {\n          if (directives.includes(dir)) {\n            const value = marpitDirectives[dir];\n\n            if (value) {\n              const kebabCaseDir = (0, _lodash.default)(dir);\n              if (dataset) token.attrSet(`data-${kebabCaseDir}`, value);\n              if (css) style.set(`--${kebabCaseDir}`, value);\n            }\n          }\n        } // Apply attribute to token\n\n\n        if (marpitDirectives.class) token.attrJoin('class', marpitDirectives.class);\n        if (marpitDirectives.color) style.set('color', marpitDirectives.color);\n        if (marpitDirectives.backgroundColor) style.set('background-color', marpitDirectives.backgroundColor).set('background-image', 'none');\n\n        if (marpitDirectives.backgroundImage) {\n          style.set('background-image', marpitDirectives.backgroundImage).set('background-position', 'center').set('background-repeat', 'no-repeat').set('background-size', 'cover');\n          if (marpitDirectives.backgroundPosition) style.set('background-position', marpitDirectives.backgroundPosition);\n          if (marpitDirectives.backgroundRepeat) style.set('background-repeat', marpitDirectives.backgroundRepeat);\n          if (marpitDirectives.backgroundSize) style.set('background-size', marpitDirectives.backgroundSize);\n        }\n\n        if (marpitDirectives.paginate) {\n          token.attrSet('data-marpit-pagination', marpitSlide + 1);\n          token.attrSet('data-marpit-pagination-total', marpitSlideTotal);\n        }\n\n        if (marpitDirectives.header) token.meta.marpitHeader = marpitDirectives.header;\n        if (marpitDirectives.footer) token.meta.marpitFooter = marpitDirectives.footer;\n        const styleStr = style.toString();\n        if (styleStr !== '') token.attrSet('style', styleStr);\n      }\n    }\n  });\n}\n\nvar _default = (0, _plugin.default)(apply);\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/yaozixuan/OneDrive/JHU Semester 2/OOSE/my-app/node_modules/@marp-team/marpit/lib/markdown/directives/apply.js"],"names":["Object","defineProperty","exports","value","default","_lodash","_interopRequireDefault","require","_directives","_plugin","_inline_style","obj","__esModule","apply","md","opts","marpit","dataset","undefined","css","global","local","customDirectives","directives","keys","core","ruler","after","state","inlineMode","token","tokens","marpitDirectives","marpitSlide","marpitSlideTotal","meta","style","attrGet","dir","includes","kebabCaseDir","attrSet","set","class","attrJoin","color","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","paginate","header","marpitHeader","footer","marpitFooter","styleStr","toString","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash.kebabcase\"));\n\nvar _directives = _interopRequireDefault(require(\"./directives\"));\n\nvar _plugin = _interopRequireDefault(require(\"../../plugin\"));\n\nvar _inline_style = _interopRequireDefault(require(\"../../helpers/inline_style\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** @module */\n\n/**\n * Apply parsed Marpit directives to markdown-it tokens.\n *\n * @alias module:markdown/directives/apply\n * @param {MarkdownIt} md markdown-it instance.\n * @param {Object} [opts]\n * @param {boolean} [opts.dataset=true] Assigns directives as HTML data\n *     attributes of each section tag.\n * @param {boolean} [opts.css=true] Assigns directives as CSS Custom Properties\n *     of each section tag.\n */\nfunction apply(md, opts = {}) {\n  const {\n    marpit\n  } = md;\n  const dataset = opts.dataset === undefined ? true : !!opts.dataset;\n  const css = opts.css === undefined ? true : !!opts.css;\n  const {\n    global,\n    local\n  } = marpit.customDirectives;\n  const directives = [...Object.keys(global), ...Object.keys(local), ..._directives.default];\n  md.core.ruler.after('marpit_directives_parse', 'marpit_directives_apply', state => {\n    if (state.inlineMode) return;\n\n    for (const token of state.tokens) {\n      const {\n        marpitDirectives,\n        marpitSlide,\n        marpitSlideTotal\n      } = token.meta || {};\n\n      if (marpitDirectives) {\n        const style = new _inline_style.default(token.attrGet('style'));\n\n        for (const dir of Object.keys(marpitDirectives)) {\n          if (directives.includes(dir)) {\n            const value = marpitDirectives[dir];\n\n            if (value) {\n              const kebabCaseDir = (0, _lodash.default)(dir);\n              if (dataset) token.attrSet(`data-${kebabCaseDir}`, value);\n              if (css) style.set(`--${kebabCaseDir}`, value);\n            }\n          }\n        } // Apply attribute to token\n\n\n        if (marpitDirectives.class) token.attrJoin('class', marpitDirectives.class);\n        if (marpitDirectives.color) style.set('color', marpitDirectives.color);\n        if (marpitDirectives.backgroundColor) style.set('background-color', marpitDirectives.backgroundColor).set('background-image', 'none');\n\n        if (marpitDirectives.backgroundImage) {\n          style.set('background-image', marpitDirectives.backgroundImage).set('background-position', 'center').set('background-repeat', 'no-repeat').set('background-size', 'cover');\n          if (marpitDirectives.backgroundPosition) style.set('background-position', marpitDirectives.backgroundPosition);\n          if (marpitDirectives.backgroundRepeat) style.set('background-repeat', marpitDirectives.backgroundRepeat);\n          if (marpitDirectives.backgroundSize) style.set('background-size', marpitDirectives.backgroundSize);\n        }\n\n        if (marpitDirectives.paginate) {\n          token.attrSet('data-marpit-pagination', marpitSlide + 1);\n          token.attrSet('data-marpit-pagination-total', marpitSlideTotal);\n        }\n\n        if (marpitDirectives.header) token.meta.marpitHeader = marpitDirectives.header;\n        if (marpitDirectives.footer) token.meta.marpitFooter = marpitDirectives.footer;\n        const styleStr = style.toString();\n        if (styleStr !== '') token.attrSet('style', styleStr);\n      }\n    }\n  });\n}\n\nvar _default = (0, _plugin.default)(apply);\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}
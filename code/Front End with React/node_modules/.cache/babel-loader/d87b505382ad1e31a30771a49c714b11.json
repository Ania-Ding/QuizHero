{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/yaozixuan/Document/OOSE/my-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _toConsumableArray = require(\"/Users/yaozixuan/Document/OOSE/my-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _plugin = _interopRequireDefault(require(\"../plugin\"));\n\nvar _split = _interopRequireDefault(require(\"../helpers/split\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/** @module */\n\n/**\n * Marpit heading divider plugin.\n *\n * Start a new slide page at before of headings by prepending hidden `<hr>`\n * elements.\n *\n * @alias module:markdown/heading_divider\n * @param {MarkdownIt} md markdown-it instance.\n */\n\n\nfunction headingDivider(md) {\n  var marpit = md.marpit;\n  md.core.ruler.before('marpit_slide', 'marpit_heading_divider', function (state) {\n    var target = marpit.options.headingDivider;\n    if (marpit.lastGlobalDirectives && Object.prototype.hasOwnProperty.call(marpit.lastGlobalDirectives, 'headingDivider')) target = marpit.lastGlobalDirectives.headingDivider;\n    if (state.inlineMode || target === false) return;\n    if (Number.isInteger(target) && target >= 1 && target <= 6) target = _toConsumableArray(Array(target).keys()).map(function (i) {\n      return i + 1;\n    });\n    if (!Array.isArray(target)) return;\n    var splitTag = target.map(function (i) {\n      return \"h\".concat(i);\n    });\n\n    var splitFunc = function splitFunc(t) {\n      return t.type === 'heading_open' && splitTag.includes(t.tag);\n    };\n\n    var newTokens = [];\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = (0, _split.default)(state.tokens, splitFunc, true)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var slideTokens = _step.value;\n\n        var _slideTokens = _slicedToArray(slideTokens, 1),\n            token = _slideTokens[0];\n\n        if (token && splitFunc(token) && newTokens.some(function (t) {\n          return !t.hidden;\n        })) {\n          var hr = new state.Token('hr', '', 0);\n          hr.hidden = true;\n          hr.map = token.map;\n          newTokens.push(hr);\n        }\n\n        newTokens.push.apply(newTokens, _toConsumableArray(slideTokens));\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    state.tokens = newTokens;\n  });\n}\n\nvar _default = (0, _plugin.default)(headingDivider);\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/yaozixuan/Document/OOSE/my-app/node_modules/@marp-team/marpit/lib/markdown/heading_divider.js"],"names":["Object","defineProperty","exports","value","default","_plugin","_interopRequireDefault","require","_split","obj","__esModule","headingDivider","md","marpit","core","ruler","before","state","target","options","lastGlobalDirectives","prototype","hasOwnProperty","call","inlineMode","Number","isInteger","Array","keys","map","i","isArray","splitTag","splitFunc","t","type","includes","tag","newTokens","tokens","slideTokens","token","some","hidden","hr","Token","push","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _plugin = _interopRequireDefault(require(\"../plugin\"));\n\nvar _split = _interopRequireDefault(require(\"../helpers/split\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** @module */\n\n/**\n * Marpit heading divider plugin.\n *\n * Start a new slide page at before of headings by prepending hidden `<hr>`\n * elements.\n *\n * @alias module:markdown/heading_divider\n * @param {MarkdownIt} md markdown-it instance.\n */\nfunction headingDivider(md) {\n  const {\n    marpit\n  } = md;\n  md.core.ruler.before('marpit_slide', 'marpit_heading_divider', state => {\n    let target = marpit.options.headingDivider;\n    if (marpit.lastGlobalDirectives && Object.prototype.hasOwnProperty.call(marpit.lastGlobalDirectives, 'headingDivider')) target = marpit.lastGlobalDirectives.headingDivider;\n    if (state.inlineMode || target === false) return;\n    if (Number.isInteger(target) && target >= 1 && target <= 6) target = [...Array(target).keys()].map(i => i + 1);\n    if (!Array.isArray(target)) return;\n    const splitTag = target.map(i => `h${i}`);\n\n    const splitFunc = t => t.type === 'heading_open' && splitTag.includes(t.tag);\n\n    const newTokens = [];\n\n    for (const slideTokens of (0, _split.default)(state.tokens, splitFunc, true)) {\n      const [token] = slideTokens;\n\n      if (token && splitFunc(token) && newTokens.some(t => !t.hidden)) {\n        const hr = new state.Token('hr', '', 0);\n        hr.hidden = true;\n        hr.map = token.map;\n        newTokens.push(hr);\n      }\n\n      newTokens.push(...slideTokens);\n    }\n\n    state.tokens = newTokens;\n  });\n}\n\nvar _default = (0, _plugin.default)(headingDivider);\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}
{"version":3,"sources":["components/Marpit.js","config/config.js","components/Parse.js","pages/UploadPage.js","components/Question.js","components/QuestionCount.js","components/AnswerOption.js","components/Quiz.js","components/QuizStatistic.js","theme/deault-theme.js","components/Spectacle.js","components/Button.js","components/ResultPresenter.js","pages/PresentPage.js","components/ResultStudent.js","pages/StudentPage.js","pages/HomePage.js","pages/LoginPage.js","store/actions/loginActions.js","pages/RegisterPage.js","pages/StudentRequestPage.js","pages/UploadHistory.js","utils/isLogin.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","App.js","serviceWorker.js","store/reducers/login.js","store.js","index.js","fig/logo.png"],"names":["marpitConvert","rawString","marpit","Marpit","themeSet","default","add","render","html","css","BASE_URL","parseQuiz","quizString","fileId","length","quizLists","Array","console","log","count","index","data","parsedChoice","quizzes","split","splice","quizBlock","i","choice","quiz","question","answers","quizArray","j","line","slice","push","type","content","charCode","charCodeAt","String","fromCharCode","formData","questionId","answer","countA","countB","countC","countD","axios","post","headers","then","res","catch","error","separateQuestion","slides","questions","sections","slideString","join","slidesString","Header","Layout","props","Content","Footer","name","action","authorization","MyUpload","state","file","marpitResult","display_name","beforeUpload","setState","onChange","info","status","fileList","message","success","sendFile","readFile","callSeparateQuestion","onRemove","onDownload","urlObject","window","URL","webkitURL","export_blob","Blob","save_link","document","createElementNS","href","createObjectURL","download","obj","ev","createEvent","initMouseEvent","dispatchEvent","fakeClick","exportRaw","Promise","resolve","reject","FormData","append","localStorage","getItem","reader","FileReader","readAsText","onload","e","result","onerror","getMarpit","startSharing","stopSharing","this","setItem","location","username","className","style","height","padding","position","zIndex","width","theme","mode","defaultSelectedKeys","Item","key","marginLeft","to","display","float","paddingRight","onClick","handleLogOut","background","border","paddingLeft","color","textDecoration","cursor","src","logo","alt","onPreview","pathname","query","size","marginRight","onCopy","text","React","Component","Question","QuestionCount","counter","total","AnswerOption","checked","answerType","id","value","questionCounter","answerContent","disabled","onAnswerSelected","htmlFor","Quiz","component","transitionName","transitionEnterTimeout","transitionLeaveTimeout","transitionAppear","transitionAppearTimeout","questionTotal","answerOptions","map","QuizStatistic","refreshStatistic","getStatistic","params","get","quizData","jsonArray","quizNum","xAxisData","correntPercent","num","percent","toFixed","echartOption","title","x","tooltip","trigger","axisPointer","xAxis","yAxis","axisLine","lineStyle","axisLabel","formatter","series","barGap","barWidth","itemStyle","normal","dataIndex","yAxisIndex","backgroundColor","margin","borderRadius","ref","echartsElement","option","colors","primary","secondary","quaternary","fonts","header","fontSizes","h1","h2","mdContent","template","justifyContent","bottom","Slides","toQuizCallback","buttonStyle","boarderRadius","fontSize","quizBlockCount","slideBlock","containsSlides","loop","defaultTheme","BackButton","OnClick","toSlidesCallback","ResultPresenter","PresentPage","quizBlockNumber","quizQuestions","quizList","shuffledAnswerOptions","shuffleArray","quizFlag","quizCounter","handleAnswerSelected","bind","skipQuestion","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","event","setUserAnswer","currentTarget","setTimeout","setNextQuestion","setResults","answerArray","parseInt","renderResult","renderQuiz","renderQuizPages","renderSlides","ResultStudent","StudentPage","quizBlockCounter","quizResult","FirstPage","toLogin","toEnterCode","LoginPage","formRef","createRef","onFinish","values","handleSubmit","history","email","form","getFieldValue","password","pswd","loading","onclose","login","instructorId","err","registerButtonHandler","getFieldProps","initialValues","remember","rules","required","prefix","UserOutlined","placeholder","LockOutlined","valuePropName","noStyle","Form","create","connect","setUserName","dispatch","userLoginAction","RegisterPage","backButtonHandler","replace","MailOutlined","marginTop","htmlType","Search","Input","StudentRequestPage","onSearch","permission","fetchFile","alert","MarkDownFile","generateSlides","enterButton","demoData","UploadHistory","list","getData","callback","initLoading","paddingTop","margin-top","itemLayout","dataSource","renderItem","item","actions","avatar","active","Meta","isLogin","PrivateRoute","rest","PublicRoute","restricted","createBrowserHistory","AppRouter","path","exact","App","Boolean","hostname","match","initialState","setUserNameReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","ReduxThunk","subscribe","getState","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.c2449fb9.chunk.js","sourcesContent":["import Marpit from \"@marp-team/marpit\";\n\nconst marpitConvert=(rawString)=> {\n    // this.setState({\n    //     rawString : result\n    // }, () => {this.separateQuestion();});\n    // 1. Marpit\n    const marpit = new Marpit();\n    // 2. Add Marpit theme CSS\n    const theme = `\n        /* @theme example */\n\n        section {\n          background-color: #369;\n          color: #fff;\n          font-size: 30px;\n          padding: 40px;\n        }\n\n    h1,\n    h2 {\n      text-align: center;\n      margin: 0;\n    }\n\n    h1 {\n      color: #8cf;\n    }\n    `\n    marpit.themeSet.default = marpit.themeSet.add(theme)\n    // 3. Render markdown\n    const {html, css} = marpit.render(rawString);\n    // 4. Use output in your HTML\n    let filestring = `\n        <!DOCTYPE html>\n        <html><body>\n          <style>${css}</style>\n          ${html}\n        </body></html>\n        `\n    ;\n    return filestring;\n}\n\nexport default marpitConvert;","\n//const httpHost = \"http://192.168.0.130:7001\";\n// export const BASE_URL = document.location.origin;\nexport const BASE_URL = \"https://quiz-hero.herokuapp.com\";\n\n\n/**\n * 将原来的jsp菜单配置成现在的路由\n * @type {}\n */\nexport const menuConfigs = {\n    \"/ews/mechanic/mechanicManager.jsp\": \"/main/mechanicEditable\", // 技师\n    \"/ews/ro/roManager.jsp\": \"/main/newro\", // 新工单管理\n    // \"/ews/ro/roManager.jsp\": \"/main/ro\", // 工单管理\n    \"/report/baseRpt/efficiencyRpt.jsp\": \"/main/rpt\", // 人效统计\n    \"/ews/supplyChain/managerOrder.jsp\": \"\", // 维护订单\n    \"/ews/supplyChain/purchaseIn.jsp\": \"\", // 采购入库\n     \"/ews/ro/u8cSyncFailed.jsp\": \"/main/u8c\",//U8C同步\n     \"/menuui/deskTop.jsp\": \"/main/home\" // 工作统计\n}","import axios from \"axios\";\nimport {BASE_URL} from \"../config/config\";\n\nconst separateQuestion = (rawString, fileId) => {\n\n    // rawstring分成slide array 和 question array,\n    // 赋值给slideStringList, quizStringList\n\n    var slides = new Array(100);\n    var questions = new Array(100);\n    for (var i = 0; i < 100; i ++) {\n        slides[i] = new Array();\n        questions[i] = new Array();\n    }\n\n    var sections = rawString.split(\"---\\n\\n\")  // => section[]\n\n    var index = 0;\n    for (var i = 0; i < sections.length; i++) {\n\n        const section = sections[i].split(\" \");\n        if (section[0] === \">\") {\n            questions[index].push(sections[i]);\n            slides[index].push(\"$$$quiz$$$\\n\\n\");\n\n            console.log(index);\n            console.log(questions[index]);\n            index ++;\n        } else {\n            slides[index].push(sections[i])\n        }\n    }\n    var i = 0;\n    var slideString = new Array();\n    var quizString = new Array();\n    while (slides[i] != \"\") {\n        slideString[i] = slides[i].join(\"---\\n\\n\");\n        if (questions[i] != \"\") {\n            quizString[i] = questions[i].join(\"---\\n\\n\");\n        }\n        i ++;\n    }\n\n    var questions = parseQuiz(quizString, fileId);\n    var data = {\n        quiz: questions,\n        slidesString: slideString,\n        fileId: fileId\n    }\n    return data;\n}\n\n//question变成quizLists(quiz, quizBlock, quizLists)\nconst parseQuiz = (quizString, fileId) => {\n    // this.separateQuestion(this.state.rawString);\n    // var quizList = new Array();\n    // var data = this.state.quizString;\n    // var quizzes = data.split(\"\\n\\n\");\n    // var parsedChoice;\n    // console.log(this.state.quizString);\n    // console.log(this.state.quizString.length);\n    var length = quizString.length;\n    var quizLists = new Array();\n    // for(var i = 0; i < length; i ++) {\n    //     quizLists[i]=new Array();\n    // }\n    console.log(length);\n    var count = 1;\n    for (var index = 0; index < length; index ++) {\n        var data = quizString[index];\n        console.log(index);\n        console.log(quizString[index]);\n        var quizzes = data.split(\"\\n\\n\");\n        if (quizzes[quizzes.length - 1] == \"\") {\n            quizzes.splice(quizzes.length - 1, 1);\n        }\n        console.log(quizzes);\n        var parsedChoice;\n        var quizBlock = new Array();\n        console.log(quizBlock);\n\n        for (var i = 0; i < quizzes.length; i++) {\n            var choice = \"A\";\n            var quiz = {\n                question: \"\",\n                answers: []\n            };\n            var quizArray = quizzes[i].split(\"\\n\");\n            for (var j = 0; j < quizArray.length; j++) {\n                var line = quizArray[j];\n                if (line.length > 1) {\n                    console.log(line)\n                    if (line.slice(0, 11) === \"> Question:\") {\n                        // parse question\n                        quiz.question = line.slice(12, line.length);\n                        // quiz.question = parsedQuestion.join(\" \");\n                    } else if (line[0] === '*' && line.slice(2, 5) === \"[x]\") {\n                        // parse correct choice\n                        parsedChoice = line.slice(6, line.length);\n                        // parsedChoice = parsedChoice.join(\" \");\n                        quiz.answers.push({\n                            type: choice,\n                            content: parsedChoice\n                        });\n                        var charCode = choice.charCodeAt(0);\n                        choice = String.fromCharCode(charCode + 1);\n\n                        // send correct answer to backend\n\n                        const formData = {\n                            fileId: fileId,\n                            // questionId : quizBlock.length + 1,\n                            questionId: count,\n                            answer: String.fromCharCode(charCode),\n                            countA: 0,\n                            countB: 0,\n                            countC: 0,\n                            countD: 0,\n                        }\n                        count++;\n                        console.log(formData)\n                        axios\n                            .post(BASE_URL + \"/quiz\", formData, {\n                                headers: {\n                                    \"Content-Type\": \"multipart/form-data\"\n                                }\n                            })\n                            .then(res => {\n                                console.log(\"quiz initialize success\");\n                            })\n                            .catch((error) => {\n                                console.log(error)\n                            });\n                    } else if (line[0] === '*' && line.slice(2, 5) === \"[ ]\") {\n                        // parse wrong choice\n                        parsedChoice = line.slice(6, line.length);\n                        // parsedChoice = parsedChoice.join(\" \");\n                        quiz.answers.push({\n                            type: choice,\n                            content: parsedChoice\n                        });\n                        var charCode = choice.charCodeAt(0);\n                        choice = String.fromCharCode(charCode + 1);\n                    }\n                }\n            }\n            quizBlock.push(quiz);\n        }\n        quizLists.push(quizBlock);\n        console.log(quizLists)\n    }\n    console.log(quizLists);\n    return quizLists;\n};\n\nexport default separateQuestion;","import { Upload, message, Button, Icon, Layout, Menu} from 'antd';\nimport React from \"react\";\nimport marpitConvert from '../components/Marpit'\nimport separateQuestion from \"../components/Parse\";\nimport axios from 'axios';\nimport {BASE_URL} from \"../config/config\"\nimport {Link} from \"react-router-dom\"\nimport {CopyToClipboard} from 'react-copy-to-clipboard'\nimport logo from \"../fig/logo.png\";\nimport {func} from \"prop-types\";\nimport {enableTopologicalTravel} from \"echarts/src/util/component\";\nconst { Header, Content, Footer } = Layout;\n\n// const fs = require('fs');\nconst props = {\n    name: 'file',\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n    headers: {\n        authorization: 'authorization-text',\n    },\n};\n\nclass MyUpload extends React.Component{\n    constructor(props) {\n        super(props);\n        // this.beforeUpload.bind = this.beforeUpload.bind(this);\n    }\n    state = {\n        file:\"\",\n        fileId:\"\",\n        rawString:\"\",\n        data:\"\",\n        marpitResult:\"\",\n        display_name:'none'\n    }\n\n\n    beforeUpload = (file) => {\n        console.log(\"FILEEE\",file);\n        this.setState({\n            file:file\n        });\n    }\n\n    onChange = (info) => {\n        if (info.file.status !== 'uploading') {\n            console.log(info.file, info.fileList);\n        }\n        if (info.file.status === 'done') {\n            console.log(info.file.name);\n            message.success(`${info.file.name} file uploaded successfully`);\n            this.sendFile()\n                .then(this.readFile)\n                .then(this.callSeparateQuestion);\n            // this.sendFile()\n            //     .then(this.trans);\n            // this.readFile()\n            //     .then(this.convertText);\n\n            this.state.display_name = this.display_name();\n\n        } else if (info.file.status === 'error') {\n            console.log(info.file.name);\n            message.error(`${info.file.name} file upload failed.`);\n        }\n    }\n\n    onRemove = () => {\n        this.state.display_name = this.display_name();\n    }\n\n    onDownload = () => {\n        function fakeClick(obj) {\n            var ev = document.createEvent(\"MouseEvents\");\n            ev.initMouseEvent(\"click\", true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n            obj.dispatchEvent(ev);\n        }\n        function exportRaw(name, data) {\n            var urlObject = window.URL || window.webkitURL || window;\n            var export_blob = new Blob([data]);\n            var save_link = document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n            save_link.href = urlObject.createObjectURL(export_blob);\n            save_link.download = name;\n            fakeClick(save_link);\n        }\n        exportRaw('filename.html', this.state.marpitResult);\n    }\n\n    // send markdown file to backend and set the database returned fileId to state\n    sendFile =() => {\n        var file = this.state.file;\n        var p = new Promise((resolve, reject) => {\n            const formData = new FormData();\n            formData.append('file', file);\n            formData.append('userId', localStorage.getItem(\"instructorId\"));\n            console.log(\"Send data to backend\", formData);\n            axios.post(BASE_URL + \"/upload\", formData)\n                .then(res => {\n                    console.log(\"CCC\",res.data);\n                    this.setState({fileId : res.data.fileId})\n                    resolve(res.data.fileId);\n                    // alert(\"File uploaded successfully.\");\n                })\n                .catch((error) => {\n                    reject(error);\n                });\n        });\n        return p;\n    }\n\n    readFile=()=>{\n        var file = this.state.file;\n        var p = new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsText(file);\n            reader.onload = (e) => {\n                // let content = e.target.result;\n                this.setState({rawString : reader.result});\n                resolve(reader.result);\n            };\n            reader.onerror = function (e) {\n                reject(e);\n            };\n        });\n        return p;\n    }\n\n    callSeparateQuestion =()=>{\n        const data = separateQuestion(this.state.rawString, this.state.fileId);\n        console.log(data)\n        this.setState({data : data});\n        this.getMarpit();\n    }\n\n    // Marpit for download\n    getMarpit=()=>{\n        const marpitResult = marpitConvert(this.state.rawString)\n        this.setState({\n            marpitResult : marpitResult\n        })\n    }\n\n    startSharing=()=>{\n        const formData = new FormData();\n        formData.append('fileId', this.state.fileId);\n        formData.append('permission', true);\n        axios.post(BASE_URL + \"/quizpermission\", formData)\n            .then(()=> message.success(`Share code ${this.state.fileId} is copied on your clipboard`))\n            .catch(()=> message.error('error'));\n    }\n\n    stopSharing=()=>{\n        const formData = new FormData();\n        formData.append('fileId', this.state.fileId);\n        formData.append('permission', false);\n        axios.post(BASE_URL + \"/quizpermission\", formData)\n            .then(()=> message.success(`File ${this.state.fileId} stop sharing`))\n            .catch(()=> message.error('error'));\n    }\n\n    display_name () {\n        if (this.state.display_name === 'none') {\n            this.setState({\n                display_name:'block'\n            })\n        }else if (this.state.display_name === 'block'){\n            this.setState({\n                display_name:'none'\n            })\n        }\n    };\n    \n    handleLogOut(){\n        localStorage.setItem(\"username\",null)\n        localStorage.setItem(\"instructorId\",0)\n        localStorage.setItem(\"isLogin\",0)\n        window.location = \"/login\"\n    }\n\n\n\n    render(){\n        const username = localStorage.getItem(\"username\")?localStorage.getItem(\"username\"):\"\";\n\n        const logOutBtnStyle = {\n                background: \"none\",\n                border: \"none\",\n                paddingLeft: \"5px\",\n                color: \"#1890FF\",\n                textDecoration: \"underline\",\n                cursor: \"pointer\"\n        };\n\n        return(\n            <div className=\"App\">\n                <Header style={{height: 0, padding: 0, position: 'fixed', zIndex: 1, width: '100%' }}>\n                    <div className=\"logo\" />\n                    <Menu theme=\"white\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\n\n                        {/*<Menu.Item key=\"1\">Upload </Menu.Item>*/}\n\n                        {/*<Menu.Item key=\"2\">History </Menu.Item>*/}\n                        <Menu.Item key=\"1\" style={{marginLeft:\"160px\"}}>\n                            <Link to={'/HomePage'}>Upload</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"2\">\n                            <Link to={'/history'}>History</Link>\n                        </Menu.Item>\n                        \n                        <div style={{display:\"inline-block\",float:\"right\",paddingRight:\"30px\"}}>\n                             Welcome, {username}\n                             <button onClick={this.handleLogOut} style={logOutBtnStyle}>Log Out</button>\n                        </div>\n                        \n\n                    </Menu>\n                </Header>\n                \n                <header className=\"App-header\">\n                    \n                    <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                    <div>\n                        {/* Upload button*/}\n                        <div>\n                            <Upload\n                                onChange={this.onChange}\n                                beforeUpload={this.beforeUpload}\n                                onDownload={this.onDownload}\n                                onPreview={this.onPreview}\n                                onRemove={this.onRemove}\n                                {...props}>\n\n                                <Button>\n                                    <Icon type = 'upload' /> Click to Upload\n                                </Button>\n\n                            </Upload>\n                        </div>\n                        {/*Presenter/Student mode button*/}\n                        <div style={{display:this.state.display_name}}>\n                            <Link to={{pathname: '/presenter', query: this.state.data}}>\n                                <Button size={\"large\"} style={{marginRight: 10}}>\n                                    <Icon/>Presenter mode\n                                </Button>\n                            </Link>\n                            <Link to={{pathname: '/student', query: this.state.data}}>\n                                <Button size={\"large\"} style={{marginLeft: 10}}>\n                                    <Icon/>Student mode\n                                </Button>\n                            </Link>\n                        </div>\n                        <div style={{display:this.state.display_name}}>\n                            <CopyToClipboard\n                                onCopy={this.startSharing}\n                                text={this.state.fileId}>\n                                <Button size={\"large\"} style={{marginLeft: 10}}>\n                                    <Icon/>Start sharing\n                                </Button>\n                            </CopyToClipboard>\n                            <Button size={\"large\"} style={{marginLeft: 10}}\n                                onClick={this.stopSharing}>\n                                <Icon/>Stop sharing\n                            </Button>\n                        </div>\n                    </div>\n\n                </header>\n            </div>\n        )\n    }\n}\n\nexport default MyUpload;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Question(props) {\n    return <h2 className=\"question\">{props.content}</h2>;\n}\n\nQuestion.propTypes = {\n    content: PropTypes.string.isRequired\n};\n\nexport default Question;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction QuestionCount(props) {\n    return (\n        <div className=\"questionCount\">\n            Question <span>{props.counter}</span> of <span>{props.total}</span>\n        </div>\n    );\n}\n\nQuestionCount.propTypes = {\n    counter: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired\n};\n\nexport default QuestionCount;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AnswerOption(props) {\n    return (\n        <li className=\"answerOption\">\n            <input\n                type=\"radio\"\n                className=\"radioCustomButton\"\n                name=\"radioGroup\"\n                checked={props.answerType === props.answer}\n                id={props.answerType}\n                value={props.answerType+\" \"+props.questionCounter+\" \"+props.answerContent}\n                disabled={props.answer}\n                onChange={props.onAnswerSelected}\n            />\n            <label className=\"radioCustomLabel\" htmlFor={props.answerType}>\n                {props.answerContent}\n            </label>\n        </li>\n    );\n}\n\nAnswerOption.propTypes = {\n    answerType: PropTypes.string.isRequired,\n    answerContent: PropTypes.string.isRequired,\n    answer: PropTypes.string.isRequired,\n    onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default AnswerOption;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Question from '../components/Question';\nimport QuestionCount from '../components/QuestionCount';\nimport AnswerOption from '../components/AnswerOption';\n\nfunction Quiz(props) {\n    function renderAnswerOptions(key) {\n        return (\n            <AnswerOption\n                key={key.content}\n                answerContent={key.content}\n                answerType={key.type}\n                answer={props.answer}\n                questionId={props.questionId}\n                onAnswerSelected={props.onAnswerSelected}\n                questionCounter={props.questionCounter}\n            />\n        );\n    }\n\n    return (\n        <CSSTransitionGroup\n            className=\"container\"\n            component=\"div\"\n            transitionName=\"fade\"\n            transitionEnterTimeout={800}\n            transitionLeaveTimeout={500}\n            transitionAppear\n            transitionAppearTimeout={500}\n        >\n            <div key={props.questionId}>\n                <QuestionCount counter={props.questionId} total={props.questionTotal} />\n                <Question content={props.question} />\n                <ul className=\"answerOptions\">\n                    {props.answerOptions.map(renderAnswerOptions)}\n                </ul>\n            </div>\n        </CSSTransitionGroup>\n    );\n}\n\nQuiz.propTypes = {\n    answer: PropTypes.string.isRequired,\n    answerOptions: PropTypes.array.isRequired,\n    question: PropTypes.string.isRequired,\n    questionId: PropTypes.number.isRequired,\n    questionTotal: PropTypes.number.isRequired,\n    onAnswerSelected: PropTypes.func.isRequired\n};\n\nexport default Quiz;\n","import React from 'react';\nimport ReactEcharts from 'echarts-for-react';\nimport axios from 'axios'\nimport {Button} from 'antd'\nimport {BASE_URL} from \"../config/config\"\n\nclass QuizStatistic extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            quizData : [],\n            fileId : props.fileId\n        }\n        console.log(this.state.fileId)\n    }\n    \n    componentDidMount(){\n        this.getStatistic();\n    }\n\n    refreshStatistic = () =>{\n        console.log(\"Push\");\n        this.getStatistic();\n    } \n\n    getStatistic = ()=>{\n        let params = {\n            fileId : this.state.fileId,\n            questionId: 1,\n        }\n        console.log(params)\n        axios\n        .get(BASE_URL + \"/quizstat\", {params})\n        .then((res) => {\n            if(res.status === 200){\n                this.setState({quizData : res.data});\n                console.log(\"res\",res);\n            }\n            // console.log(res.data);\n        })\n        .catch((error) => {\n            console.log(\"error\")\n        });\n    }\n\n    render() {\n        // const {chartData} = this.props;\n        // const charData = [];\n        // const myChartData = chartData.details?chartData.details.dtl:[];\n        // const categories = [], roArray = [], shfArray = [], avgArray = [];\n\n        // myChartData.map((item)=>{\n        //     const roNum = parseFloat(item.RO_COUNT);\n        //     const shfNum = parseFloat(item.SHF_COUNT);\n        //     const avgNum = parseFloat(item.AVG_VAL);\n\n        //     categories.push(item.MECHANIC_NAME);\n        //     roArray.push(roNum);\n        //     shfArray.push(shfNum);\n        //     avgArray.push(avgNum);\n        // });\n\n        // console.log(\"quiz data\",typeof(this.state.quizData))\n        var jsonArray = this.state.quizData;\n        // for(let i=0;i<jsonArray.length;i++){\n        //     jsonArray[i].answer = 'B';\n        // }\n\n        // var jsonArray = [\n        //     {\n        //         \"id\": 1,\n        //         \"fileId\": 1,\n        //         \"questionId\": 1,\n        //         \"answer\": 'B',\n        //         \"countA\": 13,\n        //         \"countB\": 14,\n        //         \"countC\": 8,\n        //         \"countD\": 9\n        //     },\n        //     {\n        //         \"id\": 2,\n        //         \"fileId\": 1,\n        //         \"questionId\": 2,\n        //         \"answer\": 'C',\n        //         \"countA\": 8,\n        //         \"countB\": 6,\n        //         \"countC\": 25,\n        //         \"countD\": 11\n        //     }\n        // ];\n     \n        var quizNum = 0;\n        var xAxisData = [];\n        var countA = [];\n        var countB = [];\n        var countC = [];\n        var countD = [];\n        var answers = [];\n        var correntPercent = [];\n        var color = ['#C6E579', '#FE8463', '#32D3EB'];\n\n        for (var index in jsonArray) {\n            quizNum = quizNum + 1;\n            xAxisData.push(\"Q\" + quizNum);\n            countA.push(jsonArray[index].countA);\n            countB.push(jsonArray[index].countB);\n            countC.push(jsonArray[index].countC);\n            countD.push(jsonArray[index].countD);\n            answers.push(jsonArray[index].answer);\n            var total = jsonArray[index].countA + jsonArray[index].countB + jsonArray[index].countC + jsonArray[index].countD;\n            var num = 0;\n            if (jsonArray[index].answer === \"A\") {\n                num = jsonArray[index].countA;\n            }\n            else if (jsonArray[index].answer === \"B\") {\n                num = jsonArray[index].countB;\n            }\n            else if (jsonArray[index].answer === \"C\") {\n                num = jsonArray[index].countC;\n            }\n            else if (jsonArray[index].answer === \"D\") {\n                num = jsonArray[index].countD;\n            }\n            var percent = num / total * 100;\n            correntPercent.push(percent.toFixed(1));\n        }\n\n       \n        const echartOption = {\n            title: { text: 'Quiz Statistic',\n                    x:'center'},\n    \n            tooltip: {\n                trigger: 'axis',\n                axisPointer: {type: 'shadow'},\n            },\n            // legend: {\n            //     orient: 'horizontal',\n            //     x:'center',\n            //     y: 'top',\n            //     data: [\n            //         {\n            //             name: 'Correct Answer',\n            //             textStyle:{fontWeight:'bold', color:'green'}\n            //         },\n            //         {\n            //             name: 'Wrong Answer',\n            //             textStyle:{fontWeight:'bold', color:'blue'}\n            //         },\n\n            //     ],  \n            // },\n            \n            xAxis: {\n                // name:\"Quiz Number\",\n                // data: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n                data: xAxisData,\n            },\n            yAxis: [\n                {\n                    type: 'value',\n                    name:\"Amount of Choices\",\n                    position: 'left',\n                    axisLine: {\n                        lineStyle: {\n                            color: 'black'\n                        }\n                    },\n                },\n                {\n                    type: 'value',\n                    name: 'Correct Percentage',\n                    position: 'right',\n                    axisLine: {\n                        lineStyle: {\n                            color: 'black'\n                        }\n                    },\n                    axisLabel: {\n                        formatter: '{value} %'\n                    }\n                }\n            ],\n            series: [\n                {\n                    name: 'A',\n                    type: 'bar',\n                    barGap: 0.1,\n                    barWidth : 30,\n                    data: countA,\n                    itemStyle: {\n                        normal: {\n                            color: function(params) {                        \n                                return answers[params.dataIndex] === 'A' ? color[0] : color[1];\n                            }\n                        }\n                    }\n                },\n                {\n                    name: 'B',\n                    type: 'bar',\n                    barWidth : 30,\n                    data: countB,\n                    itemStyle: {\n                        normal: {\n                            color: function(params) {\n                                return answers[params.dataIndex] === 'B' ? color[0] : color[1];\n                            }\n                        }\n                    }\n                },\n                {\n                    name:'C',\n                    type:'bar',\n                    barWidth: 30,\n                    data: countC,\n                    itemStyle: {\n                        normal: {\n                            color: function(params) {\n                                return answers[params.dataIndex] === 'C' ? color[0] : color[1];\n                            }\n                        }\n                    }\n                },\n                {\n                    name:'D',\n                    type:'bar',\n                    barWidth: 30,\n                    data: countD,\n                    itemStyle: {\n                        normal: {\n                            color: function(params) {\n                                return answers[params.dataIndex] === 'D' ? color[0] : color[1];\n                            }\n                        }\n                    }\n                },\n                {\n                    name: 'Corrent Percentage',\n                    type: 'line',\n                    data: correntPercent,\n                    yAxisIndex: 1,\n                    itemStyle: {\n                        normal: {color: color[2]}\n                    }\n                }\n            ]\n        };\n\n        const firstButtonStyle = {\n            backgroundColor:'#C6E579',\n            width:\"30px\",\n            height:\"15px\",\n            margin:\"0px 10px\",\n            borderRadius: \"3px\"\n          };\n\n          const secondButtonStyle = {\n            backgroundColor:'#FE8463',\n            width:\"30px\",\n            height:\"15px\",\n            margin:\"0px 10px\",\n            borderRadius: \"3px\"\n          };\n\n        return (\n            <div>\n                <div className=\"legend\" style={{float:\"left\"}}>\n                    <span style={{marginLeft:\"10px\"}}>Correct Answer</span><button style={firstButtonStyle}></button>\n                    <span style={{marginLeft:\"10px\"}}>Wrong Answer</span><button style={secondButtonStyle}></button>   \n                </div>\n                <Button onClick={this.refreshStatistic}>Refresh</Button>\n                <ReactEcharts\n                    ref={(e) => {this.echartsElement = e }}\n                    option={echartOption}\n                    theme=\"clear\"\n                />\n            </div>\n        )\n    }\n}\n\nexport default QuizStatistic","export default {\n    background:{\n        backgroundColor: 'white',\n\n    },\n    colors: {\n\n        primary: 'white',\n        secondary: 'blue',\n        quaternary: 'yellow'\n    },\n    fonts: {\n        header: '\"Helvetica Neue\", Helvetica, Arial, sans-serif'\n    },\n    fontSizes: {\n        h1: '70px',\n        h2: '60px',\n        text:'25px'\n    }\n};","import React from 'react';\nimport { render } from 'react-dom';\nimport { Upload, message, Button, Icon } from 'antd';\nimport defaultTheme from '../theme/deault-theme';\nimport { Box, Deck, FlexBox, FullScreen, Markdown, Progress, Slide, Heading, Notes} from 'spectacle';\n// import createTheme from 'spectacle/lib/themes/default';\n\n// import createTheme from 'spectacle-theme-nova';\n \n\n// const customStyles = {\n//     global: {\n//       body: { background: 'white' }\n//     }\n//   };\n// const myTheme = createTheme(null, customStyles);\n\n// SPECTACLE_CLI_MD_START\n// import mdContent from './questions.md';\n// SPECTACLE_CLI_MD_END\nconst mdContent = `> Question: What is your favorite course?`\n// SPECTACLE_CLI_THEME_START\nconsole.log(mdContent)\nconst theme = {\n    // colors: {\n    //     primary: '#f00',\n    //     secondary: '#00f'\n    // }\n};\n// SPECTACLE_CLI_THEME_END\n\n// SPECTACLE_CLI_TEMPLATE_START\nconst template = () => (\n    <FlexBox\n        justifyContent=\"space-between\"\n        position=\"absolute\"\n        bottom={0}\n        width={1}\n    >\n        <Box padding=\"0 1em\">\n            <FullScreen />\n        </Box>\n        <Box padding=\"1em\">\n            <Progress />\n        </Box>\n    </FlexBox>\n);\n\n// SPECTACLE_CLI_TEMPLATE_END\n\n// const Presentation = () => (\n//     <Deck loop theme={theme} template={template}>\n//         {/*<Markdown containsSlides>{mdContent}</Markdown>*/}\n//         <Slide>\n//             <Heading>Welcome to Spectacle</Heading>\n//         </Slide>\n//         <Slide>\n//             <Heading>Next, We will do some in class quiz</Heading>\n//             <Upload>\n//                 <Button\n//                     onDownload={this.onDownload}>\n//                     <Icon type = 'upload' /> Click to Next page\n//                 </Button>\n//             </Upload>\n//         </Slide>\n//     </Deck>\n// );\n\nclass Slides extends React.Component{\n    constructor(props) {\n        super(props);\n        this.toQuizCallback = props.toQuizCallback;\n        this.slides = props.slides;\n        // this.beforeUpload.bind = this.beforeUpload.bind(this);\n\n    }\n\n    onClick = () => {\n        this.toQuizCallback(1);\n        console.log(this.slides)\n    }\n\n    render(){\n        console.log(mdContent)\n        const buttonStyle = {\n            backgroundColor:\"#ecc\",\n            width:\"200px\",\n            height:\"50px\",\n            margin:\"0px 10px\",\n            boarderRadius:\"3px\",\n            fontSize:\"20px\"\n        };\n\n        const content = [];\n        var quizBlockCount = 0;\n        for (var i = 0; i < this.slides.length; i ++) {\n            var data = this.slides[i];\n            var slideBlock = data.split(\"---\\n\\n\");\n            console.log(slideBlock);\n            if (slideBlock[slideBlock.length - 1] === \"$$$quiz$$$\\n\\n\") {\n                const count = quizBlockCount\n                slideBlock.splice(slideBlock.length - 1, 1);\n                data = slideBlock.join(\"---\\n\\n\");\n                content.push(\n                    <Markdown containsSlides>{data}</Markdown>\n\n                )\n                content.push(\n                    <Slide style={{backgroundColor:\"#fff\"}}>\n                        <Heading>Now lets do some funny quizzes!</Heading>\n                        <Heading>\n                            <Button\n                                onClick={() => {this.toQuizCallback(count)}} style={buttonStyle}>\n                                <Icon /> Click to start quiz\n                            </Button>\n                        </Heading>\n\n                    </Slide>\n                )\n                quizBlockCount ++;\n            } else {\n                content.push(\n\n                    <Markdown containsSlides>{data}</Markdown>\n\n                )\n            }\n\n\n        }\n\n\n        return (\n            // <Deck loop theme={defaultTheme} template={template}>\n            //\n            //     <Markdown containsSlides>{this.slides}</Markdown>\n            //     {/*quiz reminder page*/}\n            //     <Slide backgroundColor={\"#fff\"}>\n            //         <Heading>Now lets do some funny quizzes!</Heading>\n            //         <Heading>\n            //             <Button\n            //                 onClick={this.onClick} style={buttonStyle}>\n            //                 <Icon /> Click to start quiz\n            //             </Button>\n            //         </Heading>\n            //\n            //     </Slide>\n            //     <Markdown containsSlides>{this.slides}</Markdown>\n            // </Deck>\n            <Deck loop theme={defaultTheme} template={template} style={{backgroundColor:\"#fff\"}}>\n                {content}\n            </Deck>\n        );\n    }\n    // render (<Presentation />, document.getElementById('root'));\n}\n\nexport default Slides;","import React from 'react';\nimport { render } from 'react-dom';\nimport { Upload, message, Button, Icon } from 'antd';\nimport Slides from \"./Spectacle\";\n\nclass BackButton extends React.Component{\n    constructor(props) {\n        super(props);\n        // this.toSlidesCallback = props.toSlidesCallback;\n\n    }\n    OnClick =()=> {\n        this.props.toSlidesCallback();\n    }\n    render () {\n        return (\n            <Button\n                onClick={this.OnClick}>\n                <Icon /> Back to Slides\n            </Button>\n        )\n    }\n\n}\n\nexport default BackButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport QuizStatictic from './QuizStatistic'\nimport BackButton from './Button'\n\nfunction ResultPresenter(props) {\n    return (\n        <div>\n            <CSSTransitionGroup\n                className=\"container result\"\n                component=\"div\"\n                transitionName=\"fade\"\n                transitionEnterTimeout={800}\n                transitionLeaveTimeout={500}\n                transitionAppear\n                transitionAppearTimeout={500}\n            >\n            <div>\n                {/* Thank you for taking the quiz, your score is <strong>{props.quizResult}</strong>! */}\n                Thank you for finishing the quiz, here are the statistics:\n            </div>\n            </CSSTransitionGroup>\n            <QuizStatictic fileId = {props.fileId}/>\n            <BackButton toSlidesCallback={props.toSlidesCallback}/>\n        </div>\n    );\n}\n\nResultPresenter.propTypes = {\n    // quizResult: PropTypes.string.isRequired\n};\n\nexport default ResultPresenter;\n","import React, { Component } from 'react';\nimport Quiz from '../components/Quiz';\nimport ResultPresenter from '../components/ResultPresenter';\nimport axios from 'axios'\nimport {Button, Icon} from \"antd\";\nimport Slides from \"../components/Spectacle\";\nimport {BASE_URL} from \"../config/config\"\n\nclass PresentPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            counter: 0,\n            questionId: 1,\n            questionCounter : 1,\n            question: '',\n            answerOptions: [],\n            // answer: '',\n            // answersCount: {},\n            result: '',\n            fileId: props.location.query.fileId,\n            quizCounter : 0,\n            quizList: props.location.query.quiz,\n            quizQuestions:props.location.query.quiz[0],\n            slides: props.location.query.slidesString\n        };\n\n        this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\n        this.skipQuestion = this.skipQuestion.bind(this);\n    }\n\n    componentDidMount() {\n        console.log(this.state.quizQuestions)\n        const shuffledAnswerOptions = this.state.quizQuestions.map(question =>\n            this.shuffleArray(question.answers)\n        );\n        this.setState({\n            question: this.state.quizQuestions[0].question,\n            answerOptions: shuffledAnswerOptions[0]\n        });\n    }\n\n    shuffleArray(array) {\n        var currentIndex = array.length,\n            temporaryValue,\n            randomIndex;\n\n        // While there remain elements to shuffle...\n        while (0 !== currentIndex) {\n            // Pick a remaining element...\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n\n            // And swap it with the current element.\n            temporaryValue = array[currentIndex];\n            array[currentIndex] = array[randomIndex];\n            array[randomIndex] = temporaryValue;\n        }\n\n        return array;\n    }\n\n    handleAnswerSelected(event) {\n        this.setUserAnswer(event.currentTarget.value);\n        console.log(event.currentTarget.value);\n        if (this.state.questionId < this.state.quizQuestions.length) {\n            setTimeout(() => this.setNextQuestion(), 300);\n        } else {\n            setTimeout(() => this.setResults(), 300);\n        }\n    }\n\n    setUserAnswer(answer) {\n        var answerArray = answer.split(\" \");\n        var type = answerArray[0];\n        var questionCounter = answerArray[1];\n        // var answerContent = answerArray[2];\n        console.log(answerArray)\n        // this.setState((state, props) => ({\n        //     answersCount: {\n        //         ...state.answersCount,\n        //         [answer]: (state.answersCount[type] || 0) + 1\n        //     },\n        //     answer: type\n        // }));\n\n        //send choice to back-end\n        // const BASE_URL = document.location.origin;\n        const formData = {\n            fileId : this.state.fileId,\n            questionId : parseInt(questionCounter),\n            choice : type\n        }\n        console.log(formData)\n        axios\n            .post(BASE_URL+\"/record\", formData, {\n                headers: {\n                    \"Content-Type\": \"multipart/form-data\"\n                }\n            })\n            .then(() => {\n                console.log(\"upload success\");\n            })\n            .catch((error) => {\n                console.log(\"error\")\n            });\n    }\n\n    setNextQuestion() {\n        const counter = this.state.counter + 1;\n        const questionId = this.state.questionId + 1;\n        const questionCounter = this.state.questionCounter + 1;\n        // console.log(this.state.quizQuestions);\n        this.setState({\n            counter: counter,\n            questionId: questionId,\n            question: this.state.quizQuestions[counter].question,\n            answerOptions: this.state.quizQuestions[counter].answers,\n            answer: '',\n            questionCounter: questionCounter\n        });\n    }\n\n    // setNextPart() {\n    //     const questionId = 1;\n    //     const counter = 0;\n    //     const quizCounter = this.state.quizCounter + 1;\n    //     const questionCounter = this.state.questionCounter + 1;\n    //     const quizQuestions = this.state.quizList[quizCounter];\n    //     const shuffledAnswerOptions = quizQuestions.map(question =>\n    //         this.shuffleArray(question.answers)\n    //     );\n    //\n    //     this.setState({\n    //         questionId : questionId,\n    //         counter : counter,\n    //         quizCounter : quizCounter,\n    //         quizQuestions : quizQuestions,\n    //         question: quizQuestions[0].question,\n    //         answerOptions: shuffledAnswerOptions[0],\n    //         questionCounter: questionCounter\n    //\n    //     })\n    //\n    // }\n\n    skipQuestion() {\n        if (this.state.questionId < this.state.quizQuestions.length) {\n            setTimeout(() => this.setNextQuestion(), 300);\n        } else {\n            setTimeout(() => this.setResults(), 300);\n        }\n    }\n\n    // getResults() {\n    //     const answersCount = this.state.answersCount;\n    //     const answersCountKeys = Object.keys(answersCount);\n    //     const answersCountValues = answersCountKeys.map(key => answersCount[key]);\n    //     const maxAnswerCount = Math.max.apply(null, answersCountValues);\n    //\n    //     return answersCountKeys.filter(key => answersCount[key] === maxAnswerCount);\n    // }\n\n    setResults(result) {\n        this.setState({\n            result : 1\n        });\n        // if (result.length === 1) {\n        //     this.setState({ result: result[0] });\n        // } else {\n        //     this.setState({ result: 'Undetermined' });\n        // }\n    }\n\n    renderQuiz() {\n        return (\n            <div>\n                <Quiz\n                    answer={this.state.answer}\n                    answerOptions={this.state.answerOptions}\n                    questionId={this.state.questionId}\n                    question={this.state.question}\n                    questionTotal={this.state.quizQuestions.length}\n                    onAnswerSelected={this.handleAnswerSelected}\n                    questionCounter={this.state.questionCounter}\n                />\n                <Button\n                    onClick={this.skipQuestion}>\n                    <Icon /> Skip\n                </Button>\n            </div>\n        );\n    }\n\n    toQuizCallback = (quizBlockNumber) => {\n        console.log(quizBlockNumber)\n\n        const quizQuestions = this.state.quizList[quizBlockNumber];\n\n        const shuffledAnswerOptions = quizQuestions.map(question =>\n            this.shuffleArray(question.answers)\n        );\n        const questionId = 1;\n        const counter = 0;\n\n        var questionCounter = 0;\n        for (var i = 0; i < quizBlockNumber; i++) {\n            questionCounter += this.state.quizList[i].length;\n        }\n        questionCounter ++;\n\n        this.setState({\n            questionId : questionId,\n            counter : counter,\n            quizQuestions : quizQuestions,\n            question: quizQuestions[0].question,\n            answerOptions: shuffledAnswerOptions[0],\n            quizFlag : 1,\n            questionCounter : questionCounter\n        })\n    };\n\n    toSlidesCallback=()=>(\n        this.setState({quizFlag : 0,\n        result : 0})\n    )\n\n\n    renderResult() {\n        return <ResultPresenter fileId={this.state.fileId} toSlidesCallback={this.toSlidesCallback} />;\n    }\n\n    renderQuizPages () {\n        return (\n            <div className=\"Quiz-page\">\n                <div className=\"Quiz-header\">\n                    {/*<img src={logo} className=\"App-logo\" alt=\"logo\" />*/}\n                    {/*<h2>React Quiz</h2>*/}\n                </div>\n                {this.state.result ? this.renderResult() : this.renderQuiz()}\n\n            </div>\n        )\n    }\n\n    renderSlides () {\n        return (\n            <div>\n                <Slides toQuizCallback={this.toQuizCallback}\n                        slides={this.state.slides}/>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.quizFlag ? this.renderQuizPages() : this.renderSlides()}\n            </div>\n\n\n        );\n    }\n}\n\nexport default PresentPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport QuizStatictic from './QuizStatistic'\nimport BackButton from './Button'\n\nfunction ResultStudent(props) {\n    return (\n        <div>\n            <CSSTransitionGroup\n                className=\"container result\"\n                component=\"div\"\n                transitionName=\"fade\"\n                transitionEnterTimeout={800}\n                transitionLeaveTimeout={500}\n                transitionAppear\n                transitionAppearTimeout={500}\n            >\n                <div>\n                    {/* Thank you for taking the quiz, your score is <strong>{props.quizResult}</strong>! */}\n                    Thank you for finishing the quiz, please go back to the slides.\n                </div>\n            </CSSTransitionGroup>\n            <BackButton toSlidesCallback={props.toSlidesCallback}/>\n        </div>\n    );\n}\n\nResultStudent.propTypes = {\n    quizResult: PropTypes.string.isRequired\n};\n\nexport default ResultStudent;\n","import React, { Component } from 'react';\nimport Quiz from '../components/Quiz';\nimport ResultStudent from '../components/ResultStudent';\nimport axios from 'axios'\nimport Slides from \"../components/Spectacle\";\nimport {BASE_URL} from \"../config/config\"\n\nclass StudentPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            counter: 0,\n            questionCounter : 1,\n            questionId: 1,\n            question: '',\n            answerOptions: [],\n            // answer: '',\n            // answersCount: {},\n            result: '',\n            fileId: props.location.query.fileId,\n            quizBlockCounter : 0,\n            quizList: props.location.query.quiz,\n            quizQuestions:props.location.query.quiz[0],\n            slides: props.location.query.slidesString,\n        };\n\n        this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\n    }\n\n    componentDidMount() {\n\n        const shuffledAnswerOptions = this.state.quizQuestions.map(question =>\n            this.shuffleArray(question.answers)\n        );\n        this.setState({\n            question: this.state.quizQuestions[0].question,\n            answerOptions: shuffledAnswerOptions[0]\n        });\n    }\n\n    shuffleArray(array) {\n        var currentIndex = array.length,\n            temporaryValue,\n            randomIndex;\n\n        // While there remain elements to shuffle...\n        while (0 !== currentIndex) {\n            // Pick a remaining element...\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n\n            // And swap it with the current element.\n            temporaryValue = array[currentIndex];\n            array[currentIndex] = array[randomIndex];\n            array[randomIndex] = temporaryValue;\n        }\n\n        return array;\n    }\n\n    handleAnswerSelected(event) {\n        this.setUserAnswer(event.currentTarget.value);\n        console.log(event.currentTarget.value);\n        if (this.state.questionId < this.state.quizQuestions.length) {\n            setTimeout(() => this.setNextQuestion(), 300);\n        } else {\n            setTimeout(() => this.setResults(), 300);\n        }\n    }\n\n    setUserAnswer(answer) {\n        var answerArray = answer.split(\" \");\n        var type = answerArray[0];\n        var questionCounter = answerArray[1];\n        // var answerContent = answerArray[2];\n        console.log(answerArray)\n        // this.setState((state, props) => ({\n        //     answersCount: {\n        //         ...state.answersCount,\n        //         [answer]: (state.answersCount[type] || 0) + 1\n        //     },\n        //     answer: type\n        // }));\n\n        //send choice to back-end\n        // const BASE_URL = document.location.origin;\n        const formData = {\n            fileId : this.state.fileId,\n            questionId : parseInt(questionCounter),\n            choice : type\n        }\n        console.log(formData)\n        axios\n            .post(BASE_URL+\"/record\", formData, {\n                headers: {\n                    \"Content-Type\": \"multipart/form-data\"\n                }\n            })\n            .then(() => {\n                console.log(\"upload success\");\n            })\n            .catch((error) => {\n                console.log(\"error\")\n            });\n    }\n\n    setNextQuestion() {\n        const counter = this.state.counter + 1;\n        const questionId = this.state.questionId + 1;\n        const questionCounter = this.state.questionCounter + 1;\n        // console.log(this.state.quizQuestions);\n        this.setState({\n            counter: counter,\n            questionId: questionId,\n            question: this.state.quizQuestions[counter].question,\n            answerOptions: this.state.quizQuestions[counter].answers,\n            answer: '',\n            questionCounter: questionCounter\n        });\n    }\n\n    // setNextPart() {\n    //     const questionId = 1;\n    //     const questionCounter = this.state.questionCounter + 1;\n    //     const counter = 0;\n    //     const quizBlockCounter = this.state.quizBlockCounter + 1;\n    //     const quizQuestions = this.state.quizList[quizBlockCounter];\n    //     const shuffledAnswerOptions = quizQuestions.map(question =>\n    //         this.shuffleArray(question.answers)\n    //     );\n    //\n    //     this.setState({\n    //         questionId : questionId,\n    //         counter : counter,\n    //         quizBlockCounter : quizBlockCounter,\n    //         quizQuestions : quizQuestions,\n    //         question: quizQuestions[0].question,\n    //         answerOptions: shuffledAnswerOptions[0],\n    //         questionCounter: questionCounter\n    //     })\n    //\n    // }\n\n    // getResults() {\n    //     const answersCount = this.state.answersCount;\n    //     const answersCountKeys = Object.keys(answersCount);\n    //     const answersCountValues = answersCountKeys.map(key => answersCount[key]);\n    //     const maxAnswerCount = Math.max.apply(null, answersCountValues);\n    //\n    //     return answersCountKeys.filter(key => answersCount[key] === maxAnswerCount);\n    // }\n\n    setResults(result) {\n        this.setState({\n            result : 1\n        });\n\n\n        // if (result.length === 1) {\n        //     this.setState({ result: result[0] });\n        // } else {\n        //     this.setState({ result: 'Undetermined' });\n        // }\n    }\n\n    renderQuiz() {\n        return (\n            <Quiz\n                answer={this.state.answer}\n                answerOptions={this.state.answerOptions}\n                questionId={this.state.questionId}\n                question={this.state.question}\n                questionTotal={this.state.quizQuestions.length}\n                onAnswerSelected={this.handleAnswerSelected}\n                questionCounter={this.state.questionCounter}\n            />\n        );\n    }\n\n\n    renderResult() {\n        return <ResultStudent quizResult={this.state.result} toSlidesCallback={this.toSlidesCallback} />;\n    }\n\n    toQuizCallback = (quizBlockNumber) => {\n        console.log(quizBlockNumber)\n\n        const quizQuestions = this.state.quizList[quizBlockNumber];\n\n        const shuffledAnswerOptions = quizQuestions.map(question =>\n            this.shuffleArray(question.answers)\n        );\n        const questionId = 1;\n        const counter = 0;\n\n        var questionCounter = 0;\n        for (var i = 0; i < quizBlockNumber; i++) {\n            questionCounter += this.state.quizList[i].length;\n        }\n        questionCounter ++;\n\n        this.setState({\n            questionId : questionId,\n            counter : counter,\n            quizQuestions : quizQuestions,\n            question: quizQuestions[0].question,\n            answerOptions: shuffledAnswerOptions[0],\n            quizFlag : 1,\n            questionCounter : questionCounter\n        })\n    };\n\n    toSlidesCallback=()=>(\n        this.setState({\n            quizFlag : 0,\n            result: 0\n        })\n    )\n\n    renderQuizPages () {\n        return (\n            <div className=\"Quiz-page\">\n                <div className=\"Quiz-header\">\n                    {/*<img src={logo} className=\"App-logo\" alt=\"logo\" />*/}\n                    {/*<h2>React Quiz</h2>*/}\n                </div>\n                {this.state.result ? this.renderResult() : this.renderQuiz()}\n\n            </div>\n        )\n    }\n\n    renderSlides () {\n        return (\n            <div>\n                <Slides toQuizCallback={this.toQuizCallback}\n                        slides={this.state.slides}/>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.quizFlag ? this.renderQuizPages() : this.renderSlides()}\n            </div>\n\n\n        );\n    }\n}\n\nexport default StudentPage;\n","import React , { Component } from  'react';\nimport logo from '../fig/logo.png';\nimport {Button, Icon} from 'antd';\nimport MyUpload from './UploadPage'\nimport PresentPage from \"./PresentPage\";\nimport StudentPage from \"./StudentPage\";\nimport Slides from \"../components/Spectacle\"\nimport quizStatistic from \"../components/QuizStatistic\"\nimport {dimValueGetter} from \"echarts/src/component/marker/markerHelper\";\n// import {\n//     BrowserRouter,\n//     Switch,\n//     Route,\n//     Link\n//   } from \"react-router-dom\";\n\nclass FirstPage extends Component {\n\n    constructor(props) {\n        super(props);\n\n    }\n\n    toLogin = () => {\n        window.location = \"/login\";\n    };\n\n    toEnterCode = ()=>{\n        window.location = \"/StudentRequestPage\";\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n\n                    <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                    <div>\n                        <Button onClick={this.toLogin} size={\"large\"} style={{marginRight: 10}}>\n                            <Icon/>I'm a Presenter\n                        </Button>\n                        <Button onClick={this.toEnterCode} size={\"large\"} style={{marginRight: 10}}>\n                            <Icon/>I'm a Student\n                        </Button>\n                    </div>\n\n                </header>\n            </div>\n        );\n    }\n\n}\n\nexport default FirstPage;\n","import React, { Component } from \"react\";\nimport { Form, Input, Button, Checkbox,message } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\nimport { UserOutlined, LockOutlined, WindowsOutlined } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport { userLoginAction } from \"../store/actions/loginActions\";\nimport \"../style/loginPageStyle.css\";\nimport logo from \"../fig/logo.png\";\nimport axios from \"axios\";\nimport {BASE_URL} from \"../config/config\"\n\n\n\nconst mapStateToProps = state => {\n    return{\n        instructorId: state.setUserName.instructorId,\n        username:state.setUserName.username\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login: (username, instructorId) => {\n      dispatch(userLoginAction(username, instructorId));\n    },\n    // loadMechanicsWork: () => {\n    //     dispatch(mechanicWorkAction({\"infotype\":\"50\"}));\n    // },\n  };\n};\n\n\n\nclass LoginPage extends Component {\n  formRef = React.createRef();\n\n  // componentWillReceiveProps(nextProps){\n  //   //invoke function with updated store\n  //   //this.foo(nextProps)\n  //   // console.log(\"last\",this.props.instructorId); // prevProps\n  //   // console.log(\"now\",nextProps.instructorId); // currentProps after updating the store\n  //   if(nextProps.instructorId!==0){\n  //     localStorage.setItem(\"isLogin\",true);\n  //     console.log(\"USer logined\")\n  //   }\n  //   }\n\n  onFinish = (values) => {\n    console.log(\"Received values of form: \", values);\n  };\n\n  handleSubmit = () => {\n\n      // let history = useHistory();\n      const { history } = this.props;\n      let email = this.props.form.getFieldValue('email')?this.props.form.getFieldValue('email'):null\n      let password = this.props.form.getFieldValue('password')?this.props.form.getFieldValue('password'):null\n      console.log(email)\n      console.log(password)\n\n      if(email === null || password === null){\n        message.error(\"All fields must be filled\")\n        return;\n      }\n\n      let params = {\n          email:email,\n          pswd : password\n      }\n\n      axios.post(BASE_URL+\"/login\",{},{params}).then(res=>{\n          console.log(res.status)\n          if(res.status === 201){\n            console.log(\"Login success\")\n            message.loading(\"Login success, directing you to HomePage\",[2],onclose=()=>{\n              this.props.login(res.data.name, res.data.instructorId);\n            localStorage.setItem(\"instructorId\", res.data.instructorId)\n            localStorage.setItem(\"username\", res.data.name)\n            \n            localStorage.setItem(\"isLogin\", 1)\n          \n            // window.location = \"/HomePage\"\n            history.push(\"/HomePage\");\n            })\n\n            \n          }\n      }).catch(err=>{\n          console.log(err)\n      })\n    \n  };\n\n  registerButtonHandler = () => {\n    window.location = \"/register\";\n  };\n\n  render() {\n    const { getFieldProps } = this.props.form;\n    const {instructorId,username} = this.props;\n\n    console.log(\"Name\",username)\n    console.log(\"ID\",instructorId)\n\n    return (\n      <div className=\"login-page-container\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <Form\n          name=\"normal_login\"\n          className=\"login-form\"\n          initialValues={{\n            remember: true,\n          }}\n          ref={this.formRef}\n        >\n          <Form.Item\n            name=\"username\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your Email!\",\n              },\n            ]}\n          >\n            <Input\n              className=\"login-input\"\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Email\"\n              {...getFieldProps(\"email\")}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your Password!\",\n              },\n            ]}\n          >\n            <Input\n              className=\"login-input\"\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              type=\"password\"\n              placeholder=\"Password\"\n              {...getFieldProps(\"password\")}\n            />\n          </Form.Item>\n          <Form.Item>\n            <Form.Item\n              className=\"remember-me-box\"\n              name=\"remember\"\n              valuePropName=\"checked\"\n              noStyle\n            >\n              <Checkbox>Remember me</Checkbox>\n            </Form.Item>\n          </Form.Item>\n\n          <Form.Item>\n            <Button\n              type=\"primary\"\n              className=\"login-form-button\"\n              onClick={this.handleSubmit}\n            >\n              Log in\n            </Button>\n            <Button\n              type=\"primary\"\n              className=\"register-button\"\n              onClick={this.registerButtonHandler}\n            >\n              Register\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\n\n export default Form.create({ name: \"LoginPage\" })(connect(mapStateToProps, mapDispatchToProps)(LoginPage))\n","import Axios from \"axios\";\nimport {BASE_URL} from \"../../config/config\"\n\n\n\nexport const ADD_USERNAME = \"ADD_USERNAME\";\n\n\nexport const userLoginAction = (username, instructorId) => {\n\n\n    let userInfo = {\n        // username:username,\n        // instructionId:instructionId\n    }\n\n    return {\n        type: ADD_USERNAME,\n        instructorId:instructorId,\n        username:username,\n    }\n};","import React, { Component } from \"react\";\nimport { Form, Input, Button, Checkbox, message } from \"antd\";\nimport { UserOutlined, LockOutlined, MailOutlined } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport \"../style/loginPageStyle.css\";\nimport { BASE_URL } from \"../config/config\";\nimport logo from \"../fig/logo.png\";\nimport axios from \"axios\"\n\nconst mapStateToProps = (state) => {};\nconst mapDispatchToProps = (dispatch) => {};\n\nclass RegisterPage extends Component {\n  onFinish = (values) => {\n    console.log(\"Received values of form: \", values);\n  };\n\n  handleSubmit = (err, values) => {\n    let username = this.props.form.getFieldValue('username')?this.props.form.getFieldValue('username'):null\n    let email = this.props.form.getFieldValue('email')?this.props.form.getFieldValue('email'):null\n    let password = this.props.form.getFieldValue('password')?this.props.form.getFieldValue('password'):null\n\n    if(email === null || password === null || username === null){\n      message.error(\"All fields must be filled\")\n      return;\n    }\n\n    let params = {\n      name: username,\n      email:email,\n      pswd : password\n  }\n\n  axios.post(BASE_URL+\"/register\",params).then(res=>{\n      console.log(res.status)\n      if(res.status === 201){\n        message.loading(\"Register success, directing you to HomePage\",[2],onclose=()=>{\n          console.log(res)\n          // this.props.login(res.data.name, res.data.instructorId);\n          localStorage.setItem(\"instructorId\", res.data.instructorId)\n          localStorage.setItem(\"username\", res.data.name)\n          localStorage.setItem(\"isLogin\", 1)\n          window.location = \"/HomePage\"\n        });\n       \n      }\n  }).catch(err=>{\n      console.log(err)\n  })\n}\n\n  backButtonHandler = () => {\n    window.location.replace(BASE_URL + \"/login\");\n  };\n\n  render() {\n    const { getFieldProps } = this.props.form;\n\n    return (\n      <div className=\"login-page-container\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <Form\n          name=\"normal_login\"\n          className=\"login-form\"\n          initialValues={{\n            remember: true,\n          }}\n          onFinish={this.onFinish}\n        \n        >\n          <Form.Item\n            name=\"username\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your Username!\",\n              },\n            ]}\n          >\n            <Input\n              className=\"login-input\"\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Username\"\n              {...getFieldProps(\"username\")}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"email\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your email!\",\n              },\n            ]}\n          >\n            <Input\n              className=\"login-input\"\n              prefix={<MailOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Email\"\n              {...getFieldProps(\"email\")}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your Password!\",\n              },\n            ]}\n          >\n            <Input\n              className=\"login-input\"\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              type=\"password\"\n              placeholder=\"Password\"\n              {...getFieldProps(\"password\")}\n            />\n          </Form.Item>\n\n          <Form.Item style={{ marginTop: \"20%\" }}>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n              onClick={this.handleSubmit}\n            >\n              Register\n            </Button>\n            <Button\n              type=\"primary\"\n              className=\"register-button\"\n              onClick={this.backButtonHandler}\n            >\n              Back\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default Form.create({ name: \"LoginPage\" })(connect(mapStateToProps, mapDispatchToProps)(RegisterPage))\n","import React, { Component } from \"react\";\nimport {Form, Input, Button, Checkbox, message, Icon} from \"antd\";\nimport {Link} from \"react-router-dom\"\nimport logo from \"../fig/logo.png\";\nimport axios from \"axios\";\nimport {BASE_URL} from \"../config/config\";\nimport separateQuestion from \"../components/Parse\";\nimport marpitConvert from \"../components/Marpit\";\n\nconst {Search} = Input;\n\nclass StudentRequestPage extends Component{\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fileId : \"\",\n            permission : false,\n            MarkDownFile : \"\",\n            display_name:'none'\n        }\n    }\n\n    onSearch = (value, event) => {\n        let params = {\n            fileId: value\n        }\n\n        axios.get(BASE_URL + \"/quizpermission\",  {params})\n            .then(res => {\n                console.log(\"AAA\", res.data);\n                this.setState({\n                    permission : res.data\n                }, this.fetchFile);\n                alert(`File ${value} found.`)\n            })\n            .catch((error) => {\n                alert(\"File doesn't exist!\")\n            })\n\n        // if (this.state.permission === true){\n        //     axios.get(BASE_URL + \"/fetch\",  {params})\n        //         .then(res => {\n        //             console.log(\"AAA\", res.data);\n        //             this.setState({\n        //                 MarkDownFile: res.data,\n        //                 fileId : value\n        //             }, this.generateSlides)\n        //             alert(`File ${value} fetched successfully.`)\n        //         })\n        //         .catch((error) => {\n        //             alert(`Fail to fetch File ${value}.`)\n        //         })\n        // }else{\n        //     alert(`Sorry, you don't have the permission to access file ${value}. Please contact the presenter.`)\n        // }\n    }\n\n    fetchFile =()=> {\n        let params = {\n            fileId: this.state.fileId\n        }\n\n        if (this.state.permission === true){\n            axios.get(BASE_URL + \"/fetch\",  {params})\n                .then(res => {\n                    console.log(\"AAA\", res.data);\n                    this.setState({\n                        MarkDownFile: res.data,\n                        fileId : this.state.fileId\n                    }, this.generateSlides)\n                    alert(`File ${this.state.fileId} fetched successfully.`)\n                })\n                .catch((error) => {\n                    alert(`Fail to fetch File ${this.state.fileId}.`)\n                })\n        }else{\n            alert(`Sorry, you don't have the permission to access file ${this.state.fileId}. Please contact the presenter.`)\n        }\n    }\n\n    generateSlides = () => {\n        this.callSeparateQuestion();\n        this.state.display_name = this.display_name();\n    }\n\n    callSeparateQuestion =()=>{\n        const data = separateQuestion(this.state.MarkDownFile, this.state.fileId);\n        console.log(data)\n        this.setState({data : data});\n        this.getMarpit();\n    }\n\n    // Marpit for download\n    getMarpit=()=>{\n        const marpitResult = marpitConvert(this.state.MarkDownFile)\n        this.setState({\n            marpitResult : marpitResult\n        })\n    }\n\n\n    // onChange = (e) => {\n    //     this.setState({fileId : e})\n    // }\n\n\n    download = () => {\n        function fakeClick(obj) {\n            var ev = document.createEvent(\"MouseEvents\");\n            ev.initMouseEvent(\"click\", true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n            obj.dispatchEvent(ev);\n        }\n        function exportRaw(name, data) {\n            var urlObject = window.URL || window.webkitURL || window;\n            var export_blob = new Blob([data]);\n            var save_link = document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n            save_link.href = urlObject.createObjectURL(export_blob);\n            save_link.download = name;\n            fakeClick(save_link);\n        }\n        exportRaw('filename.html', this.state.marpitResult);\n    }\n\n    display_name () {\n        if (this.state.display_name === 'none') {\n            this.setState({\n                display_name:'block'\n            })\n        }else if (this.state.display_name === 'block'){\n            this.setState({\n                display_name:'none'\n            })\n        }\n    };\n    \n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n\n                    <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                    {/*<input type=\"text\"/>*/}\n                    {/*<Input placeholder=\"Please enter code\" onChange={this.onChange}/>*/}\n\n                    {/*<Link to={{pathname: '/student', query: this.state.data}}>*/}\n                        <Search\n                            style={{width: 400}}\n                            placeholder=\"input shared url\"\n                            enterButton=\"Search\"\n                            size=\"large\"\n                            onSearch={this.onSearch}\n                        />\n                    <div style={{display:this.state.display_name}}>\n                    <Link to={{pathname: '/student', query: this.state.data}}>\n                        <Button onClick={this.onClick} size={\"large\"} style={{marginLeft: 10}}>\n                            <Icon/>Go to Presentation\n                        </Button>\n                    </Link>\n                    <Button onClick={this.download} size={\"large\"} style={{marginLeft: 10}}>\n                        <Icon/>Download file\n                    </Button>\n                    </div>\n                    {/*</Link>*/}\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default StudentRequestPage;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\n// import '../utils/index.css';\nimport {Link} from \"react-router-dom\";\nimport {List, Button, Skeleton, Menu, Layout} from 'antd';\nconst { Header, Content, Footer } = Layout;\n\n\nconst demoData = [\n    {title : 'demo.md'},\n    {title : 'presentation.md'},\n    {title : 'oose.md'},\n    {title : 'design pattern .md'}\n]\n\nclass UploadHistory extends React.Component {\n    state = {\n        // initLoading: true,\n        // loading: false,\n        data: [],\n        list: [],\n    };\n\n    componentDidMount() {\n        this.getData(res => {\n            this.setState({\n                // initLoading: false,\n                // data: res.results,\n                data: demoData,\n                list: demoData,\n                // list: res.results,\n            });\n        });\n    }\n\n    getData = callback => {\n        // reqwest({\n        //     url: fakeDataUrl,\n        //     type: 'json',\n        //     method: 'get',\n        //     contentType: 'application/json',\n        //     success: res => {\n        //         callback(res);\n        //     },\n        // });\n        this.setState({\n            // initLoading: false,\n            // data: res.results,\n            data: demoData,\n            list: demoData,\n            // list: res.results,\n        });\n    };\n\n    // onLoadMore = () => {\n    //     this.setState({\n    //         loading: true,\n    //         list: this.state.data.concat([...new Array(count)].map(() => ({ loading: true, name: {} }))),\n    //     });\n    //     this.getData(res => {\n    //         const data = this.state.data.concat(res.results);\n    //         this.setState(\n    //             {\n    //                 data,\n    //                 list: data,\n    //                 loading: false,\n    //             },\n    //             () => {\n    //                 // Resetting window's offsetTop so as to display react-virtualized demo underfloor.\n    //                 // In real scene, you can using public method of react-virtualized:\n    //                 // https://stackoverflow.com/questions/46700726/how-to-use-public-method-updateposition-of-react-virtualized\n    //                 window.dispatchEvent(new Event('resize'));\n    //             },\n    //         );\n    //     });\n    // };\n\n    render() {\n        const { initLoading, loading, list } = this.state;\n\n        return (\n            <div className=\"App\">\n                <Header style={{height: 0, padding: 0, position: 'fixed', zIndex: 1, width: '100%' }}>\n                    <div className=\"logo\" />\n                    <Menu theme=\"white\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\n\n                        {/*<Menu.Item key=\"1\">Upload </Menu.Item>*/}\n\n                        {/*<Menu.Item key=\"2\">History </Menu.Item>*/}\n                        <Menu.Item key=\"1\">\n                            <Link to={'/HomePage'}>Upload</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"2\">\n                            <Link to={'/history'}>History</Link>\n                        </Menu.Item>\n\n                    </Menu>\n                </Header>\n\n                <div style={{padding: 45, paddingTop: 60}}>\n                    <List margin-top={\"50px\"}\n                          className=\"demo-loadmore-list\"\n                          loading={initLoading}\n                          itemLayout=\"horizontal\"\n                        // loadMore={loadMore}\n                          dataSource={list}\n                          renderItem={item => (\n                              <List.Item\n                                  actions={[<a key=\"list-loadmore-edit\">View</a>, <a key=\"list-loadmore-more\">Download</a>]}\n                              >\n                                  <Skeleton avatar title={false} loading={item.loading} active>\n                                      <List.Item.Meta\n                                          title={<a href=\"https://ant.design\">{item.title}</a>}\n                                      />\n                                      {/*<div>content</div>*/}\n                                  </Skeleton>\n                              </List.Item>\n                          )}\n                    />\n                </div>\n\n            </div>\n\n        );\n    }\n}\n\n// render(<UploadHistory />, document.getElementById('container'));\n\n\nexport default UploadHistory;","export const isLogin = () => {\n    let isLogin = localStorage.getItem(\"isLogin\")\n    if (isLogin === \"1\") {\n        return true;\n    }else{\n        console.log(\"Return false\", isLogin)\n        return false;\n    }\n    \n}","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isLogin } from '../utils/isLogin';\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n    return (\n\n        // Show the component only when the user is logged in\n        // Otherwise, redirect the user to /signin page\n        <Route {...rest} render={props => (\n            isLogin() ?\n                <Component {...props} />\n            : <Redirect to=\"/login\" />\n        )} />\n    );\n};\n\nexport default PrivateRoute;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isLogin } from '../utils/isLogin';\n\nconst PublicRoute = ({component: Component, restricted, ...rest}) => {\n    return (\n        // restricted = false meaning public route\n        // restricted = true meaning restricted route\n        <Route {...rest} render={props => (\n            isLogin() && restricted ?\n                <Redirect to=\"/HomePage\" />\n            : <Component {...props} />\n        )} />\n    );\n};\n\nexport default PublicRoute;","// src/router/router.js\nimport React, { Component } from \"react\";\nimport { createBrowserHistory } from \"history\";\nimport { Switch, Route, Redirec, Router } from \"react-router-dom\";\nimport FirstPage from \"../pages/HomePage\";\nimport LoginPage from \"../pages/LoginPage\";\nimport RegisterPage from \"../pages/RegisterPage\";\nimport { GuardProvider, GuardedRoute } from \"react-router-guards\";\nimport getUserLoginStatus from '../utils/getUserLoginStatus';\nimport { connect } from \"react-redux\";\nimport MyUpload from \"../pages/UploadPage\";\nimport PresentPage from '../pages/PresentPage'\nimport StudentPage from \"../pages/StudentPage\";\nimport StudentRequestPage from \"../pages/StudentRequestPage\";\nimport UploadHistory from \"../pages/UploadHistory\"\nimport PrivateRoute from \"./PrivateRoute\"\nimport PublicRoute from \"./PublicRoute\"\n\nconst history = createBrowserHistory();\n\nconst mapStateToProps = state =>{\n  return{\n    instructorId: state.setUserName.instructorId\n  }\n}\n\nclass AppRouter extends Component {\n\n\n  render() {\n    const {instructorId} = this.props;\n    return (\n      <Router history={history}>\n      <Switch>\n          <PublicRoute restricted={false} component={FirstPage} path=\"/\" exact />\n          <PublicRoute restricted={false} component={LoginPage} path=\"/login\" exact />\n          <PublicRoute restricted={false} component={RegisterPage} path=\"/register\" exact />\n          <PublicRoute restricted={false} component={StudentRequestPage} path=\"/StudentRequestPage\" exact />\n          <PublicRoute restricted={false} component={StudentPage} path=\"/student\" exact />\n          <PrivateRoute component={MyUpload} path=\"/HomePage\" exact />\n          <PrivateRoute component={PresentPage} path=\"/presenter\" exact />\n          <PrivateRoute component={UploadHistory} path=\"/history\" exact />\n      </Switch>\n      </Router>\n\n\n        // <Route>\n        //   <GuardProvider>\n        //     <GuardedRoute path=\"/\" exact render={() => <Redirect to=\"/FirstPage\" />} />\n        //     <GuardedRoute\n        //       path=\"/login\"\n        //       component={LoginPage}\n        //     ></GuardedRoute>\n        //     <GuardedRoute\n        //       path=\"/register\"\n        //       component={RegisterPage}\n        //     ></GuardedRoute>\n        //     <GuardedRoute\n        //         path=\"/FirstPage\"\n        //         exact\n        //         component={FirstPage}\n        //     ></GuardedRoute>\n        //     <GuardedRoute path=\"/StudentRequestPage\" exact component={StudentRequestPage} />\n        //     {/* <GuardProvider guards={[requireLogin]}> */}\n        //     <GuardProvider>\n        //       <GuardedRoute path=\"/HomePage\" component={MyUpload} />\n        //       <GuardedRoute path=\"/presenter\" component={PresentPage}/>\n        //       <GuardedRoute path=\"/student\" component={StudentPage}/>\n        //       <GuardedRoute path=\"/history\" component={UploadHistory}/>\n            // </GuardProvider>\n            // {/* <Route path=\"/\" exact render={() => <Redirect to=\"/HomePage\" />} /> */}\n            // {/* <Route path=\"/RecordPersonTable\" component={RecordPersonTable} />\n            // <Route path=\"/AttendanceTable\" component={AttendanceTable} /> */}\n        //   </GuardProvider>\n        // </Route>\n     \n    );\n  }\n}\n\n\nexport default connect(mapStateToProps)(AppRouter)","import React, { Component } from \"react\";\nimport AppRouter from \"./router/AppRouter\"\nimport \"./App.css\";\nimport \"antd/dist/antd.css\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount(){\n    localStorage.setItem('isLogin', 0);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">    \n          <AppRouter />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ADD_USERNAME } from \"../actions/loginActions\";\n\n\nconst initialState = {\n    username: null,\n    instructorId: 0,\n};\n\nconst setUserNameReducer = (state,action) => {\n    switch (action.type) {\n        case ADD_USERNAME:\n            // const {userInfo} = action;\n            const username=action.username || \"\"\n            const instructorId=action.instructorId || 0\n\n\n            return {\n                ...state,\n                username,\n                instructorId\n            };\n\n        default:\n            return initialState;\n    }\n};\n\nexport default setUserNameReducer;","import {createStore, combineReducers, applyMiddleware} from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport setUserNameReducer from './store/reducers/login';\n// import apartmentsReducer from './store/reducers/apartments'\n\nconst rootReducer = combineReducers({\n    setUserName: setUserNameReducer\n});\n\nconst store = createStore(rootReducer, applyMiddleware(ReduxThunk));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nstore.subscribe(() => {\n  console.log('somthing: ', store.getState());\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.0eb5e1f8.png\";"],"sourceRoot":""}
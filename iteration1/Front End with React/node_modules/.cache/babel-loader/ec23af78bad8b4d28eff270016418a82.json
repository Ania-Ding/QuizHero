{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _plugin = _interopRequireDefault(require(\"../plugin\"));\n\nvar _split = _interopRequireDefault(require(\"../helpers/split\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/** @module */\n\n/**\n * Marpit heading divider plugin.\n *\n * Start a new slide page at before of headings by prepending hidden `<hr>`\n * elements.\n *\n * @alias module:markdown/heading_divider\n * @param {MarkdownIt} md markdown-it instance.\n */\n\n\nfunction headingDivider(md) {\n  const {\n    marpit\n  } = md;\n  md.core.ruler.before('marpit_slide', 'marpit_heading_divider', state => {\n    let target = marpit.options.headingDivider;\n    if (marpit.lastGlobalDirectives && Object.prototype.hasOwnProperty.call(marpit.lastGlobalDirectives, 'headingDivider')) target = marpit.lastGlobalDirectives.headingDivider;\n    if (state.inlineMode || target === false) return;\n    if (Number.isInteger(target) && target >= 1 && target <= 6) target = [...Array(target).keys()].map(i => i + 1);\n    if (!Array.isArray(target)) return;\n    const splitTag = target.map(i => `h${i}`);\n\n    const splitFunc = t => t.type === 'heading_open' && splitTag.includes(t.tag);\n\n    const newTokens = [];\n\n    for (const slideTokens of (0, _split.default)(state.tokens, splitFunc, true)) {\n      const [token] = slideTokens;\n\n      if (token && splitFunc(token) && newTokens.some(t => !t.hidden)) {\n        const hr = new state.Token('hr', '', 0);\n        hr.hidden = true;\n        hr.map = token.map;\n        newTokens.push(hr);\n      }\n\n      newTokens.push(...slideTokens);\n    }\n\n    state.tokens = newTokens;\n  });\n}\n\nvar _default = (0, _plugin.default)(headingDivider);\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/yaozixuan/Document/OOSE/my-app/node_modules/@marp-team/marpit/lib/markdown/heading_divider.js"],"names":["Object","defineProperty","exports","value","default","_plugin","_interopRequireDefault","require","_split","obj","__esModule","headingDivider","md","marpit","core","ruler","before","state","target","options","lastGlobalDirectives","prototype","hasOwnProperty","call","inlineMode","Number","isInteger","Array","keys","map","i","isArray","splitTag","splitFunc","t","type","includes","tag","newTokens","slideTokens","tokens","token","some","hidden","hr","Token","push","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _plugin = _interopRequireDefault(require(\"../plugin\"));\n\nvar _split = _interopRequireDefault(require(\"../helpers/split\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** @module */\n\n/**\n * Marpit heading divider plugin.\n *\n * Start a new slide page at before of headings by prepending hidden `<hr>`\n * elements.\n *\n * @alias module:markdown/heading_divider\n * @param {MarkdownIt} md markdown-it instance.\n */\nfunction headingDivider(md) {\n  const {\n    marpit\n  } = md;\n  md.core.ruler.before('marpit_slide', 'marpit_heading_divider', state => {\n    let target = marpit.options.headingDivider;\n    if (marpit.lastGlobalDirectives && Object.prototype.hasOwnProperty.call(marpit.lastGlobalDirectives, 'headingDivider')) target = marpit.lastGlobalDirectives.headingDivider;\n    if (state.inlineMode || target === false) return;\n    if (Number.isInteger(target) && target >= 1 && target <= 6) target = [...Array(target).keys()].map(i => i + 1);\n    if (!Array.isArray(target)) return;\n    const splitTag = target.map(i => `h${i}`);\n\n    const splitFunc = t => t.type === 'heading_open' && splitTag.includes(t.tag);\n\n    const newTokens = [];\n\n    for (const slideTokens of (0, _split.default)(state.tokens, splitFunc, true)) {\n      const [token] = slideTokens;\n\n      if (token && splitFunc(token) && newTokens.some(t => !t.hidden)) {\n        const hr = new state.Token('hr', '', 0);\n        hr.hidden = true;\n        hr.map = token.map;\n        newTokens.push(hr);\n      }\n\n      newTokens.push(...slideTokens);\n    }\n\n    state.tokens = newTokens;\n  });\n}\n\nvar _default = (0, _plugin.default)(headingDivider);\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}
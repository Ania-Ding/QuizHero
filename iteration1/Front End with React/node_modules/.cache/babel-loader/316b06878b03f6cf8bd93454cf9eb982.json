{"ast":null,"code":"import _classCallCheck from\"/Users/yaozixuan/Document/OOSE/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yaozixuan/Document/OOSE/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/yaozixuan/Document/OOSE/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/yaozixuan/Document/OOSE/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/yaozixuan/Document/OOSE/my-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/yaozixuan/Document/OOSE/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";// test.js\nimport React,{Component}from'react';var InputFileReader=/*#__PURE__*/function(_Component){_inherits(InputFileReader,_Component);function InputFileReader(){var _this;_classCallCheck(this,InputFileReader);_this=_possibleConstructorReturn(this,_getPrototypeOf(InputFileReader).call(this));_this.state={src:'',value:''};_this.handleClick=_this.handleClick.bind(_assertThisInitialized(_this));_this.inputFileChanged=_this.inputFileChanged.bind(_assertThisInitialized(_this));return _this;}_createClass(InputFileReader,[{key:\"handleClick\",value:function handleClick(){var input=this.refs.input_reader;input.click();}},{key:\"inputFileChanged\",value:function inputFileChanged(e){if(window.FileReader){var file=e.target.files[0],reader=new FileReader(),self=this;reader.onload=function(r){self.setState({src:r.target.result});};reader.readAsDataURL(file);self.setState({value:reader});}else{alert('Soryy, your browser does\\'nt support for preview');}}},{key:\"render\",value:function render(){var _this$props=this.props,accept=_this$props.accept,capture=_this$props.capture,multiple=_this$props.multiple,_this$state=this.state,src=_this$state.src,value=_this$state.value;return React.createElement(\"div\",null,React.createElement(\"img\",{src:src,height:80,width:80}),React.createElement(\"button\",{onClick:this.handleClick},\"Upload\"),React.createElement(\"input\",{type:\"file\",ref:\"input_reader\",accept:Array.isArray(accept)?accept.join(','):accept,multiple:multiple,capture:capture,style:{display:'none'},onChange:this.inputFileChanged}));}}]);return InputFileReader;}(Component);InputFileReader.defaultProps={accept:'.md',capture:true,multiple:false};export default InputFileReader;// import React, { Component } from 'react'\n// import ReactFileReader from 'react-file-reader';\n//\n// class Test extends Component {\n//     constructor() {\n//         super();\n//         this.state = {\n//             file : \"\"\n//         }\n//     }\n//\n//\n//     handleFiles = files => {\n//         this.setState({\n//             file: files\n//         })\n//         console.log(this.state.file)\n//     }\n//     render() {\n//         return(\n//             <div className=\"files\">\n//                 <ReactFileReader handleFiles={this.handleFiles}>\n//                     <button className='btn'>Upload</button>\n//                 </ReactFileReader>\n//\n//                 <p>Read</p>\n//                 <iframe src={this.state.file} frameBorder=\"0\" height=\"400\" width=\"100%\" />\n//             </div>\n//         )\n//     }\n// }\n// import marked from 'marked'\n//\n// const md = '### test'\n//\n// marked.setOptions({ // marked 设置\n//     renderer: new marked.Renderer(),\n//     gfm: true,\n//     tables: true,\n//     breaks: true,\n//     pedantic: false,\n//     sanitize: false,\n//     smartLists: true,\n//     smartypants: false\n// })\n//\n// class Test extends Component {\n//     render () {\n//         const strHtml = marked(md)\n//         return (\n//             <div>\n//                 <div>\n//                     {strHtml}\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n// export default Test","map":{"version":3,"sources":["/Users/yaozixuan/Document/OOSE/my-app/src/marked.js"],"names":["React","Component","InputFileReader","state","src","value","handleClick","bind","inputFileChanged","input","refs","input_reader","click","e","window","FileReader","file","target","files","reader","self","onload","r","setState","result","readAsDataURL","alert","props","accept","capture","multiple","Array","isArray","join","display","defaultProps"],"mappings":"8uBAAA;AAEA,MAAOA,CAAAA,KAAP,EAAiBC,SAAjB,KAAkC,OAAlC,C,GAEMC,CAAAA,e,yEACF,0BAAa,iDACT,mFACA,MAAKC,KAAL,CAAa,CACTC,GAAG,CAAE,EADI,CAETC,KAAK,CAAE,EAFE,CAAb,CAIA,MAAKC,WAAL,CAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB,CACA,MAAKC,gBAAL,CAAwB,MAAKA,gBAAL,CAAsBD,IAAtB,+BAAxB,CAPS,aAQZ,C,6EACY,CACT,GAAIE,CAAAA,KAAK,CAAG,KAAKC,IAAL,CAAUC,YAAtB,CACAF,KAAK,CAACG,KAAN,GACH,C,0DACgBC,C,CAAE,CACf,GAAGC,MAAM,CAACC,UAAV,CAAqB,CACjB,GAAIC,CAAAA,IAAI,CAAGH,CAAC,CAACI,MAAF,CAASC,KAAT,CAAe,CAAf,CAAX,CAA8BC,MAAM,CAAG,GAAIJ,CAAAA,UAAJ,EAAvC,CAAyDK,IAAI,CAAG,IAAhE,CACAD,MAAM,CAACE,MAAP,CAAgB,SAASC,CAAT,CAAW,CACvBF,IAAI,CAACG,QAAL,CAAc,CACVnB,GAAG,CAAEkB,CAAC,CAACL,MAAF,CAASO,MADJ,CAAd,EAGH,CAJD,CAKAL,MAAM,CAACM,aAAP,CAAqBT,IAArB,EACAI,IAAI,CAACG,QAAL,CAAc,CAAClB,KAAK,CAACc,MAAP,CAAd,EACH,CATD,IAUK,CACDO,KAAK,CAAC,kDAAD,CAAL,CACH,CACJ,C,uCACO,iBACkC,KAAKC,KADvC,CACIC,MADJ,aACIA,MADJ,CACYC,OADZ,aACYA,OADZ,CACqBC,QADrB,aACqBA,QADrB,aAC+D,KAAK3B,KADpE,CACgDC,GADhD,aACgDA,GADhD,CACqDC,KADrD,aACqDA,KADrD,CAEJ,MACI,gCACI,2BAAK,GAAG,CAAED,GAAV,CAAe,MAAM,CAAE,EAAvB,CAA2B,KAAK,CAAE,EAAlC,EADJ,CAEI,8BAAQ,OAAO,CAAE,KAAKE,WAAtB,WAFJ,CAGI,6BAAO,IAAI,CAAC,MAAZ,CAAmB,GAAG,CAAC,cAAvB,CAAsC,MAAM,CAAEyB,KAAK,CAACC,OAAN,CAAcJ,MAAd,EAAwBA,MAAM,CAACK,IAAP,CAAY,GAAZ,CAAxB,CAA2CL,MAAzF,CAAiG,QAAQ,CAAEE,QAA3G,CAAqH,OAAO,CAAED,OAA9H,CAAuI,KAAK,CAAE,CAACK,OAAO,CAAC,MAAT,CAA9I,CAAgK,QAAQ,CAAE,KAAK1B,gBAA/K,EAHJ,CADJ,CAOH,C,6BAtCyBP,S,EAyC9BC,eAAe,CAACiC,YAAhB,CAA+B,CAC3BP,MAAM,CAAE,KADmB,CAE3BC,OAAO,CAAE,IAFkB,CAG3BC,QAAQ,CAAE,KAHiB,CAA/B,CAcA,cAAe5B,CAAAA,eAAf,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// test.js\n\nimport React , { Component } from 'react';\nimport PropTypes from 'prop-types';\nclass InputFileReader extends Component{\n    constructor(){\n        super();\n        this.state = {\n            src: '',\n            value: ''\n        };\n        this.handleClick = this.handleClick.bind(this);\n        this.inputFileChanged = this.inputFileChanged.bind(this);\n    };\n    handleClick(){\n        let input = this.refs.input_reader;\n        input.click();\n    };\n    inputFileChanged(e){\n        if(window.FileReader){\n            let file = e.target.files[0], reader = new FileReader(), self = this;\n            reader.onload = function(r){\n                self.setState({\n                    src: r.target.result\n                });\n            }\n            reader.readAsDataURL(file);\n            self.setState({value:reader});\n        }\n        else {\n            alert('Soryy, your browser does\\'nt support for preview');\n        }\n    }\n    render(){\n        const { accept, capture, multiple } = this.props, { src, value } = this.state;\n        return(\n            <div>\n                <img src={src} height={80} width={80}/>\n                <button onClick={this.handleClick}>Upload</button>\n                <input type=\"file\" ref=\"input_reader\" accept={Array.isArray(accept) ? accept.join(',') : accept} multiple={multiple} capture={capture} style={{display:'none'}} onChange={this.inputFileChanged}/>\n            </div>\n        );\n    }\n}\n\nInputFileReader.defaultProps = {\n    accept: '.md',\n    capture: true,\n    multiple: false\n}\n\nInputFileReader.propTypes = {\n    accept: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.array\n    ]),\n    capture: PropTypes.bool,\n    multiple: PropTypes.bool\n}\nexport default InputFileReader;\n\n// import React, { Component } from 'react'\n// import ReactFileReader from 'react-file-reader';\n//\n// class Test extends Component {\n//     constructor() {\n//         super();\n//         this.state = {\n//             file : \"\"\n//         }\n//     }\n//\n//\n//     handleFiles = files => {\n//         this.setState({\n//             file: files\n//         })\n//         console.log(this.state.file)\n//     }\n//     render() {\n//         return(\n//             <div className=\"files\">\n//                 <ReactFileReader handleFiles={this.handleFiles}>\n//                     <button className='btn'>Upload</button>\n//                 </ReactFileReader>\n//\n//                 <p>Read</p>\n//                 <iframe src={this.state.file} frameBorder=\"0\" height=\"400\" width=\"100%\" />\n//             </div>\n//         )\n//     }\n// }\n\n// import marked from 'marked'\n//\n// const md = '### test'\n//\n// marked.setOptions({ // marked 设置\n//     renderer: new marked.Renderer(),\n//     gfm: true,\n//     tables: true,\n//     breaks: true,\n//     pedantic: false,\n//     sanitize: false,\n//     smartLists: true,\n//     smartypants: false\n// })\n//\n// class Test extends Component {\n//     render () {\n//         const strHtml = marked(md)\n//         return (\n//             <div>\n//                 <div>\n//                     {strHtml}\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n\n// export default Test"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _plugin = _interopRequireDefault(require(\"../plugin\"));\n\nvar _split = _interopRequireDefault(require(\"../helpers/split\"));\n\nvar _wrap_tokens = _interopRequireDefault(require(\"../helpers/wrap_tokens\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Marpit slide plugin.\n *\n * Split markdown-it tokens into the slides by horizontal rule. Each slides\n * will be wrapped by section element.\n *\n * @alias module:markdown/slide\n * @param {MarkdownIt} md markdown-it instance.\n * @param {Object} [opts]\n * @param {Object} [opts.attributes] The `<section>` element attributes by\n *     key-value pairs.\n * @param {(boolean|anchorCallback)} [opts.anchor=true] If true, assign the\n *     anchor with the page number starting from 1. You can customize anchor\n *     name by passing callback function.\n */\n\n\nfunction slide(md, opts = {}) {\n  const anchor = opts.anchor === undefined ? true : opts.anchor;\n  /**\n   * Convert slide page index into anchor string.\n   *\n   * @callback anchorCallback\n   * @param {number} index Slide page index, beginning from zero.\n   * @returns {string} The text of anchor/id attribute (without prefix `#`).\n   */\n\n  const anchorCallback = typeof anchor === 'function' ? anchor : i => anchor ? `${i + 1}` : undefined;\n  md.core.ruler.push('marpit_slide', state => {\n    if (state.inlineMode) return;\n    const splittedTokens = (0, _split.default)(state.tokens, t => t.type === 'hr', true);\n    const {\n      length: marpitSlideTotal\n    } = splittedTokens;\n    state.tokens = splittedTokens.reduce((arr, slideTokens, marpitSlide) => {\n      const firstHr = slideTokens[0] && slideTokens[0].type === 'hr' ? slideTokens[0] : undefined;\n      const mapTarget = firstHr || slideTokens.find(t => t.map);\n      return [...arr, ...(0, _wrap_tokens.default)(state.Token, 'marpit_slide', _objectSpread({}, opts.attributes || {}, {\n        tag: 'section',\n        id: anchorCallback(marpitSlide),\n        open: {\n          block: true,\n          meta: {\n            marpitSlide,\n            marpitSlideTotal,\n            marpitSlideElement: 1\n          },\n          map: mapTarget ? mapTarget.map : [0, 1]\n        },\n        close: {\n          block: true,\n          meta: {\n            marpitSlide,\n            marpitSlideTotal,\n            marpitSlideElement: -1\n          }\n        }\n      }), slideTokens.slice(firstHr ? 1 : 0))];\n    }, []);\n  });\n}\n\nvar _default = (0, _plugin.default)(slide);\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/yaozixuan/OneDrive/JHU Semester 2/OOSE/my-app/node_modules/@marp-team/marpit/lib/markdown/slide.js"],"names":["Object","defineProperty","exports","value","default","_plugin","_interopRequireDefault","require","_split","_wrap_tokens","obj","__esModule","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","slide","md","opts","anchor","undefined","anchorCallback","core","ruler","state","inlineMode","splittedTokens","tokens","t","type","marpitSlideTotal","reduce","arr","slideTokens","marpitSlide","firstHr","mapTarget","find","map","Token","attributes","tag","id","open","block","meta","marpitSlideElement","close","slice","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _plugin = _interopRequireDefault(require(\"../plugin\"));\n\nvar _split = _interopRequireDefault(require(\"../helpers/split\"));\n\nvar _wrap_tokens = _interopRequireDefault(require(\"../helpers/wrap_tokens\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Marpit slide plugin.\n *\n * Split markdown-it tokens into the slides by horizontal rule. Each slides\n * will be wrapped by section element.\n *\n * @alias module:markdown/slide\n * @param {MarkdownIt} md markdown-it instance.\n * @param {Object} [opts]\n * @param {Object} [opts.attributes] The `<section>` element attributes by\n *     key-value pairs.\n * @param {(boolean|anchorCallback)} [opts.anchor=true] If true, assign the\n *     anchor with the page number starting from 1. You can customize anchor\n *     name by passing callback function.\n */\nfunction slide(md, opts = {}) {\n  const anchor = opts.anchor === undefined ? true : opts.anchor;\n  /**\n   * Convert slide page index into anchor string.\n   *\n   * @callback anchorCallback\n   * @param {number} index Slide page index, beginning from zero.\n   * @returns {string} The text of anchor/id attribute (without prefix `#`).\n   */\n\n  const anchorCallback = typeof anchor === 'function' ? anchor : i => anchor ? `${i + 1}` : undefined;\n  md.core.ruler.push('marpit_slide', state => {\n    if (state.inlineMode) return;\n    const splittedTokens = (0, _split.default)(state.tokens, t => t.type === 'hr', true);\n    const {\n      length: marpitSlideTotal\n    } = splittedTokens;\n    state.tokens = splittedTokens.reduce((arr, slideTokens, marpitSlide) => {\n      const firstHr = slideTokens[0] && slideTokens[0].type === 'hr' ? slideTokens[0] : undefined;\n      const mapTarget = firstHr || slideTokens.find(t => t.map);\n      return [...arr, ...(0, _wrap_tokens.default)(state.Token, 'marpit_slide', _objectSpread({}, opts.attributes || {}, {\n        tag: 'section',\n        id: anchorCallback(marpitSlide),\n        open: {\n          block: true,\n          meta: {\n            marpitSlide,\n            marpitSlideTotal,\n            marpitSlideElement: 1\n          },\n          map: mapTarget ? mapTarget.map : [0, 1]\n        },\n        close: {\n          block: true,\n          meta: {\n            marpitSlide,\n            marpitSlideTotal,\n            marpitSlideElement: -1\n          }\n        }\n      }), slideTokens.slice(firstHr ? 1 : 0))];\n    }, []);\n  });\n}\n\nvar _default = (0, _plugin.default)(slide);\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}
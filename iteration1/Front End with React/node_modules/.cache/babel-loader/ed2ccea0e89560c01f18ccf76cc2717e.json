{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/** @module */\n\n/**\n * Marpit PostCSS pagination plugin.\n *\n * Marpit uses `section::after` to show the pagination on each slide. It defines\n * in the scaffold theme.\n *\n * This plugin will comment out a `content` declaration defined in any\n * `section::after` of the root, to prevent override the defined attribute for\n * paginating.\n *\n * @alias module:postcss/pagination\n */\n\n\nvar plugin = _postcss.default.plugin('marpit-postcss-pagination', function () {\n  return function (css) {\n    css.walkRules(function (rule) {\n      if (rule.selectors.some(function (selector) {\n        return /^section(?![\\w-])[^\\s>+~]*::?after$/.test(selector.replace(/\\[.*?\\]/g, ''));\n      })) rule.walkDecls('content', function (decl) {\n        if (!decl.value.includes('attr(data-marpit-pagination)')) decl.replaceWith(\"\".concat(decl.raw('before'), \"/* \").concat(decl.toString(), \"; */\"));\n      });\n    });\n  };\n});\n\nvar _default = plugin;\nexports.default = _default;","map":{"version":3,"sources":["/Users/yaozixuan/Document/OOSE/my-app/node_modules/@marp-team/marpit/lib/postcss/pagination.js"],"names":["Object","defineProperty","exports","value","default","_postcss","_interopRequireDefault","require","obj","__esModule","plugin","css","walkRules","rule","selectors","some","selector","test","replace","walkDecls","decl","includes","replaceWith","raw","toString","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,QAAQ,GAAGC,sBAAsB,CAACC,OAAO,CAAC,SAAD,CAAR,CAArC;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEJ,IAAAA,OAAO,EAAEI;AAAX,GAArC;AAAwD;AAE/F;;AAEA;;;;;;;;;;;;;;AAYA,IAAME,MAAM,GAAGL,QAAQ,CAACD,OAAT,CAAiBM,MAAjB,CAAwB,2BAAxB,EAAqD;AAAA,SAAM,UAAAC,GAAG,EAAI;AAC/EA,IAAAA,GAAG,CAACC,SAAJ,CAAc,UAAAC,IAAI,EAAI;AACpB,UAAIA,IAAI,CAACC,SAAL,CAAeC,IAAf,CAAoB,UAAAC,QAAQ;AAAA,eAAI,sCAAsCC,IAAtC,CAA2CD,QAAQ,CAACE,OAAT,CAAiB,UAAjB,EAA6B,EAA7B,CAA3C,CAAJ;AAAA,OAA5B,CAAJ,EAAmHL,IAAI,CAACM,SAAL,CAAe,SAAf,EAA0B,UAAAC,IAAI,EAAI;AACnJ,YAAI,CAACA,IAAI,CAACjB,KAAL,CAAWkB,QAAX,CAAoB,8BAApB,CAAL,EAA0DD,IAAI,CAACE,WAAL,WAAoBF,IAAI,CAACG,GAAL,CAAS,QAAT,CAApB,gBAA4CH,IAAI,CAACI,QAAL,EAA5C;AAC3D,OAFkH;AAGpH,KAJD;AAKD,GANmE;AAAA,CAArD,CAAf;;AAQA,IAAIC,QAAQ,GAAGf,MAAf;AACAR,OAAO,CAACE,OAAR,GAAkBqB,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** @module */\n\n/**\n * Marpit PostCSS pagination plugin.\n *\n * Marpit uses `section::after` to show the pagination on each slide. It defines\n * in the scaffold theme.\n *\n * This plugin will comment out a `content` declaration defined in any\n * `section::after` of the root, to prevent override the defined attribute for\n * paginating.\n *\n * @alias module:postcss/pagination\n */\nconst plugin = _postcss.default.plugin('marpit-postcss-pagination', () => css => {\n  css.walkRules(rule => {\n    if (rule.selectors.some(selector => /^section(?![\\w-])[^\\s>+~]*::?after$/.test(selector.replace(/\\[.*?\\]/g, '')))) rule.walkDecls('content', decl => {\n      if (!decl.value.includes('attr(data-marpit-pagination)')) decl.replaceWith(`${decl.raw('before')}/* ${decl.toString()}; */`);\n    });\n  });\n});\n\nvar _default = plugin;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}
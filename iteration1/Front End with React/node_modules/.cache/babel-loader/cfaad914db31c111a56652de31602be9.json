{"ast":null,"code":"var _jsxFileName = \"/Users/yaozixuan/Document/OOSE/my-app/src/marked.js\";\n// test.js\nimport React, { Component } from 'react';\nimport ReactFileReader from 'react-file-reader';\n\nclass Test extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleFile = event => {\n      const content = e.target.result;\n      console.log('file content', content); // You can set content in state and show it in render.\n    };\n\n    this.handleChangeFile = file => {\n      fileData = new FileReader();\n      fileData.onloadend = handleFile;\n      fileReader.readAsText(file);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      accept: \".txt\",\n      onChange: e => handleChangeFile(e.target.files[0]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }));\n  }\n\n} // import marked from 'marked'\n//\n// const md = '### test'\n//\n// marked.setOptions({ // marked 设置\n//     renderer: new marked.Renderer(),\n//     gfm: true,\n//     tables: true,\n//     breaks: true,\n//     pedantic: false,\n//     sanitize: false,\n//     smartLists: true,\n//     smartypants: false\n// })\n//\n// class Test extends Component {\n//     render () {\n//         const strHtml = marked(md)\n//         return (\n//             <div>\n//                 <div>\n//                     {strHtml}\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n\n\nexport default Test;","map":{"version":3,"sources":["/Users/yaozixuan/Document/OOSE/my-app/src/marked.js"],"names":["React","Component","ReactFileReader","Test","handleFile","event","content","e","target","result","console","log","handleChangeFile","file","fileData","FileReader","onloadend","fileReader","readAsText","render","files"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;;AAAA,SACzBG,UADyB,GACXC,KAAD,IAAW;AACpB,YAAMC,OAAO,GAAGC,CAAC,CAACC,MAAF,CAASC,MAAzB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA6BL,OAA7B,EAFoB,CAGpB;AACH,KALwB;;AAAA,SAOzBM,gBAPyB,GAOLC,IAAD,IAAU;AACzBC,MAAAA,QAAQ,GAAG,IAAIC,UAAJ,EAAX;AACAD,MAAAA,QAAQ,CAACE,SAAT,GAAqBZ,UAArB;AACAa,MAAAA,UAAU,CAACC,UAAX,CAAsBL,IAAtB;AACH,KAXwB;AAAA;;AAazBM,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,MAAM,EAAC,MAA1B;AAAiC,MAAA,QAAQ,EAAEZ,CAAC,IACxCK,gBAAgB,CAACL,CAAC,CAACC,MAAF,CAASY,KAAT,CAAe,CAAf,CAAD,CADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAMH;;AApBwB,C,CAuB7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAejB,IAAf","sourcesContent":["// test.js\nimport React, { Component } from 'react'\nimport ReactFileReader from 'react-file-reader';\n\nclass Test extends Component {\n    handleFile = (event) => {\n        const content = e.target.result;\n        console.log('file content',  content)\n        // You can set content in state and show it in render.\n    }\n\n    handleChangeFile = (file) => {\n        fileData = new FileReader();\n        fileData.onloadend = handleFile;\n        fileReader.readAsText(file);\n    }\n\n    render(){\n        return(\n            <div>\n                <input type=\"file\" accept=\".txt\" onChange={e =>\n                    handleChangeFile(e.target.files[0])} />\n            </div>\n        )\n    }\n}\n\n// import marked from 'marked'\n//\n// const md = '### test'\n//\n// marked.setOptions({ // marked 设置\n//     renderer: new marked.Renderer(),\n//     gfm: true,\n//     tables: true,\n//     breaks: true,\n//     pedantic: false,\n//     sanitize: false,\n//     smartLists: true,\n//     smartypants: false\n// })\n//\n// class Test extends Component {\n//     render () {\n//         const strHtml = marked(md)\n//         return (\n//             <div>\n//                 <div>\n//                     {strHtml}\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n\nexport default Test"]},"metadata":{},"sourceType":"module"}
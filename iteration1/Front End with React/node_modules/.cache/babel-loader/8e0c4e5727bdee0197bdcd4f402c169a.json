{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/yaozixuan/Document/OOSE/my-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/** @module */\n\n/**\n * Marpit PostCSS import rollup plugin.\n *\n * Rollup `@charset` and `@import` at-rule to the beginning of CSS. Marpit is\n * manipulating CSS with many PostCSS plugins, so sometimes a few at-rules\n * cannot keep specification.\n *\n * This plugin takes care of rolling up invalid at-rules.\n *\n * @alias module:postcss/import/rollup\n */\n\n\nvar plugin = _postcss.default.plugin('marpit-postcss-import-rollup', function () {\n  return function (css) {\n    var rolluped = {\n      charset: undefined,\n      imports: []\n    };\n    css.walkAtRules(function (rule) {\n      if (rule.name === 'charset') {\n        rule.remove();\n        if (!rolluped.charset) rolluped.charset = rule;\n      } else if (rule.name === 'import') {\n        rolluped.imports.push(rule.remove());\n      }\n    });\n    var first = css.first;\n    [rolluped.charset].concat(_toConsumableArray(rolluped.imports)).filter(function (r) {\n      return r;\n    }).forEach(function (rule, idx) {\n      // Strip whitespace from the beginning of first at-rule\n      var prependRule = idx === 0 ? rule.clone({\n        raws: {\n          before: undefined\n        }\n      }) : rule;\n      first.before(prependRule);\n    });\n  };\n});\n\nvar _default = plugin;\nexports.default = _default;","map":{"version":3,"sources":["/Users/yaozixuan/Document/OOSE/my-app/node_modules/@marp-team/marpit/lib/postcss/import/rollup.js"],"names":["Object","defineProperty","exports","value","default","_postcss","_interopRequireDefault","require","obj","__esModule","plugin","css","rolluped","charset","undefined","imports","walkAtRules","rule","name","remove","push","first","filter","r","forEach","idx","prependRule","clone","raws","before","_default"],"mappings":"AAAA;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,QAAQ,GAAGC,sBAAsB,CAACC,OAAO,CAAC,SAAD,CAAR,CAArC;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEJ,IAAAA,OAAO,EAAEI;AAAX,GAArC;AAAwD;AAE/F;;AAEA;;;;;;;;;;;;;AAWA,IAAME,MAAM,GAAGL,QAAQ,CAACD,OAAT,CAAiBM,MAAjB,CAAwB,8BAAxB,EAAwD;AAAA,SAAM,UAAAC,GAAG,EAAI;AAClF,QAAMC,QAAQ,GAAG;AACfC,MAAAA,OAAO,EAAEC,SADM;AAEfC,MAAAA,OAAO,EAAE;AAFM,KAAjB;AAIAJ,IAAAA,GAAG,CAACK,WAAJ,CAAgB,UAAAC,IAAI,EAAI;AACtB,UAAIA,IAAI,CAACC,IAAL,KAAc,SAAlB,EAA6B;AAC3BD,QAAAA,IAAI,CAACE,MAAL;AACA,YAAI,CAACP,QAAQ,CAACC,OAAd,EAAuBD,QAAQ,CAACC,OAAT,GAAmBI,IAAnB;AACxB,OAHD,MAGO,IAAIA,IAAI,CAACC,IAAL,KAAc,QAAlB,EAA4B;AACjCN,QAAAA,QAAQ,CAACG,OAAT,CAAiBK,IAAjB,CAAsBH,IAAI,CAACE,MAAL,EAAtB;AACD;AACF,KAPD;AALkF,QAchFE,KAdgF,GAe9EV,GAf8E,CAchFU,KAdgF;AAiBlF,KAACT,QAAQ,CAACC,OAAV,4BAAsBD,QAAQ,CAACG,OAA/B,GAAwCO,MAAxC,CAA+C,UAAAC,CAAC;AAAA,aAAIA,CAAJ;AAAA,KAAhD,EAAuDC,OAAvD,CAA+D,UAACP,IAAD,EAAOQ,GAAP,EAAe;AAC5E;AACA,UAAMC,WAAW,GAAGD,GAAG,KAAK,CAAR,GAAYR,IAAI,CAACU,KAAL,CAAW;AACzCC,QAAAA,IAAI,EAAE;AACJC,UAAAA,MAAM,EAAEf;AADJ;AADmC,OAAX,CAAZ,GAIfG,IAJL;AAKAI,MAAAA,KAAK,CAACQ,MAAN,CAAaH,WAAb;AACD,KARD;AASD,GA1BsE;AAAA,CAAxD,CAAf;;AA4BA,IAAII,QAAQ,GAAGpB,MAAf;AACAR,OAAO,CAACE,OAAR,GAAkB0B,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _postcss = _interopRequireDefault(require(\"postcss\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** @module */\n\n/**\n * Marpit PostCSS import rollup plugin.\n *\n * Rollup `@charset` and `@import` at-rule to the beginning of CSS. Marpit is\n * manipulating CSS with many PostCSS plugins, so sometimes a few at-rules\n * cannot keep specification.\n *\n * This plugin takes care of rolling up invalid at-rules.\n *\n * @alias module:postcss/import/rollup\n */\nconst plugin = _postcss.default.plugin('marpit-postcss-import-rollup', () => css => {\n  const rolluped = {\n    charset: undefined,\n    imports: []\n  };\n  css.walkAtRules(rule => {\n    if (rule.name === 'charset') {\n      rule.remove();\n      if (!rolluped.charset) rolluped.charset = rule;\n    } else if (rule.name === 'import') {\n      rolluped.imports.push(rule.remove());\n    }\n  });\n  const {\n    first\n  } = css // Rollup at-rules\n  ;\n  [rolluped.charset, ...rolluped.imports].filter(r => r).forEach((rule, idx) => {\n    // Strip whitespace from the beginning of first at-rule\n    const prependRule = idx === 0 ? rule.clone({\n      raws: {\n        before: undefined\n      }\n    }) : rule;\n    first.before(prependRule);\n  });\n});\n\nvar _default = plugin;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import _classCallCheck from\"/Users/yaozixuan/Document/OOSE/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yaozixuan/Document/OOSE/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/yaozixuan/Document/OOSE/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/yaozixuan/Document/OOSE/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/yaozixuan/Document/OOSE/my-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/yaozixuan/Document/OOSE/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";import{Upload,message,Button,Icon}from'antd';import React from\"react\";import Marpit from'@marp-team/marpit';var fs=require('fs');// const fs = require('fs');\nvar props={name:'file',action:'https://www.mocky.io/v2/5cc8019d300000980a055e76',headers:{authorization:'authorization-text'}};var marpit=new Marpit();// 2. Add theme CSS\nvar theme=\"\\n            /* @theme example */\\n\\n            section {\\n              background-color: #369;\\n              color: #fff;\\n              font-size: 30px;\\n              padding: 40px;\\n            }\\n\\n        h1,\\n        h2 {\\n          text-align: center;\\n          margin: 0;\\n        }\\n\\n        h1 {\\n          color: #8cf;\\n        }\\n        \";marpit.themeSet.default=marpit.themeSet.add(theme);var MyUpload=/*#__PURE__*/function(_React$Component){_inherits(MyUpload,_React$Component);function MyUpload(props){var _this;_classCallCheck(this,MyUpload);_this=_possibleConstructorReturn(this,_getPrototypeOf(MyUpload).call(this,props));_this.state={file:\"\",result:\"\"};_this.beforeUpload=function(file,fileList){console.log(\"FILEEE\",file);_this.setState({file:file});};_this.onChange=function(info){// console.log(\"file!!!:\",info.file)\nif(info.file.status!=='uploading'){console.log(info.file,info.fileList);}if(info.file.status==='done'){// this.convertFile();\nconsole.log(info.file.name);message.success(\"\".concat(info.file.name,\" file uploaded successfully\"));}else if(info.file.status==='error'){console.log(info.file.name);message.error(\"\".concat(info.file.name,\" file upload failed.\"));}};_this.onPreview=function(){_this.readFile(_this.state.file).then(_this.convertText);};_this.readFile=function(file){return new Promise(function(resolve,reject){var reader=new FileReader();console.log(\"1\");reader.readAsText(file);console.log(\"2\");reader.onload=function(e){// let content = e.target.result;\nresolve(this.result);console.log(\"3\");// console.log(content);\n};reader.onerror=function(e){reject(e);};});};_this.convertText=function(result){console.log(result);// 3. Render markdown\nvar _marpit$render=marpit.render(result),html=_marpit$render.html,css=_marpit$render.css;// 4. Use output in your HTML\nvar filestring=\"\\n            <!DOCTYPE html>\\n            <html><body>\\n              <style>\".concat(css,\"</style>\\n              \").concat(html,\"\\n            </body></html>\\n            \");console.log(filestring);_this.setState({result:filestring});};_this.beforeUpload.bind=_this.beforeUpload.bind(_assertThisInitialized(_this));return _this;}_createClass(MyUpload,[{key:\"render\",value:function render(){return React.createElement(\"div\",null,React.createElement(Upload,Object.assign({onChange:this.onChange,beforeUpload:this.beforeUpload,onPreview:this.onPreview},props),React.createElement(Button,null,React.createElement(Icon,{type:\"upload\"}),\" Click to Upload\")),React.createElement(\"div\",null,this.state.result));}}]);return MyUpload;}(React.Component);export default MyUpload;","map":{"version":3,"sources":["/Users/yaozixuan/Document/OOSE/my-app/src/upload.js"],"names":["Upload","message","Button","Icon","React","Marpit","fs","require","props","name","action","headers","authorization","marpit","theme","themeSet","default","add","MyUpload","state","file","result","beforeUpload","fileList","console","log","setState","onChange","info","status","success","error","onPreview","readFile","then","convertText","Promise","resolve","reject","reader","FileReader","readAsText","onload","e","onerror","render","html","css","filestring","bind","Component"],"mappings":"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","sourcesContent":["import { Upload, message, Button, Icon } from 'antd';\nimport React from \"react\";\nimport Marpit from '@marp-team/marpit'\nconst fs = require('fs');\n// const fs = require('fs');\nconst props = {\n    name: 'file',\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n    headers: {\n        authorization: 'authorization-text',\n    },\n\n\n};\n\nconst marpit = new Marpit()\n// 2. Add theme CSS\nconst theme = `\n            /* @theme example */\n\n            section {\n              background-color: #369;\n              color: #fff;\n              font-size: 30px;\n              padding: 40px;\n            }\n\n        h1,\n        h2 {\n          text-align: center;\n          margin: 0;\n        }\n\n        h1 {\n          color: #8cf;\n        }\n        `\nmarpit.themeSet.default = marpit.themeSet.add(theme)\n\n\nclass MyUpload extends React.Component{\n    constructor(props) {\n        super(props);\n        this.beforeUpload.bind = this.beforeUpload.bind(this);\n\n    }\n    state = {\n        file:\"\",\n        result:\"\"\n    }\n\n    beforeUpload = (file,fileList) => {\n        console.log(\"FILEEE\",file);\n        this.setState({\n            file:file\n        });\n    }\n    onChange = (info) => {\n        // console.log(\"file!!!:\",info.file)\n\n        if (info.file.status !== 'uploading') {\n            console.log(info.file, info.fileList);\n        }\n        if (info.file.status === 'done') {\n            // this.convertFile();\n            console.log(info.file.name);\n            message.success(`${info.file.name} file uploaded successfully`);\n        } else if (info.file.status === 'error') {\n            console.log(info.file.name);\n            message.error(`${info.file.name} file upload failed.`);\n        }\n    }\n\n    onPreview = () => {\n        this.readFile(this.state.file).then(this.convertText);\n    }\n\n    readFile=(file)=>{\n        return new Promise(function (resolve, reject) {\n            const reader = new FileReader();\n            console.log(\"1\");\n            reader.readAsText(file);\n            console.log(\"2\")\n            reader.onload = function (e) {\n                // let content = e.target.result;\n                resolve(this.result);\n                console.log(\"3\");\n                // console.log(content);\n            };\n            reader.onerror = function (e) {\n                reject(e);\n            };\n        });\n    };\n\n    convertText=(result)=> {\n        console.log(result)\n        // 3. Render markdown\n        const {html, css} = marpit.render(result);\n        // 4. Use output in your HTML\n        let filestring = `\n            <!DOCTYPE html>\n            <html><body>\n              <style>${css}</style>\n              ${html}\n            </body></html>\n            `\n        console.log(filestring)\n        ;\n        this.setState({\n            result: filestring\n        },);\n    }\n\n    render(){\n\n        return(\n            <div>\n                <Upload\n                    onChange={this.onChange}\n                    beforeUpload={this.beforeUpload}\n                    onPreview={this.onPreview}\n                    {...props}>\n\n                    <Button>\n                        <Icon type=\"upload\" /> Click to Upload\n                    </Button>\n\n                </Upload>\n\n                <div>\n                    {this.state.result}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MyUpload;"]},"metadata":{},"sourceType":"module"}
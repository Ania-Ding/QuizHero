{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/yaozixuan/Document/OOSE/my-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.marpitContainer = void 0;\n/** @module */\n\n/**\n * Marpit element class.\n *\n * @alias Element\n */\n\nvar Element =\n/**\n * Create a Element instance.\n *\n * Element instance has compatibility with a plain object that is consists by\n * `tag` key and pairs of attribute names and values. A difference is whether\n * object has been frozen.\n *\n * ```js\n * import assert from 'assert'\n * import { Element } from 'marpit'\n *\n * const obj = { tag: 'div', class: 'marpit' }\n * const elm = new Element('div', { class: 'marpit' })\n *\n * // This assertion would pass.\n * assert.deepStrictEqual(obj, { ...elm })\n * ```\n *\n * @param {string} tag Tag name\n * @param {Object} [attributes={}] Tag attributes\n */\nfunction Element(tag) {\n  var attributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  _classCallCheck(this, Element);\n\n  Object.defineProperties(this, {\n    attributes: {\n      value: attributes\n    },\n    tag: {\n      enumerable: true,\n      value: tag\n    }\n  });\n\n  for (var _i = 0, _Object$keys = Object.keys(attributes); _i < _Object$keys.length; _i++) {\n    var attr = _Object$keys[_i];\n    Object.defineProperty(this, attr, {\n      enumerable: true,\n      value: attributes[attr]\n    });\n  }\n\n  Object.freeze(this);\n};\n/**\n * Marpit's default container.\n *\n * It would output `<div class=\"marpit\"></div>`.\n *\n * @alias module:element.marpitContainer\n * @type {Element}\n */\n\n\nvar marpitContainer = new Element('div', {\n  class: 'marpit'\n});\nexports.marpitContainer = marpitContainer;\nvar _default = Element;\nexports.default = _default;","map":{"version":3,"sources":["/Users/yaozixuan/Document/OOSE/my-app/node_modules/@marp-team/marpit/lib/element.js"],"names":["Object","defineProperty","exports","value","default","marpitContainer","Element","tag","attributes","defineProperties","enumerable","keys","attr","freeze","class","_default"],"mappings":"AAAA;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBF,OAAO,CAACG,eAAR,GAA0B,KAAK,CAAjD;AAEA;;AAEA;;;;;;IAKMC,O;AACJ;;;;;;;;;;;;;;;;;;;;;AAqBA,iBAAYC,GAAZ,EAAkC;AAAA,MAAjBC,UAAiB,uEAAJ,EAAI;;AAAA;;AAChCR,EAAAA,MAAM,CAACS,gBAAP,CAAwB,IAAxB,EAA8B;AAC5BD,IAAAA,UAAU,EAAE;AACVL,MAAAA,KAAK,EAAEK;AADG,KADgB;AAI5BD,IAAAA,GAAG,EAAE;AACHG,MAAAA,UAAU,EAAE,IADT;AAEHP,MAAAA,KAAK,EAAEI;AAFJ;AAJuB,GAA9B;;AAUA,kCAAmBP,MAAM,CAACW,IAAP,CAAYH,UAAZ,CAAnB,kCAA4C;AAAvC,QAAMI,IAAI,mBAAV;AACHZ,IAAAA,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4BW,IAA5B,EAAkC;AAChCF,MAAAA,UAAU,EAAE,IADoB;AAEhCP,MAAAA,KAAK,EAAEK,UAAU,CAACI,IAAD;AAFe,KAAlC;AAID;;AAEDZ,EAAAA,MAAM,CAACa,MAAP,CAAc,IAAd;AACD,C;AAGH;;;;;;;;;;AAUA,IAAMR,eAAe,GAAG,IAAIC,OAAJ,CAAY,KAAZ,EAAmB;AACzCQ,EAAAA,KAAK,EAAE;AADkC,CAAnB,CAAxB;AAGAZ,OAAO,CAACG,eAAR,GAA0BA,eAA1B;AACA,IAAIU,QAAQ,GAAGT,OAAf;AACAJ,OAAO,CAACE,OAAR,GAAkBW,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.marpitContainer = void 0;\n\n/** @module */\n\n/**\n * Marpit element class.\n *\n * @alias Element\n */\nclass Element {\n  /**\n   * Create a Element instance.\n   *\n   * Element instance has compatibility with a plain object that is consists by\n   * `tag` key and pairs of attribute names and values. A difference is whether\n   * object has been frozen.\n   *\n   * ```js\n   * import assert from 'assert'\n   * import { Element } from 'marpit'\n   *\n   * const obj = { tag: 'div', class: 'marpit' }\n   * const elm = new Element('div', { class: 'marpit' })\n   *\n   * // This assertion would pass.\n   * assert.deepStrictEqual(obj, { ...elm })\n   * ```\n   *\n   * @param {string} tag Tag name\n   * @param {Object} [attributes={}] Tag attributes\n   */\n  constructor(tag, attributes = {}) {\n    Object.defineProperties(this, {\n      attributes: {\n        value: attributes\n      },\n      tag: {\n        enumerable: true,\n        value: tag\n      }\n    });\n\n    for (const attr of Object.keys(attributes)) {\n      Object.defineProperty(this, attr, {\n        enumerable: true,\n        value: attributes[attr]\n      });\n    }\n\n    Object.freeze(this);\n  }\n\n}\n/**\n * Marpit's default container.\n *\n * It would output `<div class=\"marpit\"></div>`.\n *\n * @alias module:element.marpitContainer\n * @type {Element}\n */\n\n\nconst marpitContainer = new Element('div', {\n  class: 'marpit'\n});\nexports.marpitContainer = marpitContainer;\nvar _default = Element;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}
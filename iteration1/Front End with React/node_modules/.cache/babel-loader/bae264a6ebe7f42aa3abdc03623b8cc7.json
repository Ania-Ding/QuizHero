{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _plugin = _interopRequireDefault(require(\"../plugin\"));\n\nvar _split = _interopRequireDefault(require(\"../helpers/split\"));\n\nvar _wrap_array = _interopRequireDefault(require(\"../helpers/wrap_array\"));\n\nvar _wrap_tokens = _interopRequireDefault(require(\"../helpers/wrap_tokens\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/** @module */\n\n/**\n * Marpit slide container plugin.\n *\n * @alias module:markdown/slide_container\n * @param {MarkdownIt} md markdown-it instance.\n */\n\n\nfunction slideContainer(md) {\n  const containers = (0, _wrap_array.default)(md.marpit.options.slideContainer);\n  if (!containers) return;\n  const target = [...containers].reverse();\n  md.core.ruler.push('marpit_slide_containers', state => {\n    if (state.inlineMode) return;\n    const newTokens = [];\n\n    for (const tokens of (0, _split.default)(state.tokens, t => t.meta && t.meta.marpitSlideElement === 1, true)) {\n      if (tokens.length > 0) newTokens.push(...target.reduce((slides, conts) => (0, _wrap_tokens.default)(state.Token, 'marpit_slide_containers', conts, slides), tokens));\n    }\n\n    state.tokens = newTokens;\n  });\n}\n\nvar _default = (0, _plugin.default)(slideContainer);\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/yaozixuan/OneDrive/JHU Semester 2/OOSE/my-app/node_modules/@marp-team/marpit/lib/markdown/slide_container.js"],"names":["Object","defineProperty","exports","value","default","_plugin","_interopRequireDefault","require","_split","_wrap_array","_wrap_tokens","obj","__esModule","slideContainer","md","containers","marpit","options","target","reverse","core","ruler","push","state","inlineMode","newTokens","tokens","t","meta","marpitSlideElement","length","reduce","slides","conts","Token","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACC,OAAO,CAAC,WAAD,CAAR,CAApC;;AAEA,IAAIC,MAAM,GAAGF,sBAAsB,CAACC,OAAO,CAAC,kBAAD,CAAR,CAAnC;;AAEA,IAAIE,WAAW,GAAGH,sBAAsB,CAACC,OAAO,CAAC,uBAAD,CAAR,CAAxC;;AAEA,IAAIG,YAAY,GAAGJ,sBAAsB,CAACC,OAAO,CAAC,wBAAD,CAAR,CAAzC;;AAEA,SAASD,sBAAT,CAAgCK,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEP,IAAAA,OAAO,EAAEO;AAAX,GAArC;AAAwD;AAE/F;;AAEA;;;;;;;;AAMA,SAASE,cAAT,CAAwBC,EAAxB,EAA4B;AAC1B,QAAMC,UAAU,GAAG,CAAC,GAAGN,WAAW,CAACL,OAAhB,EAAyBU,EAAE,CAACE,MAAH,CAAUC,OAAV,CAAkBJ,cAA3C,CAAnB;AACA,MAAI,CAACE,UAAL,EAAiB;AACjB,QAAMG,MAAM,GAAG,CAAC,GAAGH,UAAJ,EAAgBI,OAAhB,EAAf;AACAL,EAAAA,EAAE,CAACM,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmB,yBAAnB,EAA8CC,KAAK,IAAI;AACrD,QAAIA,KAAK,CAACC,UAAV,EAAsB;AACtB,UAAMC,SAAS,GAAG,EAAlB;;AAEA,SAAK,MAAMC,MAAX,IAAqB,CAAC,GAAGlB,MAAM,CAACJ,OAAX,EAAoBmB,KAAK,CAACG,MAA1B,EAAkCC,CAAC,IAAIA,CAAC,CAACC,IAAF,IAAUD,CAAC,CAACC,IAAF,CAAOC,kBAAP,KAA8B,CAA/E,EAAkF,IAAlF,CAArB,EAA8G;AAC5G,UAAIH,MAAM,CAACI,MAAP,GAAgB,CAApB,EAAuBL,SAAS,CAACH,IAAV,CAAe,GAAGJ,MAAM,CAACa,MAAP,CAAc,CAACC,MAAD,EAASC,KAAT,KAAmB,CAAC,GAAGvB,YAAY,CAACN,OAAjB,EAA0BmB,KAAK,CAACW,KAAhC,EAAuC,yBAAvC,EAAkED,KAAlE,EAAyED,MAAzE,CAAjC,EAAmHN,MAAnH,CAAlB;AACxB;;AAEDH,IAAAA,KAAK,CAACG,MAAN,GAAeD,SAAf;AACD,GATD;AAUD;;AAED,IAAIU,QAAQ,GAAG,CAAC,GAAG9B,OAAO,CAACD,OAAZ,EAAqBS,cAArB,CAAf;;AAEAX,OAAO,CAACE,OAAR,GAAkB+B,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _plugin = _interopRequireDefault(require(\"../plugin\"));\n\nvar _split = _interopRequireDefault(require(\"../helpers/split\"));\n\nvar _wrap_array = _interopRequireDefault(require(\"../helpers/wrap_array\"));\n\nvar _wrap_tokens = _interopRequireDefault(require(\"../helpers/wrap_tokens\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** @module */\n\n/**\n * Marpit slide container plugin.\n *\n * @alias module:markdown/slide_container\n * @param {MarkdownIt} md markdown-it instance.\n */\nfunction slideContainer(md) {\n  const containers = (0, _wrap_array.default)(md.marpit.options.slideContainer);\n  if (!containers) return;\n  const target = [...containers].reverse();\n  md.core.ruler.push('marpit_slide_containers', state => {\n    if (state.inlineMode) return;\n    const newTokens = [];\n\n    for (const tokens of (0, _split.default)(state.tokens, t => t.meta && t.meta.marpitSlideElement === 1, true)) {\n      if (tokens.length > 0) newTokens.push(...target.reduce((slides, conts) => (0, _wrap_tokens.default)(state.Token, 'marpit_slide_containers', conts, slides), tokens));\n    }\n\n    state.tokens = newTokens;\n  });\n}\n\nvar _default = (0, _plugin.default)(slideContainer);\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}
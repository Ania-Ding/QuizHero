{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _plugin = _interopRequireDefault(require(\"../../plugin\"));\n\nvar _inline_style = _interopRequireDefault(require(\"../../helpers/inline_style\"));\n\nvar _wrap_tokens = _interopRequireDefault(require(\"../../helpers/wrap_tokens\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Marpit advanced background image plugin.\n *\n * Support the advanced features for background image, by using `<figure>`\n * element(s) instead of CSS backgrounds. It works by creating the isolated\n * layer into inline SVG.\n *\n * @alias module:markdown/background_image/advanced\n * @param {MarkdownIt} md markdown-it instance.\n */\n\n\nfunction advancedBackground(md) {\n  md.core.ruler.after('marpit_directives_apply', 'marpit_advanced_background', state => {\n    let current;\n    const newTokens = [];\n\n    for (const t of state.tokens) {\n      if (t.type === 'marpit_inline_svg_content_open' && t.meta && t.meta.marpitBackground) {\n        current = t;\n        const {\n          height,\n          images,\n          open,\n          width\n        } = t.meta.marpitBackground;\n        open.attrSet('data-marpit-advanced-background', 'content'); // Aligned direction\n\n        const direction = t.meta.marpitBackground.direction || 'horizontal'; // Split backgrounds\n\n        const splitSide = t.meta.marpitBackground.split;\n\n        if (splitSide) {\n          open.attrSet('data-marpit-advanced-background-split', splitSide);\n          const splitBgSize = t.meta.marpitBackground.splitSize || '50%';\n          t.attrSet('width', `${100 - Number.parseFloat(splitBgSize.slice(0, -1))}%`);\n          if (splitSide === 'left') t.attrSet('x', splitBgSize);\n          const style = new _inline_style.default(open.attrGet('style'));\n          style.set('--marpit-advanced-background-split', splitBgSize);\n          open.attrSet('style', style.toString());\n        } // Add the isolated layer for background image\n\n\n        newTokens.push(...(0, _wrap_tokens.default)(state.Token, 'marpit_advanced_background_foreign_object', {\n          tag: 'foreignObject',\n          width,\n          height\n        }, (0, _wrap_tokens.default)(state.Token, 'marpit_advanced_background_section', _objectSpread({}, open.attrs.reduce((o, [k, v]) => _objectSpread({}, o, {\n          [k]: v\n        }), {}), {\n          tag: 'section',\n          id: undefined,\n          'data-marpit-advanced-background': 'background'\n        }), (0, _wrap_tokens.default)(state.Token, 'marpit_advanced_background_image_container', {\n          tag: 'div',\n          'data-marpit-advanced-background-container': true,\n          'data-marpit-advanced-background-direction': direction\n        }, (() => {\n          const imageTokens = []; // Add multiple image elements\n\n          for (const img of images) {\n            const style = new _inline_style.default({\n              'background-image': `url(\"${img.url}\")`\n            }); // Image sizing\n\n            if (img.size) style.set('background-size', img.size); // Image filter for backgrounds (Only in advanced BG)\n\n            if (img.filter) style.set('filter', img.filter);\n            imageTokens.push(...(0, _wrap_tokens.default)(state.Token, 'marpit_advanced_background_image', {\n              tag: 'figure',\n              style: style.toString()\n            }));\n          }\n\n          return imageTokens;\n        })()))), t);\n      } else if (current && t.type === 'marpit_inline_svg_content_close') {\n        const {\n          open,\n          height,\n          width\n        } = current.meta.marpitBackground; // Apply styles\n\n        const style = new _inline_style.default();\n        if (open.meta && open.meta.marpitDirectives && open.meta.marpitDirectives.color) style.set('color', open.meta.marpitDirectives.color); // Add the isolated layer for pseudo contents (e.g. Page number)\n\n        newTokens.push(t, ...(0, _wrap_tokens.default)(state.Token, 'marpit_advanced_background_foreign_object', {\n          tag: 'foreignObject',\n          width,\n          height,\n          'data-marpit-advanced-background': 'pseudo'\n        }, (0, _wrap_tokens.default)(state.Token, 'marpit_advanced_pseudo_section', {\n          tag: 'section',\n          class: open.attrGet('class'),\n          style: style.toString(),\n          'data-marpit-advanced-background': 'pseudo',\n          // For pagination styling\n          'data-marpit-pagination': open.attrGet('data-marpit-pagination'),\n          'data-marpit-pagination-total': open.attrGet('data-marpit-pagination-total')\n        })));\n        current = undefined;\n      } else {\n        newTokens.push(t);\n      }\n    }\n\n    state.tokens = newTokens;\n  });\n}\n\nvar _default = (0, _plugin.default)(advancedBackground);\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/yaozixuan/Document/OOSE/my-app/node_modules/@marp-team/marpit/lib/markdown/background_image/advanced.js"],"names":["Object","defineProperty","exports","value","default","_plugin","_interopRequireDefault","require","_inline_style","_wrap_tokens","obj","__esModule","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","advancedBackground","md","core","ruler","after","state","current","newTokens","t","tokens","type","meta","marpitBackground","height","images","open","width","attrSet","direction","splitSide","split","splitBgSize","splitSize","Number","parseFloat","slice","style","attrGet","set","toString","Token","tag","attrs","reduce","o","k","v","id","undefined","imageTokens","img","url","size","marpitDirectives","color","class","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _plugin = _interopRequireDefault(require(\"../../plugin\"));\n\nvar _inline_style = _interopRequireDefault(require(\"../../helpers/inline_style\"));\n\nvar _wrap_tokens = _interopRequireDefault(require(\"../../helpers/wrap_tokens\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Marpit advanced background image plugin.\n *\n * Support the advanced features for background image, by using `<figure>`\n * element(s) instead of CSS backgrounds. It works by creating the isolated\n * layer into inline SVG.\n *\n * @alias module:markdown/background_image/advanced\n * @param {MarkdownIt} md markdown-it instance.\n */\nfunction advancedBackground(md) {\n  md.core.ruler.after('marpit_directives_apply', 'marpit_advanced_background', state => {\n    let current;\n    const newTokens = [];\n\n    for (const t of state.tokens) {\n      if (t.type === 'marpit_inline_svg_content_open' && t.meta && t.meta.marpitBackground) {\n        current = t;\n        const {\n          height,\n          images,\n          open,\n          width\n        } = t.meta.marpitBackground;\n        open.attrSet('data-marpit-advanced-background', 'content'); // Aligned direction\n\n        const direction = t.meta.marpitBackground.direction || 'horizontal'; // Split backgrounds\n\n        const splitSide = t.meta.marpitBackground.split;\n\n        if (splitSide) {\n          open.attrSet('data-marpit-advanced-background-split', splitSide);\n          const splitBgSize = t.meta.marpitBackground.splitSize || '50%';\n          t.attrSet('width', `${100 - Number.parseFloat(splitBgSize.slice(0, -1))}%`);\n          if (splitSide === 'left') t.attrSet('x', splitBgSize);\n          const style = new _inline_style.default(open.attrGet('style'));\n          style.set('--marpit-advanced-background-split', splitBgSize);\n          open.attrSet('style', style.toString());\n        } // Add the isolated layer for background image\n\n\n        newTokens.push(...(0, _wrap_tokens.default)(state.Token, 'marpit_advanced_background_foreign_object', {\n          tag: 'foreignObject',\n          width,\n          height\n        }, (0, _wrap_tokens.default)(state.Token, 'marpit_advanced_background_section', _objectSpread({}, open.attrs.reduce((o, [k, v]) => _objectSpread({}, o, {\n          [k]: v\n        }), {}), {\n          tag: 'section',\n          id: undefined,\n          'data-marpit-advanced-background': 'background'\n        }), (0, _wrap_tokens.default)(state.Token, 'marpit_advanced_background_image_container', {\n          tag: 'div',\n          'data-marpit-advanced-background-container': true,\n          'data-marpit-advanced-background-direction': direction\n        }, (() => {\n          const imageTokens = []; // Add multiple image elements\n\n          for (const img of images) {\n            const style = new _inline_style.default({\n              'background-image': `url(\"${img.url}\")`\n            }); // Image sizing\n\n            if (img.size) style.set('background-size', img.size); // Image filter for backgrounds (Only in advanced BG)\n\n            if (img.filter) style.set('filter', img.filter);\n            imageTokens.push(...(0, _wrap_tokens.default)(state.Token, 'marpit_advanced_background_image', {\n              tag: 'figure',\n              style: style.toString()\n            }));\n          }\n\n          return imageTokens;\n        })()))), t);\n      } else if (current && t.type === 'marpit_inline_svg_content_close') {\n        const {\n          open,\n          height,\n          width\n        } = current.meta.marpitBackground; // Apply styles\n\n        const style = new _inline_style.default();\n        if (open.meta && open.meta.marpitDirectives && open.meta.marpitDirectives.color) style.set('color', open.meta.marpitDirectives.color); // Add the isolated layer for pseudo contents (e.g. Page number)\n\n        newTokens.push(t, ...(0, _wrap_tokens.default)(state.Token, 'marpit_advanced_background_foreign_object', {\n          tag: 'foreignObject',\n          width,\n          height,\n          'data-marpit-advanced-background': 'pseudo'\n        }, (0, _wrap_tokens.default)(state.Token, 'marpit_advanced_pseudo_section', {\n          tag: 'section',\n          class: open.attrGet('class'),\n          style: style.toString(),\n          'data-marpit-advanced-background': 'pseudo',\n          // For pagination styling\n          'data-marpit-pagination': open.attrGet('data-marpit-pagination'),\n          'data-marpit-pagination-total': open.attrGet('data-marpit-pagination-total')\n        })));\n        current = undefined;\n      } else {\n        newTokens.push(t);\n      }\n    }\n\n    state.tokens = newTokens;\n  });\n}\n\nvar _default = (0, _plugin.default)(advancedBackground);\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}
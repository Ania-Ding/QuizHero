{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/Users/yaozixuan/Document/OOSE/my-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _plugin = _interopRequireDefault(require(\"../plugin\"));\n\nvar _wrap_array = _interopRequireDefault(require(\"../helpers/wrap_array\"));\n\nvar _wrap_tokens = _interopRequireDefault(require(\"../helpers/wrap_tokens\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/** @module */\n\n/**\n * Marpit container plugin.\n *\n * @alias module:markdown/container\n * @param {MarkdownIt} md markdown-it instance.\n */\n\n\nfunction container(md) {\n  var containers = (0, _wrap_array.default)(md.marpit.options.container);\n  if (!containers) return;\n\n  var target = _toConsumableArray(containers).reverse();\n\n  md.core.ruler.push('marpit_containers', function (state) {\n    if (state.inlineMode) return;\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = target[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var cont = _step.value;\n        state.tokens = (0, _wrap_tokens.default)(state.Token, 'marpit_containers', cont, state.tokens);\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  });\n}\n\nvar _default = (0, _plugin.default)(container);\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/yaozixuan/Document/OOSE/my-app/node_modules/@marp-team/marpit/lib/markdown/container.js"],"names":["Object","defineProperty","exports","value","default","_plugin","_interopRequireDefault","require","_wrap_array","_wrap_tokens","obj","__esModule","container","md","containers","marpit","options","target","reverse","core","ruler","push","state","inlineMode","cont","tokens","Token","_default"],"mappings":"AAAA;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACC,OAAO,CAAC,WAAD,CAAR,CAApC;;AAEA,IAAIC,WAAW,GAAGF,sBAAsB,CAACC,OAAO,CAAC,uBAAD,CAAR,CAAxC;;AAEA,IAAIE,YAAY,GAAGH,sBAAsB,CAACC,OAAO,CAAC,wBAAD,CAAR,CAAzC;;AAEA,SAASD,sBAAT,CAAgCI,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEN,IAAAA,OAAO,EAAEM;AAAX,GAArC;AAAwD;AAE/F;;AAEA;;;;;;;;AAMA,SAASE,SAAT,CAAmBC,EAAnB,EAAuB;AACrB,MAAMC,UAAU,GAAG,CAAC,GAAGN,WAAW,CAACJ,OAAhB,EAAyBS,EAAE,CAACE,MAAH,CAAUC,OAAV,CAAkBJ,SAA3C,CAAnB;AACA,MAAI,CAACE,UAAL,EAAiB;;AACjB,MAAMG,MAAM,GAAG,mBAAIH,UAAJ,EAAgBI,OAAhB,EAAf;;AACAL,EAAAA,EAAE,CAACM,IAAH,CAAQC,KAAR,CAAcC,IAAd,CAAmB,mBAAnB,EAAwC,UAAAC,KAAK,EAAI;AAC/C,QAAIA,KAAK,CAACC,UAAV,EAAsB;AADyB;AAAA;AAAA;;AAAA;AAG/C,2BAAmBN,MAAnB;AAAA,YAAWO,IAAX;AAA2BF,QAAAA,KAAK,CAACG,MAAN,GAAe,CAAC,GAAGhB,YAAY,CAACL,OAAjB,EAA0BkB,KAAK,CAACI,KAAhC,EAAuC,mBAAvC,EAA4DF,IAA5D,EAAkEF,KAAK,CAACG,MAAxE,CAAf;AAA3B;AAH+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIhD,GAJD;AAKD;;AAED,IAAIE,QAAQ,GAAG,CAAC,GAAGtB,OAAO,CAACD,OAAZ,EAAqBQ,SAArB,CAAf;;AAEAV,OAAO,CAACE,OAAR,GAAkBuB,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _plugin = _interopRequireDefault(require(\"../plugin\"));\n\nvar _wrap_array = _interopRequireDefault(require(\"../helpers/wrap_array\"));\n\nvar _wrap_tokens = _interopRequireDefault(require(\"../helpers/wrap_tokens\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** @module */\n\n/**\n * Marpit container plugin.\n *\n * @alias module:markdown/container\n * @param {MarkdownIt} md markdown-it instance.\n */\nfunction container(md) {\n  const containers = (0, _wrap_array.default)(md.marpit.options.container);\n  if (!containers) return;\n  const target = [...containers].reverse();\n  md.core.ruler.push('marpit_containers', state => {\n    if (state.inlineMode) return;\n\n    for (const cont of target) state.tokens = (0, _wrap_tokens.default)(state.Token, 'marpit_containers', cont, state.tokens);\n  });\n}\n\nvar _default = (0, _plugin.default)(container);\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}
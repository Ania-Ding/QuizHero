{"ast":null,"code":"var _jsxFileName = \"/Users/yaozixuan/OneDrive/JHU Semester 2/OOSE/my-app/src/marp.js\";\nimport Marpit from '@marp-team/marpit';\nimport fs from 'fs';\nimport React, { Component } from \"react\";\nimport { Button, Icon, message, Upload } from \"antd\";\nimport MyUpload from \"./upload\";\nimport marked from \"./marked\"; // 1. Create instance (with options if you want)\n\nconst marpit = new Marpit(); // 2. Add theme CSS\n\nconst theme = `\n/* @theme example */\n\nsection {\n  background-color: #369;\n  color: #fff;\n  font-size: 30px;\n  padding: 40px;\n}\n\nh1,\nh2 {\n  text-align: center;\n  margin: 0;\n}\n\nh1 {\n  color: #8cf;\n}\n`;\nmarpit.themeSet.default = marpit.themeSet.add(theme); // 3. Render markdown\n\nconst markdown = `\n\n# Hello, Marpit!\n\nMarpit is the skinny framework for creating slide deck from Markdown.\n\n---\n\n## Ready to convert into PDF!\n\nYou can convert into PDF slide deck through Chrome.\n\n`;\nconst {\n  html,\n  css\n} = marpit.render(markdown); // 4. Use output in your HTML\n\nconst htmlFile = `\n<!DOCTYPE html>\n<html><body>\n  <style>${css}</style>\n  ${html}\n</body></html>\n`; // fs.writeFileSync('example.html', htmlFile.trim())\n\nclass Convert extends Component {\n  render() {\n    const htmlFile = `\n<!DOCTYPE html>\n<html><body>\n  <style>${css}</style>\n  ${html}\n</body></html>\n`;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, htmlFile));\n  }\n\n}\n\nexport default Convert; // const props = {\n//   name: 'file',\n//   action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n//   headers: {\n//     authorization: 'authorization-text',\n//   },\n//   onChange(info) {\n//     if (info.file.status !== 'uploading') {\n//       console.log(info.file, info.fileList);\n//     }\n//     if (info.file.status === 'done') {\n//       message.success(`${info.file.name} file uploaded successfully`);\n//     } else if (info.file.status === 'error') {\n//       message.error(`${info.file.name} file upload failed.`);\n//     }\n//   },\n// };\n//\n// class Convert extends React.Component{\n//   render() {\n//     return(\n//         <Convert {...{ html, css }}>\n//           <Button>\n//             <Icon type=\"convert\" /> Click to convert\n//           </Button>\n//         </Convert>\n//     )\n//   }\n// }\n// export default Convert","map":{"version":3,"sources":["/Users/yaozixuan/OneDrive/JHU Semester 2/OOSE/my-app/src/marp.js"],"names":["Marpit","fs","React","Component","Button","Icon","message","Upload","MyUpload","marked","marpit","theme","themeSet","default","add","markdown","html","css","render","htmlFile","Convert"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,OAAtB,EAA+BC,MAA/B,QAA4C,MAA5C;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;;AACA,MAAMC,MAAM,GAAG,IAAIV,MAAJ,EAAf,C,CAEA;;AACA,MAAMW,KAAK,GAAI;;;;;;;;;;;;;;;;;;;CAAf;AAoBAD,MAAM,CAACE,QAAP,CAAgBC,OAAhB,GAA0BH,MAAM,CAACE,QAAP,CAAgBE,GAAhB,CAAoBH,KAApB,CAA1B,C,CAEA;;AACA,MAAMI,QAAQ,GAAI;;;;;;;;;;;;CAAlB;AAaA,MAAM;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,IAAgBP,MAAM,CAACQ,MAAP,CAAcH,QAAd,CAAtB,C,CAEA;;AACA,MAAMI,QAAQ,GAAI;;;WAGPF,GAAI;IACXD,IAAK;;CAJT,C,CAOA;;AAEA,MAAMI,OAAN,SAAsBjB,SAAtB,CAAgC;AAC9Be,EAAAA,MAAM,GAAG;AACT,UAAMC,QAAQ,GAAI;;;WAGTF,GAAI;IACXD,IAAK;;CAJP;AAOE,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGG,QADH,CADF,CADJ;AAOD;;AAhB6B;;AAmBhC,eAAeC,OAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import Marpit from '@marp-team/marpit'\nimport fs from 'fs'\nimport React, {Component} from \"react\";\nimport {Button, Icon, message, Upload} from \"antd\";\nimport MyUpload from \"./upload\";\nimport marked from \"./marked\";\n\n// 1. Create instance (with options if you want)\nconst marpit = new Marpit()\n\n// 2. Add theme CSS\nconst theme = `\n/* @theme example */\n\nsection {\n  background-color: #369;\n  color: #fff;\n  font-size: 30px;\n  padding: 40px;\n}\n\nh1,\nh2 {\n  text-align: center;\n  margin: 0;\n}\n\nh1 {\n  color: #8cf;\n}\n`\nmarpit.themeSet.default = marpit.themeSet.add(theme)\n\n// 3. Render markdown\nconst markdown = `\n\n# Hello, Marpit!\n\nMarpit is the skinny framework for creating slide deck from Markdown.\n\n---\n\n## Ready to convert into PDF!\n\nYou can convert into PDF slide deck through Chrome.\n\n`\nconst { html, css } = marpit.render(markdown)\n\n// 4. Use output in your HTML\nconst htmlFile = `\n<!DOCTYPE html>\n<html><body>\n  <style>${css}</style>\n  ${html}\n</body></html>\n`\n// fs.writeFileSync('example.html', htmlFile.trim())\n\nclass Convert extends Component {\n  render() {\n  const htmlFile = `\n<!DOCTYPE html>\n<html><body>\n  <style>${css}</style>\n  ${html}\n</body></html>\n`\n    return (\n        <div>\n          <div>\n            {htmlFile}\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default Convert\n\n// const props = {\n//   name: 'file',\n//   action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n//   headers: {\n//     authorization: 'authorization-text',\n//   },\n//   onChange(info) {\n//     if (info.file.status !== 'uploading') {\n//       console.log(info.file, info.fileList);\n//     }\n//     if (info.file.status === 'done') {\n//       message.success(`${info.file.name} file uploaded successfully`);\n//     } else if (info.file.status === 'error') {\n//       message.error(`${info.file.name} file upload failed.`);\n//     }\n//   },\n// };\n//\n// class Convert extends React.Component{\n//   render() {\n//     return(\n//         <Convert {...{ html, css }}>\n//           <Button>\n//             <Icon type=\"convert\" /> Click to convert\n//           </Button>\n//         </Convert>\n//     )\n//   }\n// }\n\n// export default Convert"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/yaozixuan/Document/OOSE/my-app/src/marked.js\";\n// test.js\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass InputFileReader extends Component {\n  constructor() {\n    super();\n    this.state = {\n      src: '',\n      value: ''\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.inputFileChanged = this.inputFileChanged.bind(this);\n  }\n\n  handleClick() {\n    let input = this.refs.input_reader;\n    input.click();\n  }\n\n  inputFileChanged(e) {\n    if (window.FileReader) {\n      let file = e.target.files[0],\n          reader = new FileReader(),\n          self = this;\n\n      reader.onload = function (r) {\n        self.setState({\n          src: r.target.result\n        });\n      };\n\n      reader.readAsDataURL(file);\n      self.setState({\n        value: reader\n      });\n    } else {\n      alert('Soryy, your browser does\\'nt support for preview');\n    }\n  }\n\n  render() {\n    const {\n      accept,\n      capture,\n      multiple\n    } = this.props,\n          {\n      src,\n      value\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: src,\n      height: 80,\n      width: 80,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Upload\"), React.createElement(\"input\", {\n      type: \"file\",\n      ref: \"input_reader\",\n      accept: Array.isArray(accept) ? accept.join(',') : accept,\n      multiple: multiple,\n      capture: capture,\n      style: {\n        display: 'none'\n      },\n      onChange: this.inputFileChanged,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nInputFileReader.defaultProps = {\n  accept: 'md',\n  capture: true,\n  multiple: false\n};\nInputFileReader.propTypes = {\n  accept: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  capture: PropTypes.bool,\n  multiple: PropTypes.bool\n};\nexport default InputFileReader; // import React, { Component } from 'react'\n// import ReactFileReader from 'react-file-reader';\n//\n// class Test extends Component {\n//     constructor() {\n//         super();\n//         this.state = {\n//             file : \"\"\n//         }\n//     }\n//\n//\n//     handleFiles = files => {\n//         this.setState({\n//             file: files\n//         })\n//         console.log(this.state.file)\n//     }\n//     render() {\n//         return(\n//             <div className=\"files\">\n//                 <ReactFileReader handleFiles={this.handleFiles}>\n//                     <button className='btn'>Upload</button>\n//                 </ReactFileReader>\n//\n//                 <p>Read</p>\n//                 <iframe src={this.state.file} frameBorder=\"0\" height=\"400\" width=\"100%\" />\n//             </div>\n//         )\n//     }\n// }\n// import marked from 'marked'\n//\n// const md = '### test'\n//\n// marked.setOptions({ // marked 设置\n//     renderer: new marked.Renderer(),\n//     gfm: true,\n//     tables: true,\n//     breaks: true,\n//     pedantic: false,\n//     sanitize: false,\n//     smartLists: true,\n//     smartypants: false\n// })\n//\n// class Test extends Component {\n//     render () {\n//         const strHtml = marked(md)\n//         return (\n//             <div>\n//                 <div>\n//                     {strHtml}\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n// export default Test","map":{"version":3,"sources":["/Users/yaozixuan/Document/OOSE/my-app/src/marked.js"],"names":["React","Component","PropTypes","InputFileReader","constructor","state","src","value","handleClick","bind","inputFileChanged","input","refs","input_reader","click","e","window","FileReader","file","target","files","reader","self","onload","r","setState","result","readAsDataURL","alert","render","accept","capture","multiple","props","Array","isArray","join","display","defaultProps","propTypes","oneOfType","string","array","bool"],"mappings":"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","sourcesContent":["// test.js\n\nimport React , { Component } from 'react';\nimport PropTypes from 'prop-types';\nclass InputFileReader extends Component{\n    constructor(){\n        super();\n        this.state = {\n            src: '',\n            value: ''\n        };\n        this.handleClick = this.handleClick.bind(this);\n        this.inputFileChanged = this.inputFileChanged.bind(this);\n    };\n    handleClick(){\n        let input = this.refs.input_reader;\n        input.click();\n    };\n    inputFileChanged(e){\n        if(window.FileReader){\n            let file = e.target.files[0], reader = new FileReader(), self = this;\n            reader.onload = function(r){\n                self.setState({\n                    src: r.target.result\n                });\n            }\n            reader.readAsDataURL(file);\n            self.setState({value:reader});\n        }\n        else {\n            alert('Soryy, your browser does\\'nt support for preview');\n        }\n    }\n    render(){\n        const { accept, capture, multiple } = this.props, { src, value } = this.state;\n        return(\n            <div>\n                <img src={src} height={80} width={80}/>\n                <button onClick={this.handleClick}>Upload</button>\n                <input type=\"file\" ref=\"input_reader\" accept={Array.isArray(accept) ? accept.join(',') : accept} multiple={multiple} capture={capture} style={{display:'none'}} onChange={this.inputFileChanged}/>\n            </div>\n        );\n    }\n}\nInputFileReader.defaultProps = {\n    accept: 'md',\n    capture: true,\n    multiple: false\n}\nInputFileReader.propTypes = {\n    accept: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.array\n    ]),\n    capture: PropTypes.bool,\n    multiple: PropTypes.bool\n}\nexport default InputFileReader;\n\n// import React, { Component } from 'react'\n// import ReactFileReader from 'react-file-reader';\n//\n// class Test extends Component {\n//     constructor() {\n//         super();\n//         this.state = {\n//             file : \"\"\n//         }\n//     }\n//\n//\n//     handleFiles = files => {\n//         this.setState({\n//             file: files\n//         })\n//         console.log(this.state.file)\n//     }\n//     render() {\n//         return(\n//             <div className=\"files\">\n//                 <ReactFileReader handleFiles={this.handleFiles}>\n//                     <button className='btn'>Upload</button>\n//                 </ReactFileReader>\n//\n//                 <p>Read</p>\n//                 <iframe src={this.state.file} frameBorder=\"0\" height=\"400\" width=\"100%\" />\n//             </div>\n//         )\n//     }\n// }\n\n// import marked from 'marked'\n//\n// const md = '### test'\n//\n// marked.setOptions({ // marked 设置\n//     renderer: new marked.Renderer(),\n//     gfm: true,\n//     tables: true,\n//     breaks: true,\n//     pedantic: false,\n//     sanitize: false,\n//     smartLists: true,\n//     smartypants: false\n// })\n//\n// class Test extends Component {\n//     render () {\n//         const strHtml = marked(md)\n//         return (\n//             <div>\n//                 <div>\n//                     {strHtml}\n//                 </div>\n//             </div>\n//         )\n//     }\n// }\n\n// export default Test"]},"metadata":{},"sourceType":"module"}